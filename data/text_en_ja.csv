text_en,text_ja
"'External Inputs', 'External Outputs' and 'Logical Transactions', and data stores such as 'Internal Logical Files'",「外部入力」、「外部出力」、「論理トランザクション」、および「内部論理ファイル」などのデータ ストア
Data is commonly used for both singular and plural.,データは通常、単数形と複数形の両方で使用されます。
(1) omissions and imperfections found during early life cycle phases and (2) faults contained in software sufficiently mature for test or operation,(1) ライフサイクルの初期段階で見つかった欠落と不完全性、および (2) テストまたは運用のために十分に成熟したソフトウェアに含まれる障害
"(documentation) activity during which user documentation is created according to the design, tested, and revised",(ドキュメント) ユーザードキュメントが設計に従って作成され、テストされ、改訂されるアクティビティ
(entity) meaningful or significant to the business in and of itself without the presence of other entities,(エンティティ) 他のエンティティの存在がなくても、それ自体でビジネスにとって意味のある、または重要な
"(entity) not meaningful or not significant to the business in and of itself without the presence of other entities, such that an occurrence of entity X must be linked to an occurrence of entity Y, and the deletion of an occurrence of entity Y results in the deletion of all related occurrences of entity X",(エンティティ) 他のエンティティが存在しない限り、それ自体ではビジネスにとって意味がないか、または重要ではありません。つまり、エンティティ X の出現はエンティティ Y の出現にリンクされている必要があり、エンティティ Y の出現を削除すると、エンティティ X の関連するすべての出現が削除されます。
"(human-centered) structure of an information space and the semantics for accessing required task objects, system objects and other information",情報空間の（人間中心の）構造と、必要なタスク オブジェクト、システム オブジェクト、その他の情報にアクセスするためのセマンティクス
(on-screen documentation) area that responds to user input,(画面上のドキュメント) ユーザー入力に応答する領域
(on-screen documentation) list of topics from which the user chooses,(画面上のドキュメント) ユーザーが選択するトピックのリスト
[embedded software] system integration module,【組込みソフトウェア】システム統合モジュール
[HALT] highly accelerated life testing,[HALT]高加速寿命試験
[information] having either the information or a reference to the information present in the document,[情報] 文書内に存在する情報または情報への参照のいずれかを含む
[ISO 9000:2005],[ISO 9000:2005]
"[ISO 9000:2005] There are both internal and external purposes for quality assurance: within an organization, quality assurance provides confidence to management; in contractual situations, quality assurance provides confidence to the customer or others. Some quality control and quality assurance actions are interrelated. Unless requirements for quality fully reflect the needs of the user, quality assurance does not necessarily provide adequate confidence.",[ISO 9000:2005] 品質保証には内部目的と外部目的の両方があります。組織内では、品質保証は経営陣に自信を与えます。契約上の状況では、品質保証は顧客や他の人に信頼を与えます。一部の品質管理および品質保証活動は相互に関連しています。品質に対する要件がユーザーのニーズを完全に反映していない限り、品質保証は必ずしも適切な信頼を提供するとは限りません。
[ISO/IEC 17024],[ISO/IEC 17024]
[ISO/IEC 27000:2009],[ISO/IEC 27000:2009]
"[ISO/IEC Directives, Part 2]",[ISO/IEC 指令、パート 2]
[ISO/IEC TR 10000-1],[ISO/IEC TR 10000-1]
[key style],【キースタイル】
[mobile telecommunications] subscriber identity module,[移動体通信] 加入者識別モジュール
"[Output/Input] the learning gained from the process of performing the project. Lessons learned may be identified at any point. Also considered a project record, to be included in the lessons learned knowledge base.",[アウトプット/インプット] プロジェクトを実行するプロセスから得られる学習。学んだ教訓はいつでも確認できます。また、プロジェクト記録ともみなされ、教訓知識ベースに組み込まれます。
"[process] to define the architecture, system elements, interfaces, and other characteristics of a system or system element",[プロセス] システムまたはシステム要素のアーキテクチャ、システム要素、インターフェイス、およびその他の特性を定義する
"[requirements] provide storing and editing capabilities, tracking history of edition, versioning, author identification, change management, time stamping, user notification for content changes, security rights control",[要件] 保存および編集機能、編集履歴の追跡、バージョン管理、作成者の識別、変更管理、タイムスタンプ、コンテンツ変更のユーザー通知、セキュリティ権限管理を提供します。
[software] entitlement schema,[ソフトウェア] 資格スキーマ
[software] product available for purchase and use without the need to conduct development activities,[ソフトウェア] 開発活動を行うことなく購入して使用できる製品
[system] context determining the setting and circumstances of all influences upon a system,[システム] システムに対するすべての影響の設定と状況を決定するコンテキスト
"[system] fundamental concepts or properties of a system in its environment embodied in its elements, relationships, and in the principles of its design and evolution",[システム] その環境におけるシステムの基本的な概念または特性。その要素、関係、およびその設計と進化の原則に具体化される。
[system] identifiable part,[システム] 識別可能な部分
"[system] individual, team, organization, or classes thereof, having an interest in a system",[システム] システムに関心を持つ個人、チーム、組織、またはそのクラス
[system] interest in a system relevant to one or more of its stakeholders,[システム] 1 人以上の利害関係者に関連するシステムへの関心
"<documentation> including all critical information and any necessary, relevant information for the intended audience",<ドキュメント> すべての重要な情報と対象読者にとって必要な関連情報を含む
16-byte string of characters that is generated in a manner that gives a high probability that the string is unique in any context,文字列がどのようなコンテキストでも一意である可能性が高い方法で生成される 16 バイトの文字列。
A 'plan' is the information item type for all plans and 'report' is the information item type for all reports.,「プラン」はすべてのプランの情報項目タイプであり、「レポート」はすべてのレポートの情報項目タイプです。
"a bar chart of schedule information where activities are listed on the vertical axis, dates are shown on the horizontal axis, and activity durations are shown as horizontal bars placed according to start and finish dates",スケジュール情報の棒グラフ。縦軸にアクティビティがリストされ、横軸に日付が表示され、アクティビティの期間が開始日と終了日に従って配置された水平棒として表示されます。
a bar chart showing the amount of time that a resource is scheduled to work over a series of time periods. Resource availability may be depicted as a line for comparison purposes. Contrasting bars may show actual amounts of resource used as the project progresses,一連の期間にわたってリソースが作業するようにスケジュールされている時間を示す棒グラフ。リソースの可用性は、比較の目的で線として表示される場合があります。対照的なバーは、プロジェクトの進行に応じて実際に使用されるリソースの量を示す場合があります。
A base measure is functionally independent of other measures.,基本メジャーは機能的に他のメジャーから独立しています。
a best-case estimate of the time needed for a developer or team to complete a task or deliver a feature,開発者またはチームがタスクを完了するか、機能を提供するのに必要な時間の最良の場合の推定値
"A binary relationship has an arity of two. An n-ary relationship has an arity of n. (n>2) sometimes known as the ""degree"" of a relationship.",二項関係のアリティは 2 です。 n 項関係のアリティは n です。 (n>2) 関係の「程度」として知られることもあります。
A body can be an organization or part of an organization that performs the assessment.,団体は、評価を実行する組織または組織の一部です。
A box takes as its box name the function name of the function represented by the box.,ボックスは、そのボックスが表す関数の関数名をボックス名として受け取ります。
A box that represents a leaf node does not have a box detail reference.,リーフ ノードを表すボックスには、ボックス詳細参照がありません。
"A bundle can be referred to as a suite, if the products are closely related and typically integrated (such as an office suite containing a spreadsheet, word processor, presentation and other related items). Bundles can also refer to software titles that are less closely related such as a game, a virus scanner and a utility bundled together with a new computer, or to groups of entitlements, such as multiple entitlements for a backup software product.",製品が密接に関連しており、通常は統合されている場合、バンドルはスイートと呼ばれます (スプレッドシート、ワード プロセッサ、プレゼンテーション、その他の関連アイテムを含むオフィス スイートなど)。バンドルは、新しいコンピュータにバンドルされたゲーム、ウイルス スキャナ、ユーティリティなど、あまり関連性の低いソフトウェア タイトルや、バックアップ ソフトウェア製品の複数の資格など、資格のグループを指す場合もあります。
"A calculator performs some of the functions of a computer, but usually operates only with frequent human intervention.",電卓はコンピューターの機能の一部を実行しますが、通常は人間が頻繁に介入しないと動作しません。
a calendar that identifies the working days and shifts on which each specific resource is available,特定の各リソースが利用可能な稼働日とシフトを特定するカレンダー
a calendar that identifies working days and shifts that are available for scheduled activities,スケジュールされたアクティビティに利用できる稼働日とシフトを特定するカレンダー
A call arrow is attached to the bottom of a calling box.,呼び出しボックスの底部には呼び出し矢印が取り付けられています。
"A call might concern a request for service, information or advice; disruption or error reporting (incident); request for change; assignment (for instance an instruction to start an off-schedule production run); and complaint",電話は、サービス、情報、またはアドバイスの要求に関するものである場合があります。中断またはエラーの報告 (インシデント)。変更の要求。割り当て（たとえば、スケジュール外の生産実行を開始する指示）。そして苦情
A CASE tool can provide support in only selected functional areas or in a wide variety of functional areas.,CASE ツールは、選択された機能領域のみ、またはさまざまな機能領域のサポートを提供できます。
"a category of contract that involves payments to the seller for all legitimate actual costs incurred for completed work, plus an award fee representing seller profit",完了した作業に発生したすべての正当な実費と、売り手の利益を表す落札手数料の売り手への支払いを伴う契約のカテゴリー
"a category of projects that have common components significant in such projects, but are not needed or present in all projects. Application areas are usually defined in terms of either the product (i.e., by similar technologies or production methods) or the type of customer (i.e., internal versus external, government versus commercial) or industry sector (i.e., utilities, automotive, aerospace, information technologies, etc.) Application areas can overlap.",プロジェクト内で重要な共通コンポーネントを持つプロジェクトのカテゴリ。ただし、すべてのプロジェクトに必要または存在するわけではありません。アプリケーション分野は通常、製品 (つまり、類似のテクノロジーや生産方法による)、顧客の種類 (つまり、社内と社外、政府と商業) または業界部門 (つまり、公益事業、自動車、航空宇宙、情報技術など) のいずれかによって定義されます。アプリケーション分野は重複する場合があります。
"a category or rank used to distinguish items that have the same functional use (e.g., ""hammer""), but do not share the same requirements for quality (e.g., different hammers may need to withstand different amounts of force).",同じ機能的用途（例：「ハンマー」）を持つアイテムを区別するために使用されるカテゴリーまたはランク。ただし、品質要件は同じではない（例：異なるハンマーは異なる量の力に耐える必要がある場合がある）。
A CBSS can be a data processing system as seen by human users at their terminals or at equivalent machine user-interfaces. It includes hardware and all software (system software and application software) which is necessary for realizing data processing functions required by its users,CBSS は、人間のユーザーの端末または同等のマシンのユーザー インターフェイスで見られるデータ処理システムです。ユーザーが必要とするデータ処理機能を実現するために必要なハードウェアおよびすべてのソフトウェア（システムソフトウェアおよびアプリケーションソフトウェア）を含みます。
A certification body can be non-governmental or governmental (with or without regulatory authority),認証機関は非政府機関でも政府機関でも構いません（規制当局の有無にかかわらず）
a change request that has been processed through the integrated change control process and approved,統合された変更管理プロセスを通じて処理され、承認された変更リクエスト
A change to a service includes the provision of a new service or the removal of a service which is no longer required.,サービスの変更には、新しいサービスの提供または不要になったサービスの削除が含まれます。
"a chart indicating features completed over time, plus features in development, and those features in the backlog",時間の経過とともに完成した機能、開発中の機能、およびバックログ内の機能を示すグラフ
A class inherits attributes and relationships from its superclass and can define additional attributes and relationships of its own.,クラスはそのスーパークラスから属性と関係を継承し、独自の追加の属性と関係を定義できます。
"A cluster exists when an instance of the superclass can be an instance of only one of the subclasses in the set, and each instance of a subclass is an instance of the superclass.",クラスターは、スーパークラスのインスタンスがセット内のサブクラスの 1 つだけのインスタンスになることができ、サブクラスの各インスタンスがスーパークラスのインスタンスである場合に存在します。
"a code indicating a carry, an overflow, or a parity error",キャリー、オーバーフロー、またはパリティ エラーを示すコード
a coherent collection of automated procedures and data supporting a business objective,ビジネス目標をサポートする自動化された手順とデータの一貫したコレクション
a collection of hardware and software components that are needed for a CASE tool to operate,CASE ツールの動作に必要なハードウェアおよびソフトウェア コンポーネントの集合
a collection of logically related project activities that culminates in the completion of one or more deliverables,1 つ以上の成果物の完成に至る、論理的に関連したプロジェクト活動の集合
"a common type of responsibility assignment matrix that uses responsible, accountable, consult, and inform statuses to define the involvement of stakeholders in project activities",プロジェクト活動への利害関係者の関与を定義するために責任者、説明責任者、相談者、通知ステータスを使用する一般的なタイプの責任割り当てマトリックス。
a comparison of a measured defect rate to planned defect rate along with an assessment of whether or not the difference indicates a problem,測定された不良率と計画された不良率の比較と、その差が問題を示しているかどうかの評価
A compensatory model suggests that improving the more important measures (those with a higher weighting) is more likely to increase or improve the overall composite value than improving the less important ones. This model assumes that the weight (influence level) of criteria remains the same regardless of the measured level of the criteria.,補償モデルは、より重要な測定値 (重み付けが高い測定値) を改善すると、重要性の低い測定値を改善するよりも全体の複合値が増加または改善される可能性が高いことを示唆しています。このモデルは、基準の重み (影響レベル) が、基準の測定レベルに関係なく同じままであると仮定します。
a complete specification of a sequence of arithmetic operations for evaluating sine x to a given precision,サイン x を指定された精度で評価するための一連の算術演算の完全な仕様
"A component can be hardware or software and can be subdivided into other components. Component refers to a part of a whole, such as a component of a software product or a component of a software identification tag. The terms module, component, and unit are often used interchangeably or defined to be subelements of one another in different ways depending upon the context. The relationship of these terms is not standardized. A component can be independently managed or not, from the end-user or administrator's point of view",コンポーネントはハードウェアまたはソフトウェアであり、他のコンポーネントに細分化できます。コンポーネントとは、ソフトウェア製品のコンポーネントやソフトウェア識別タグのコンポーネントなど、全体の一部を指します。モジュール、コンポーネント、およびユニットという用語は、多くの場合、同じ意味で使用されたり、文脈に応じてさまざまな方法で互いの部分要素として定義されたりします。これらの用語の関係は標準化されていません。エンドユーザーまたは管理者の観点から、コンポーネントは独立して管理できるかどうかに関係なく、
"a component of a project or program management plan that describes how costs will be planned, structured, and controlled",コストをどのように計画、構造化、および制御するかを説明するプロジェクトまたはプログラム管理計画の構成要素
a component of the human resource plan that describes when and how project team members will be acquired and how long they will be needed,プロジェクト チームのメンバーをいつ、どのように獲得するか、またどのくらいの期間必要になるかを説明する人事計画の構成要素
"a component of the project management plan that describes how requirements will be analyzed, documented, and managed",要件をどのように分析、文書化、管理するかを説明するプロジェクト管理計画のコンポーネント
"a component of the project management plan that establishes the criteria and the activities for developing, monitoring, and controlling the schedule",スケジュールの作成、監視、制御のための基準と活動を確立するプロジェクト管理計画のコンポーネント。
a component of the project or program management plan that describes how a project team will acquire goods and services from outside the performing organization,プロジェクトチームが実行組織の外部から物品やサービスをどのように入手するかを説明するプロジェクトまたはプログラム管理計画の構成要素。
a component of the project or program management plan that describes how an organization's quality policies will be implemented,組織の品質ポリシーがどのように実施されるかを説明するプロジェクトまたはプログラム管理計画の構成要素
"a component of the project or program management plan that describes how the roles and responsibilities, reporting relationships and staff management will be addressed and structured",役割と責任、報告関係、スタッフ管理がどのように対処され、構造化されるかを説明するプロジェクトまたはプログラム管理計画の構成要素。
"a component of the project, program or portfolio management plan that describes how risk management activities will be structured and performed",リスク管理活動がどのように構築され、実行されるかを説明するプロジェクト、プログラム、またはポートフォリオ管理計画の構成要素。
"a component of the project, program, or portfolio management plan that describes how, when, and by whom information about the project will be administered and disseminated",プロジェクト、プログラム、またはポートフォリオ管理計画の構成要素で、プロジェクトに関する情報がいつ、どのように、誰によって管理され、広められるかを説明するもの
"A composite of four attributes: confidentiality, integrity, availability, and accountability, plus aspects of a fifth: usability, all of which have the related issue of their assurance. Security pertains to personnel, data, communications, and the physical protection of computer installations.",機密性、完全性、可用性、説明責任という 4 つの属性と、5 番目のユーザビリティの側面を組み合わせたもので、これらすべてに保証という関連する問題があります。セキュリティは、人員、データ、通信、およびコンピュータの設置の物理的保護に関係します。
"a comprehensive list of changes made during the project. This typically includes dates of the change and impacts in terms of time, cost, and risk",プロジェクト中に行われた変更の包括的なリスト。これには通常、変更の日付と、時間、コスト、リスクの観点からの影響が含まれます。
"A computational interface template comprises a signal, a stream or an operation interface signature as appropriate, a behavior specification and an environment contract specification.",計算インターフェイス テンプレートは、信号、ストリーム、または操作インターフェイスの署名 (必要に応じて)、動作仕様、および環境コントラクト仕様で構成されます。
a computer and the software it supports (operating system and applications),コンピュータとそれがサポートするソフトウェア (オペレーティング システムとアプリケーション)
A computer can consist of a stand-alone unit or several interconnected units,コンピュータは、スタンドアロン ユニットまたは複数の相互接続されたユニットで構成されます。
a computer system used in an aircraft or rapid transit system,航空機または高速輸送システムで使用されるコンピュータ システム
"A computing device can consist of a stand-alone unit, or several interconnected units. It can also be a device that provides a specific set of functions, such as a phone or a personal organizer, or more general functions such as a laptop or desktop computer.",コンピューティング デバイスは、スタンドアロン ユニットまたは複数の相互接続されたユニットで構成されます。電話やシステム手帳などの特定の機能セットを提供するデバイスや、ラップトップ コンピュータやデスクトップ コンピュータなどのより一般的な機能を提供するデバイスの場合もあります。
"a concept that is unique to each organization and includes tangible and intangible elements. Through the effective use of project, program, and portfolio management disciplines, organizations will possess the ability to employ reliable, established processes to meet enterprise objectives and obtain greater business value from their investments.",各組織に固有の、有形無形の要素を含む概念。プロジェクト、プログラム、およびポートフォリオの管理規律を効果的に使用することにより、組織は、信頼性の高い確立されたプロセスを採用して企業目標を達成し、投資からより大きなビジネス価値を得ることができるようになります。
"A concern pertains to any influence on a system in its environment, including developmental, technological, business, operational, organizational, political, economic, legal, regulatory, ecological and social influences.",懸念とは、開発、技術、ビジネス、運用、組織、政治、経済、法律、規制、生態学的、社会的な影響を含む、環境内のシステムに対するあらゆる影響に関するものです。
A concurrent system or application has many threads of control.,並行システムまたはアプリケーションには、多数の制御スレッドがあります。
"a condition or capability that must be present in a product, service, or result to satisfy a contract or other formally imposed specification",契約またはその他の正式に課された仕様を満たすために、製品、サービス、または結果に存在しなければならない条件または機能
a condition or capability that will be used to assess conformance by validating the acceptability of an attribute for the quality of a result,結果の品質に対する属性の受け入れ可能性を検証することによって適合性を評価するために使用される条件または機能
A constraint is a factor that is imposed on the solution by force or compulsion and can limit or modify the design changes.,制約は、強制または強制によってソリューションに課せられる要素であり、設計変更を制限または変更することができます。
A contract is an agreement between two or more parties regarding a course of action. The formality of a contract can range from a simple informal oral description to a formal written instrument.,契約とは、一連の行動に関する 2 つ以上の当事者間の合意です。契約の形式は、単純な非公式の口頭説明から正式な文書に至るまで多岐にわたります。
a correlation chart that uses a regression line to explain or to predict how the change in an independent variable will change a dependent variable,独立変数の変化が従属変数をどのように変化させるかを説明または予測するために回帰直線を使用する相関図
"a cost, time, quality, technical, or resource value used as a parameter, and which may be included in product specifications. Crossing the threshold should trigger some action, such as generating an exception report.",コスト、時間、品質、技術、またはリソースの値がパラメーターとして使用され、製品仕様に含まれる場合があります。しきい値を超えると、例外レポートの生成など、何らかのアクションがトリガーされます。
a count that measures a project that provides end-users with the first installation of the software,エンドユーザーにソフトウェアの最初のインストールを提供するプロジェクトを測定する数
"a count that measures the functionality provided to the end users with the first installation of the software, developed when the project is complete",プロジェクトの完了時に開発され、ソフトウェアの最初のインストール時にエンド ユーザーに提供される機能を測定するカウント
"a count that measures the work-output arising from modifications to an existing application that add, change or delete user functions delivered when the project is complete",プロジェクトの完了時に提供されるユーザー機能を追加、変更、または削除する既存のアプリケーションの変更によって生じる作業成果を測定する数。
a count that provides a measure of the functionality the application provides to the end-user,アプリケーションがエンドユーザーに提供する機能の尺度を提供するカウント
a count to determine the number of function points at the end of a project,プロジェクト終了時のファンクションポイントの数を決定するためのカウント
a count to determine the size of an interim enhancement during a new development project or an enhancement project,新規開発プロジェクトまたは拡張プロジェクト中の中間拡張のサイズを決定するためのカウント
a critical path method technique for calculating the early start and early finish dates by working forward through the schedule model from the project start date or a given point in time,プロジェクトの開始日または特定の時点からスケジュール モデルを進めて、早期の開始日と早期終了日を計算するクリティカル パス手法手法
a critical path method technique for calculating the late start and late finish dates by working backward through the schedule model from the project end date,プロジェクト終了日からスケジュール モデルを逆算して、遅い開始日と遅い終了日を計算するクリティカル パス法手法
"A customer can be internal or external to the organization. This is the entity to whom the system developer must provide proof that the system developed satisfies the system requirements specified. Customers are a subset of stakeholders. An application management organization can have customers that are internal or external business information management organizations and other application management organizations. A user or end user is a person that actually uses the application software, where a customer is a person or organization that decides about and acquires the products or services. The customer or user organization is, in its relationships with application management, represented by business information management.",顧客は組織の内部または外部の場合があります。これは、システム開発者が開発したシステムが指定されたシステム要件を満たしていることを証明する必要があるエンティティです。顧客は利害関係者の一部です。アプリケーション管理組織は、社内または社外のビジネス情報管理組織やその他のアプリケーション管理組織を顧客とすることができます。ユーザーまたはエンド ユーザーはアプリケーション ソフトウェアを実際に使用する人であり、顧客は製品またはサービスを決定し、取得する人または組織です。顧客またはユーザー組織は、アプリケーション管理との関係において、ビジネス情報管理によって代表されます。
A customer can be internal or external to the service provider's organization.,顧客は、サービス プロバイダーの組織の内部または外部に存在する場合があります。
"A data element can be a character string, or a digital or graphical element in a BFC. When 'data elements' are indicated for a BFC, the number of data elements is always greater than 0.",データ要素は、BFC 内の文字列、またはデジタル要素またはグラフィック要素にすることができます。 BFC に「データ要素」が指定されている場合、データ要素の数は常に 0 より大きくなります。
a data entity-type arrived at by Third Normal Form analysis which is not one of the main entity-types for whic the application in question has been built,問題のアプリケーションが構築された主要なエンティティ タイプの 1 つではない、第 3 正規形分析によって到達したデータ エンティティ タイプ
a data item that specifies the address of the next employee record to be processed,次に処理される従業員レコードのアドレスを指定するデータ項目
"a data item, program statement, or subprogram",データ項目、プログラムステートメント、またはサブプログラム
"A data model can be encoded and manipulated by a computer. A data model identifies the entities, domains (attributes), and relationships (associations) with other data and provides the conceptual view of the data and the relationships among data [key style]. A distinction is made between a logical (or functional) and a technical data model. A logical data model is a representation of an organization's data, organized in terms of entities and relationships and is independent of any particular data management technology. In a technical data model, it is determined in what form data are recorded in the database and in which way the data are approached.",データ モデルは、コンピューターでエンコードして操作できます。データ モデルは、エンティティ、ドメイン (属性)、および他のデータとの関係 (関連付け) を識別し、データの概念図とデータ間の関係を提供します [キー スタイル]。論理 (または機能) データ モデルと技術データ モデルは区別されます。論理データ モデルは、エンティティと関係の観点から編成された組織のデータを表現したもので、特定のデータ管理テクノロジから独立しています。テクニカル データ モデルでは、データがどのような形式でデータベースに記録されるか、およびデータにどのような方法でアプローチするかが決定されます。
a data model that illustrates the data groups as they are seen by the user,ユーザーから見たデータ グループを示すデータ モデル
a data movement type that moves a data group lying inside the functional process to persistent storage,機能プロセス内にあるデータ グループを永続ストレージに移動するデータ移動タイプ
"a data type called COLORS with possible values RED, BLUE, and YELLOW",COLORS というデータ型。可能な値は RED、BLUE、YELLOW です。
"a data type called PAIRS whose members are ordered pairs (x,y)","PAIRS と呼ばれるデータ型。そのメンバーは順序付けられたペア (x,y) です。"
"a date-certain scheduling method for a project with a specific end date, after which the value of the project declines precipitously or a penalty for non-completion is applied",特定の終了日を持つプロジェクトに対する日付確定型のスケジュール方法。その後、プロジェクトの価値が急激に低下するか、未完了に対するペナルティが適用されます。
"a decision based on price, delivery date, and quality all at the same time",価格、納期、品質を同時に考慮して決定
a decomposition technique that helps trace an undesirable effect back to its root cause,望ましくない影響をその根本原因まで追跡するのに役立つ分解手法
a defined category of BFCs,BFC の定義されたカテゴリ
"a defined function to be performed by a project team member, such as testing, filing, inspecting, coding",テスト、ファイリング、検査、コーディングなど、プロジェクト チームのメンバーが実行する定義済みの機能
"A defined process has a process description that is documented and maintained and contributes work products, measures, and other process improvement information to the organization's process assets. A project's defined process provides a basis for planning, performing, and improving the tasks and activities of the project.",定義されたプロセスには、文書化および維持されるプロセスの説明があり、作業成果物、測定値、およびその他のプロセス改善情報が組織のプロセス資産に提供されます。プロジェクトで定義されたプロセスは、プロジェクトのタスクとアクティビティを計画、実行、改善するための基礎を提供します。
"a defined systematic procedure employed by a human resource to perform an activity to produce a product or result or deliver a service, and that may employ one or more tools",製品や結果を生産したり、サービスを提供したりするための活動を実行するために人事が採用する定義された体系的な手順であり、1 つ以上のツールを使用する場合があります。
"A delegation, once made, can later be withdrawn.",委任は、一度行われた後、撤回することができます。
"a dependency between two activities, or between an activity and a milestone",2 つのアクティビティ間の依存関係、またはアクティビティとマイルストーン間の依存関係
a description of a project or product attribute and how to measure it,プロジェクトまたは製品の属性の説明とその測定方法
a description of how individual requirements meet the business need for the project,個々の要件がプロジェクトのビジネス ニーズをどのように満たすかについての説明
"a description, analogy or schematic used to represent how the communication process will be performed for the project",プロジェクトのコミュニケーションプロセスがどのように実行されるかを表すために使用される説明、類推、または概略図
a design language or requirements specification language,設計言語または要件仕様言語
a designation of whether a mapping is complete (totally mapped) or incomplete (partial),マッピングが完全（完全にマッピング）であるか不完全（部分的）であるかの指定
a device that counts the occurrences of various electrical events or measures the time between such events,さまざまな電気的イベントの発生をカウントしたり、そのようなイベント間の時間を測定したりする装置
"a diagnostic message, a diagnostic manual",診断メッセージ、診断マニュアル
"A diagram reference is composed of a model name, abbreviation and a diagram number.",図リファレンスは、モデル名、略称、図番号で構成されます。
a diagram that depicts a set of real-world entities and the logical relationships among the,一連の現実世界のエンティティとエンティティ間の論理関係を表す図。
a diagramming and calculation technique for evaluating the implications of a chain of multiple options in the presence of uncertainty,不確実性が存在する場合の複数のオプションの連鎖の影響を評価するための図表作成および計算手法
A discrete type can be an enumeration type or an integer type.,離散型には、列挙型または整数型を指定できます。
a displayed forecast of when software features will be released and how they will be grouped into releases,ソフトウェア機能がいつリリースされるか、およびそれらがどのようにリリースにグループ化されるかについての予測の表示
"a distinct, non-empty, non-ordered and non-redundant set of data attributes where each included data attribute describes complementary aspect of the same object of interest",含まれる各データ属性が同じ対象オブジェクトの相補的な側面を記述する、別個の、空ではなく、順序付けがなく、冗長でないデータ属性のセット。
"a distinct, non-empty, non-ordered and non-redundant set of data elements",個別で、空ではなく、順序付けがなく、冗長性のないデータ要素のセット
"a distinct, scheduled portion of work performed during the course of a project",プロジェクトの進行中に実行される作業のうち、明確にスケジュールされた部分
a distinctive property of the FUR that is important for identifying the functional domain to which a specific set of FUR belongs,特定の FUR セットが属する機能ドメインを識別するために重要な、FUR の特有の特性
a document containing a set of associated instructions for testing,テストに関連する一連の指示を含む文書
a document in which the results of risk analysis and risk response planning are recorded,リスク分析とリスク対応計画の結果を記録した文書
"a document issued by the project initiator or sponsor that formally authorizes the existence of a project, and provides the project manager with the authority to apply organizational resources to project activities",プロジェクトの開始者またはスポンサーによって発行され、プロジェクトの存在を正式に承認し、プロジェクト マネージャーに組織リソースをプロジェクト活動に適用する権限を与える文書
a document that graphically depicts the project team members and their interrelationships for a specific project,特定のプロジェクトにおけるプロジェクト チームのメンバーとその相互関係を図的に示す文書
"a document that provides detailed deliverable, activity, and scheduling information about each component in the work breakdown structure",作業分解構造内の各コンポーネントに関する詳細な成果物、アクティビティ、およびスケジュール情報を提供する文書
"a document that provides, for common and repeated use, rules, guidelines or characteristics for activities or their results, aimed at the achievement of the optimum degree of order in a given context",与えられた文脈において最適な程度の秩序を達成することを目的として、活動またはその結果に関するルール、ガイドライン、特性を共通かつ繰り返し使用するために提供する文書。
"a document that specifies, in a complete, precise, verifiable manner, the requirements, design, behavior, or other characteristics of a system, component, product, result, or service and, often, the procedures for determining whether these provisions have been satisfied. Examples are: requirement specification, design specification, product specification, and test specification",システム、コンポーネント、製品、結果、またはサービスの要件、設計、動作、またはその他の特性を完全、正確、検証可能な方法で指定する文書であり、多くの場合、これらの規定が満たされているかどうかを判断する手順も指定されます。例: 要件仕様、設計仕様、製品仕様、テスト仕様
"a document used in configuration management to propose, transmit, and record changes to a specification",仕様の変更を提案、伝達、記録するために構成管理で使用される文書
"a document used to record and describe or denote selected items identified during execution of a process or activity. Usually used with a modifier, such as issue, quality control, action, or defect",プロセスまたはアクティビティの実行中に特定された選択された項目を記録および説明または示すために使用される文書。通常、問題、品質管理、アクション、欠陥などの修飾語とともに使用されます。
a documented economic feasibility study used to establish validity of the benefits of a selected component lacking sufficient definition and that is used as a basis for the authorization of further project management activities,十分な定義が欠けている選択されたコンポーネントの利点の妥当性を確立するために使用され、さらなるプロジェクト管理活動の認可の基礎として使用される、文書化された経済的実現可能性調査。
"a documented list of project team members, their project roles and communication information",プロジェクト チームのメンバー、そのプロジェクトの役割、およびコミュニケーション情報の文書化されたリスト
"a documented tabulation of schedule activities that shows the activity description, activity identifier, and a sufficiently detailed scope of work description so project team members understand what work is to be performed",プロジェクト チームのメンバーがどのような作業を実行するかを理解できるように、アクティビティの説明、アクティビティ ID、および十分に詳細な作業範囲の説明を示す、スケジュール アクティビティの文書化された表
a facilitated workshop technique that helps determine critical characteristics for new product development,新製品開発の重要な特性を決定するのに役立つ、促進されたワークショップ手法
"a factor in the planning process that is considered to be true, real, or certain, without proof or demonstration",証拠も実証もなく、真実、現実、または確実であると考えられる計画プロセスの要素
"a factor which attempts to take into account the influence on application size of technical and quality requirements, which can be used to derive the adjusted size",技術要件と品質要件のアプリケーション サイズへの影響を考慮しようとする係数。調整されたサイズを導き出すために使用できます。
A failure can be produced when a fault is encountered.,障害が発生すると、障害が発生する可能性があります。
a family of related standardized interfaces,関連する標準化されたインターフェースのファミリー
"A fault, if encountered, can cause a failure. Faults can occur in specifications when they are not correct.",障害が発生すると、障害が発生する可能性があります。仕様が正しくない場合、欠陥が発生する可能性があります。
a financial analysis tool used to determine the benefits provided by a project against its costs,コストに対してプロジェクトによってもたらされる利益を判断するために使用される財務分析ツール
"a fixed date imposed on a schedule activity or schedule milestone, usually in the form of a ""start no earlier than"" and ""finish no later than"" date",スケジュールアクティビティまたはスケジュールマイルストーンに課せられる固定日付。通常は「次の日付までに開始」および「次の日付までに終了」の形式で表されます。
"A fixed-price contract, but with a special provision allowing for pre-defined final adjustments to the contract pric due to changed conditions, such as inflation changes, or cost increases (or decreases) for specific commodities",固定価格契約ですが、インフレの変化や特定の商品のコスト増加（または減少）などの条件変更に応じて、契約価格の事前定義された最終調整を可能にする特別条項が付いています。
a flag or semaphore,フラグまたはセマフォ
"A flow can be used to abstract over, for example, the exact structure of a sequence of interactions, or over a continuous interaction including the special case of an analogue information flow.",フローを使用すると、たとえば、一連のインタラクションの正確な構造、またはアナログ情報フローの特殊なケースを含む連続的なインタラクションを抽象化できます。
A foreign key results from the migration of the parent or generic entity's primary key through a generalization structure or a relationship. [key style],外部キーは、一般化構造または関係を介した親または汎用エンティティの主キーの移行によって生成されます。 【キースタイル】
a form of communication in which a producer task sends a message to a consumer task and waits for the consumer to accept the message,プロデューサー タスクがコンシューマー タスクにメッセージを送信し、コンシューマーがメッセージを受け入れるのを待つ通信の形式
"a form of functional size measurement (FSM) that measures the functional size of software development, enhancement and maintenance activities associated with business applications, from the customer's point of view",機能サイズ測定 (FSM) の一種で、ビジネス アプリケーションに関連するソフトウェア開発、機能拡張、保守活動の機能サイズを顧客の観点から測定します。
"a form of project life cycle in which the project scope, and the time and cost required to deliver that scope, are determined as early in the life cycle as possible",プロジェクトの範囲と、その範囲を実現するために必要な時間とコストが、ライフサイクルのできるだけ早い段階で決定されるプロジェクト ライフ サイクルの形式。
a formal or informal approach to elicit information from stakeholders by talking to them directly,利害関係者と直接対話して情報を引き出す公式または非公式のアプローチ
"a formal proposal to modify any document, deliverable, or baseline",文書、成果物、またはベースラインを変更するための正式な提案
"a formally chartered group responsible for reviewing, evaluating, approving, delaying, or rejecting changes to a project, and for recording and communicating such decisions",プロジェクトへの変更をレビュー、評価、承認、遅延、または拒否し、そのような決定を記録して伝達する責任を負う、正式に認可されたグループ
a formally documented change request that is submitted for approval to the integrated change control process,統合された変更管理プロセスの承認のために提出される、正式に文書化された変更リクエスト
"a function does not need to be callable by the end user (e.g., automatic backup or data saving).",エンドユーザーが関数を呼び出すことができる必要はありません (自動バックアップやデータ保存など)。
a function point count carried out at the beginning of a project,プロジェクトの開始時に実行される機能ポイントのカウント
a function that differs in form and/or logical processing from every other function provided by a certain application,特定のアプリケーションによって提供される他のすべての機能とは形式および/または論理処理が異なる機能
"A functional user requirement ""Maintain Customers"" consists of the following BFCs: ""Add a new customer"", ""Report Customer Purchases"", and ""Change Customer Details"". A collection of logically related business data is maintained by the software as ""Customer Details"".",機能的なユーザー要件「顧客の維持」は、「新しい顧客の追加」、「顧客の購入の報告」、および「顧客の詳細の変更」の BFC で構成されます。論理的に関連するビジネス データの集合は、ソフトウェアによって「顧客詳細」として維持されます。
"a fundamental thing of relevance to the user, about which information is kept",ユーザーに関連する基本的なものであり、その情報が保持されます。
"a general concept of conforming to a rule, standard, law, or requirement such that the assessment of compliance results in a binomial result stated as ""compliant"" or ""noncompliant""",規則、標準、法律、または要件に準拠するという一般的な概念。準拠の評価により「準拠」または「非準拠」と表現される二項結果が得られます。
"a general data gathering and creativity technique that can be used to identify risks, ideas, or solutions to issues by using a group of team members or subject-matter experts",チームメンバーまたは対象分野の専門家のグループを利用して、リスク、アイデア、または問題の解決策を特定するために使用できる一般的なデータ収集および創造性のテクニック
"a graphic display of process data over time and against established control limits, which has a centerline that assists in detecting a trend of plotted values toward either control limit",確立された管理限界に対するプロセス データの経時的なグラフィック表示。いずれかの管理限界に向かうプロット値の傾向を検出するのに役立つ中心線があります。
"a graphic display of schedule-related information. In the typical bar chart, schedule activities or work breakdown structure components are listed down the left side of the chart, dates are shown across the top, and activity durations are shown as date-placed horizontal bars",スケジュール関連情報のグラフィック表示。一般的な棒グラフでは、スケジュール活動または作業分解構造のコンポーネントがグラフの左側にリストされ、日付が上部に表示され、活動期間が日付が配置された水平棒として表示されます。
a graphical display of the logical relationships among the project schedule activities,プロジェクト スケジュールのアクティビティ間の論理関係をグラフィカルに表示する
"a graphical representation of situations showing causal influences, time ordering of events, and other relationships among variables and outcomes",因果関係の影響、出来事の時間的順序、変数と結果間のその他の関係を示す状況のグラフィック表現
a grid for mapping the probability of each risk occurrence and its impact on project objectives if that risk occurs,各リスクの発生確率と、そのリスクが発生した場合のプロジェクト目標への影響をマッピングするためのグリッド
a grid that shows the project resources assigned to each work package,各作業パッケージに割り当てられたプロジェクト リソースを表示するグリッド
a group creativity technique that allows large numbers of ideas to be classified into groups for review and analysis,レビューと分析のために多数のアイデアをグループに分類できるグループ創造性テクニック
a group of potential causes of risk,リスクの潜在的な原因のグループ
"a group of related projects, subprograms and program activities managed in a coordinated way to obtain benefits not available from managing them individually",個別に管理することでは得られない利点を得るために、調整された方法で管理される、関連するプロジェクト、サブプログラム、およびプログラム活動のグループ。
"A hazard in ISO Guide 73:2009 is an instance of a risk source. A fault, an error, or a failure in the context of reliability can be a risk source. A threat in the context of security, a threat agent, or an adverse action can be a risk source.",ISO ガイド 73:2009 におけるハザードは、リスク源の一例です。信頼性の観点からの障害、エラー、障害はリスク源となる可能性があります。セキュリティの観点からの脅威、脅威エージェント、または有害な行為は、リスク源となる可能性があります。
"A hazardous situation in ISO/IEC Guide 51 and IEC 61508-4 is an instance of a dangerous condition. A concept of dangerous conditions is introduced in order to cover not only hazardous situations in the safety context but also errors in the reliability, integrity, confidentiality, or dependability contexts and other states of a system which can lead to adverse consequences. Occurrences of failures in the context of reliability often, but not always, lead to dangerous conditions. A dangerous condition therefore has attributes, at least, a) the associated adverse consequences, b) the trigger events that lead to the dangerous condition, and c) the trigger events that lead to the adverse consequences from the dangerous condition.",ISO/IEC ガイド 51 および IEC 61508-4 における危険な状況は、危険な状態の一例です。危険な状態の概念は、安全性に関する危険な状況だけでなく、信頼性、完全性、機密性、信頼性に関するエラーや、悪影響をもたらす可能性のあるシステムのその他の状態もカバーするために導入されています。信頼性の観点から故障が発生すると、常にではありませんが、危険な状態につながることがよくあります。したがって、危険な状態には、少なくとも、a) 関連する悪影響、b) 危険な状態を引き起こすトリガーイベント、および c) 危険な状態からの悪影響を引き起こすトリガーイベントの属性があります。
a hierarchical decomposition of the total scope of work to be carried out by the project team to accomplish the project objectives and create the required deliverables,プロジェクトの目標を達成し、必要な成果物を作成するためにプロジェクト チームが実行する作業の全範囲を階層的に分解したもの
"a hierarchical organization where each employee has one clear superior, and staff are grouped by areas of specialization and managed by a person with expertise in that area",各従業員に明確な上司を1人設け、専門分野ごとにスタッフをグループ化し、その分野の専門知識を有する者が管理する階層型組織
a hierarchical representation of resources by category and type,カテゴリとタイプごとのリソースの階層表現
a hierarchical representation of risks according to their risk categories,リスクカテゴリに応じたリスクの階層表現
A hierarchical representation of the project organization that illustrates the relationship between project activities and the organizational units that will perform those activities,プロジェクト活動とそれらの活動を実行する組織単位との関係を示すプロジェクト組織の階層表現。
a high-level or complex user story to be refined into more detailed user stories,より詳細なユーザー ストーリーに洗練される高レベルまたは複雑なユーザー ストーリー
A hybrid computer can use or produce analog data and discrete data.,ハイブリッド コンピューターは、アナログ データと離散データを使用または生成できます。
A job consists of one or more job steps.,ジョブは 1 つ以上のジョブ ステップで構成されます。
"A key attribute of SQA is the objectivity of the SQA function with respect to the project. The SQA function can also be organizationally independent of the project; that is, free from technical, managerial, and financial pressures from the project.",SQA の重要な特性は、プロジェクトに関する SQA 機能の客観性です。 SQA 機能は組織的にプロジェクトから独立することもできます。つまり、プロジェクトからの技術的、管理的、財務的プレッシャーから解放されます。
a language for computer-assisted instruction or hardware design,コンピュータ支援による命令またはハードウェア設計のための言語
"a language, often a machine-processible combination of natural and formal language, used to express the requirements, design, behavior, or other characteristics of a system or component",システムやコンポーネントの要件、設計、動作、またはその他の特性を表現するために使用される言語。多くの場合、自然言語と形式言語の機械処理可能な組み合わせです。
a large and frequently updated display of project information that is continually visible to the project team and other stakeholders,プロジェクト チームや他の利害関係者が継続的に閲覧できる、プロジェクト情報が頻繁に更新される大規模な表示
a large erroneous commit and its associated back-out operatio,大規模な誤ったコミットとそれに関連するバックアウト操作
"a limiting factor that affects the execution of a project, program, portfolio, or process",プロジェクト、プログラム、ポートフォリオ、またはプロセスの実行に影響を与える制限要因
a list identifying all project milestones and normally indicates whether the milestone is mandatory or optional,すべてのプロジェクトのマイルストーンを識別するリスト。通常、マイルストーンが必須かオプションかを示します。
"a list of faults in a system or component, and the tests that have been designed to detect them",システムまたはコンポーネントの障害のリスト、およびそれらを検出するために設計されたテスト
"a list of options displayed by a data processing system, from which the user can select an action to be initiated",データ処理システムによって表示されるオプションのリスト。ユーザーはそこから開始するアクションを選択できます。
"a listing of product requirements and deliverables to be completed, written as stories, and prioritized by the business to manage and organize the project's work",プロジェクトの作業を管理および整理するために、企業がストーリーとして記述し、優先順位を付けた、完了すべき製品要件と成果物のリスト
a logical file,論理ファイル
a logical group of permanent data seen from the perspective of the user,ユーザーの観点から見た永続データの論理グループ
a logical group of permanent data seen from the perspective of the user that an application uses and maintains,アプリケーションが使用および維持する、ユーザーの観点から見た永続データの論理グループ
a logical group of permanent data seen from the perspective of the user that an application uses but that a different application maintains,ユーザーの観点から見た、アプリケーションが使用するが別のア​​プリケーションが維持する永続データの論理グループ
"a logical grouping of project management inputs, tools and techniques, and outputs. The project management process groups include initiating processes, planning processes, executing processes, monitoring and controlling processes, and closing processes. Project management process groups are not project phases",プロジェクト管理のインプット、ツールとテクニック、アウトプットを論理的にグループ化したもの。プロジェクト管理プロセス グループには、開始プロセス、計画プロセス、実行プロセス、監視および制御プロセス、および終了プロセスが含まれます。プロジェクト管理プロセス グループはプロジェクト フェーズではありません
a logical relationship in which a successor activity cannot finish until a predecessor activity has finished,先行アクティビティが終了するまで後続アクティビティは終了できない論理関係
a logical relationship in which a successor activity cannot finish until a predecessor activity has started,先行アクティビティが開始されるまで後続アクティビティは終了できない論理関係
a logical relationship in which a successor activity cannot start until a predecessor activity has finished,先行アクティビティが終了するまで後続アクティビティを開始できない論理関係
a logical relationship in which a successor activity cannot start until a predecessor activity has started,先行アクティビティが開始されるまで後続アクティビティを開始できない論理関係
a loop control variable,ループ制御変数
A low profile QFP (LQFP) is thinner than a QFP.,ロープロファイル QFP (LQFP) は、QFP よりも薄いです。
a macro library,マクロライブラリ
"a management control point where scope, budget, actual cost, and schedule are integrated and compared to earned value for performance measurement",範囲、予算、実際のコスト、スケジュールが統合され、パフォーマンス測定のために稼得価値と比較される管理制御ポイント
a mapping that is not a function,関数ではないマッピング
a matrix that records the relationship between the requirements and the design of a given software component,特定のソフトウェアコンポーネントの要件と設計の間の関係を記録するマトリックス
"a matrix, table, or vector",行列、テーブル、またはベクトル
"a measure of a team's productivity rate at which the deliverables are produced, validated, and accepted within a pre-defined interval. Velocity is a capacity planning approach frequently used to forecast future project work.",事前に定義された間隔内で成果物が作成、検証、および受け入れられるチームの生産性の尺度。ベロシティは、将来のプロジェクト作業を予測するために頻繁に使用されるキャパシティ プランニングのアプローチです。
a measure of computer processing speed,コンピューターの処理速度の尺度
a measure of schedule efficiency expressed as the ratio of earned value to planned value,計画価値に対する達成価値の比率として表されるスケジュール効率の尺度
a measure of schedule performance expressed as the difference between the earned value and the planned value,達成価値と計画価値の差として表されるスケジュールパフォーマンスの尺度
"a measure of the amount of work completed per unit of time, such as user stories or features per week",1 週間あたりのユーザー ストーリーや機能など、単位時間あたりに完了する作業量の尺度
a measure of the cost efficiency of budgeted resources expressed as the ratio of earned value to actual cost,実際のコストに対する獲得価値の比率として表される、予算リソースのコスト効率の尺度
"a measure of the cost performance that must be achieved with the remaining resources in order to meet a specified management goal, expressed as the ratio of the cost to finish the outstanding work to the remaining budget",指定された管理目標を達成するために、残りのリソースで達成しなければならないコストパフォーマンスの尺度。未処理の作業を完了するためのコストと残りの予算の比率で表されます。
a measure of the delivered software functionality,提供されたソフトウェアの機能の尺度
"A measurement procedure is usually recorded in a document that is sometimes itself called a ""measurement procedure"" and is usually in sufficient detail to enable an operator to carry out a measurement without additional information.",測定手順は通常、それ自体が「測定手順」と呼ばれることもある文書に記録され、通常はオペレータが追加情報なしで測定を実行できる程度に詳細に記録されています。
a memory address (for a data structure representing an engineering interface),メモリアドレス (エンジニアリングインターフェイスを表すデータ構造の場合)
A message queue could build up between the tasks.,タスク間でメッセージ キューが蓄積される可能性があります。
"a message sent from one object (the sender) to another object (the receiver), directing the receiver to fulfill one of its responsibilities",あるオブジェクト (送信者) から別のオブジェクト (受信者) に送信され、受信者にその責任の 1 つを果たすよう指示するメッセージ。
a message that the application gives when incorrect data is entered or when another processing error occurs,不正なデータが入力された場合、または別の処理エラーが発生した場合にアプリケーションが表示するメッセージ
"a method for passing parameters, in which the calling module provides to the called module the address of the parameter to be passed",パラメータを渡すためのメソッド。呼び出し側モジュールが呼び出されたモジュールに、渡されるパラメータのアドレスを提供します。
"a method of determining the costs incurred to ensure quality. Prevention and appraisal costs (cost of conformance) include costs for quality planning, quality control (QC), and quality assurance to ensure compliance to requirements (i.e., training, QC systems, etc.). Failure costs (cost of non-conformance) include costs to rework products, components, or processes that are non-compliant, costs of warranty work and waste, and loss of reputation",品質を確保するために発生するコストを決定する方法。予防および評価コスト (適合コスト) には、要件への適合を保証するための品質計画、品質管理 (QC)、および品質保証 (トレーニング、QC システムなど) のコストが含まれます。失敗コスト (不適合コスト) には、不適合の製品、コンポーネント、またはプロセスを再加工するコスト、保証作業と無駄のコスト、および評判の損失が含まれます。
a method of estimating project duration or cost by aggregating the estimates of the lower-level components of the work breakdown structure (WBS),作業分解構造 (WBS) の下位レベルのコンポーネントの見積もりを集計することによって、プロジェクトの期間またはコストを見積もる方法
"a method that tests an FSM method, and provides objective evidence of the extent to which a particular performance property is exhibited",FSM メソッドをテストし、特定のパフォーマンス特性がどの程度発揮されるかの客観的な証拠を提供するメソッド
a method used to acquire a measurement of the amount of functionality an application provides a user,アプリケーションがユーザーに提供する機能の量の測定値を取得するために使用される方法
a method used to estimate the minimum project duration and determine the amount of scheduling flexibility on the logical network paths within the schedule model,プロジェクトの最小期間を見積もり、スケジュール モデル内の論理ネットワーク パスのスケジュールの柔軟性の量を決定するために使用される方法
"a methodology that combines scope, schedule, and resource measurements to assess project performance and progress",範囲、スケジュール、リソースの測定を組み合わせてプロジェクトのパフォーマンスと進捗状況を評価する方法論
a milestone in software scheduling at which a major project life cycle transition occurs,主要なプロジェクトのライフサイクル移行が発生するソフトウェア スケジューリングのマイルストーン
a module containing all of a program's initialization tasks,プログラムのすべての初期化タスクを含むモジュール
"a multi-attribute decision technique that weighs all attributes equally, without allowing lower performance in one attribute to be traded off against better performance in another attribute",ある属性のパフォーマンスの低下を他の属性のパフォーマンスの向上とトレードオフすることなく、すべての属性を均等に重み付けする複数属性の決定手法
a multiset of tokens associated with ('residing in') the place,場所に関連付けられた（「居住している」）トークンの複数セット
a mutually binding agreement that obligates the seller to provide the specified product or service or result and obligates the buyer to pay for it,売り手に特定の製品、サービス、または結果を提供する義務を負い、買い手にその代金の支払いを義務付ける相互拘束力のある契約
"a narrative description of a software requirement, function, feature, or quality attribute, presented as a narrative of desired user interactions with a software system",ソフトウェアシステムとの望ましいユーザー対話の物語として提示される、ソフトウェア要件、機能、機能、または品質属性の物語的説明
"a narrative description of products, services, or results to be delivered by the project",プロジェクトによって提供される製品、サービス、または結果の物語的な説明
"a network of Finnish companies, which share interest in developing software measurement and/or software processes.",ソフトウェア測定および/またはソフトウェアプロセスの開発に関心を共有するフィンランド企業のネットワーク。
A node can have internal structure which is not of concern in an engineering specification.,ノードは、エンジニアリング仕様では重要ではない内部構造を持つことができます。
"A node number is constructed by concatenating a node letter, the diagram number of the diagram that contains the box that represents the function, and the box number of that box.",ノード番号は、ノード文字、関数を表すボックスを含むダイアグラムのダイアグラム番号、およびそのボックスのボックス番号を連結することによって構築されます。
"a nominal scale which corresponds to a set of categories, an ordinal scale which corresponds to an ordered set of scale points, an interval scale which corresponds to an ordered scale with equidistant scale points, and a ratio scale which not only has equidistant scale points but also possesses an absolute zero",カテゴリのセットに対応する名目スケール、スケール ポイントの順序付きセットに対応する順序スケール、等距離のスケール ポイントを持つ順序付きスケールに対応する間隔スケール、および等距離のスケール ポイントを持つだけでなく絶対ゼロも持つ比率スケール
a numbering system used to uniquely identify each component of the work breakdown structure (WBS),作業分解構造 (WBS) の各コンポーネントを一意に識別するために使用される番号付けシステム
"a numerical indicator of the impact of each of the 19 (or more) technical complexity adjustment factors, ranging from 0 (no influence) to 5 (strong influence, throughout)",19 (またはそれ以上) の技術的複雑さの調整要素それぞれの影響を示す数値指標。0 (影響なし) から 5 (全体的に強い影響) までの範囲です。
"a partially complete document in a predefined format that provides a defined structure for collecting, organizing, and presenting information and data",情報とデータを収集、整理、提示するための定義された構造を提供する、事前定義された形式の部分的に完成した文書
A particular property state of the unit is defined at a point in time by the values of the internal state properties.,ユニットの特定のプロパティ状態は、内部状態プロパティの値によってある時点で定義されます。
"a pass of an assembler through a source program, a pass of a sort program through a set of data",ソースプログラムを介したアセンブラのパス、データセットを介したソートプログラムのパス
a pattern of bits or characters designed to be logically combined with an unknown data item to retain or suppress portions of the data item,データ項目の一部を保持または抑制するために未知のデータ項目と論理的に結合するように設計されたビットまたは文字のパターン
A pattern or template from which to develop individual views by establishing the purposes and audience for a view and the techniques for its creation and analysis.,ビューの目的と対象者、およびその作成と分析のテクニックを確立することによって、個々のビューを作成するためのパターンまたはテンプレート。
a payroll generator,給与計算ジェネレーター
A performance requirement is an attribute of a functional requirement.,パフォーマンス要件は、機能要件の属性です。
"a permission and direction, typically written, to begin work on a specific schedule activity or work package or control account. It is a method for sanctioning project work to ensure that the work is done by the identified organization, at the right time, and in the proper sequence.",特定のスケジュールアクティビティ、作業パッケージ、または制御アカウントの作業を開始するための許可と指示。通常は書かれます。これは、指定された組織によって作業が適切なタイミングで適切な順序で確実に実行されるように、プロジェクト作業を承認する方法です。
"a person or group who provides resources and support for the project, program, or portfolio and is accountable for enabling success",プロジェクト、プログラム、またはポートフォリオにリソースとサポートを提供し、成功を可能にする責任を負う個人またはグループ
"A persona typically includes behavior patterns, goals, skills, attitudes, and environment, with a few fictional personal details to make the persona a realistic character.",通常、ペルソナには行動パターン、目標、スキル、態度、環境が含まれており、ペルソナを現実的なキャラクターにするためにいくつかの架空の個人的な詳細が含まれます。
"A Petri net is usually represented as a graph having two types of nodes (called places and transitions) connected by arcs, and markings (called tokens) indicating dynamic properties.",ペトリ ネットは通常、円弧で接続された 2 種類のノード (場所と遷移と呼ばれる) と、動的プロパティを示すマーキング (トークンと呼ばれる) を備えたグラフとして表されます。
"a physical thing, a data element",物理的なもの、データ要素
A place is typed,場所が入力されています
"a planning technique used to provide products, services, and results that truly reflect customer requirements by translating those customer requirements into the appropriate technical requirements for each phase of project product development",顧客の要件をプロジェクトの製品開発の各段階に適切な技術要件に変換することにより、顧客の要件を真に反映した製品、サービス、結果を提供するために使用される計画手法
"A platform is distinct from the unique instances of that platform, which are typically referred to as devices or instances.",プラットフォームは、通常デバイスまたはインスタンスと呼ばれる、そのプラットフォームの一意のインスタンスとは異なります。
"a point in time associated with a schedule activity's completion. Usually qualified by one of the following: actual, planned, estimated, scheduled, early, late, baseline, target, or current",スケジュールされたアクティビティの完了に関連付けられた時点。通常、次のいずれかによって修飾されます: 実績、計画、推定、予定、早期、後期、ベースライン、ターゲット、または現在の
"a point in time associated with a schedule activity's start, usually qualified by one of the following: actual, planned, estimated, scheduled, early, late, target, baseline, or current",スケジュールアクティビティの開始に関連付けられた時点。通常は、実際、計画、推定、予定、早期、遅延、目標、ベースライン、または現在のいずれかによって修飾されます。
a point in time when the status of the project is recorded,プロジェクトのステータスが記録される時点
"a point or matter in question or in dispute, or a point or matter that is not settled and is under discussion or over which there are opposing views or disagreements",問題または係争中の論点または事項、または未解決で議論中であるか、反対の見解または意見の相違がある論点または事項
"a policy specific to the Project Quality Management Knowledge Area, it establishes the basic principles that should govern the organization's actions as it implements its system for quality management",プロジェクト品質管理知識領域に固有のポリシーであり、品質管理システムを実装する際の組織の行動を管理する基本原則を確立します。
A port alias is used to indicate identity or compatibility of two ports at different levels of assembly in which the port in a lower level unit of assembly serves as a realization of a port at a higher -level unit of assembly,ポート エイリアスは、アセンブリの異なるレベルにある 2 つのポートの同一性または互換性を示すために使用されます。この場合、下位レベルのアセンブリ単位のポートは、上位レベルのアセンブリ単位のポートの実現として機能します。
A port couple defines a one-to-one matching of the two ports defining opposite sides of a particular interfac,ポート カップルは、特定のインターフェイスの反対側を定義する 2 つのポートの 1 対 1 の一致を定義します。
a precision of 2 decimal places versus a precision of 5 decimal places,小数点以下 2 桁の精度と小数点以下 5 桁の精度
a precompiler or other routine that reformats code or data for processing,処理のためにコードまたはデータを再フォーマットするプリコンパイラーまたはその他のルーチン
"A procedure defines an established and approved way or mode of conducting business in an organization. It details permissible or recommended methods in order to achieve technical or managerial goals or outcomes. When a procedure is specified as an outcome, the resulting deliverable will typically specify what must be done, by whom, and in what sequence. This is a more detailed level of specification than for a process.",手順は、組織内でビジネスを行うための確立および承認された方法またはモードを定義します。技術的または管理的な目標や成果を達成するために許容される方法または推奨される方法について詳しく説明します。手順が結果として指定されている場合、通常、結果として得られる成果物には、何を、誰が、どの順序で実行する必要があるかが指定されます。これは、プロセスよりも詳細なレベルの仕様です。
A process analysis follows the steps outlined in the process improvement plan to identify needed improvements,プロセス分析は、プロセス改善計画に概説された手順に従って、必要な改善を特定します。
"A process description provides an operational definition of the major components of a process. The description specifies, in a complete, precise, and verifiable manner, the purpose, outcomes, activities and tasks, requirements, design, behavior, or other characteristics of a process. It also can refer to procedures for determining whether these provisions have been satisfied. Process descriptions can be applicable at the project or organizational level.",プロセス記述は、プロセスの主要コンポーネントの動作定義を提供します。説明では、プロセスの目的、結果、アクティビティとタスク、要件、設計、動作、またはその他の特性を完全、正確、検証可能な方法で指定します。また、これらの規定が満たされているかどうかを判断するための手順を指す場合もあります。プロセスの説明は、プロジェクトまたは組織レベルで適用できます。
"a process for identifying functional domains that conforms to the requirements of ISO/IEC TR 14143-5:2004, 5.2",ISO/IEC TR 14143-5:2004、5.2 の要件に準拠する機能ドメインを特定するプロセス
"a process of using a third party to obtain and analyze information to support prediction of cost, schedule or other items",第三者を利用してコスト、スケジュール、その他の項目の予測をサポートする情報を取得および分析するプロセス
a process to observe performance of contracted work or promised product against agreed to requirements,合意された要件に対する契約作業または約束された製品のパフォーマンスを観察するプロセス
"a process whereby modifications to documents, deliverables, or baselines associated with the project are identified, documented, approved, or rejected",プロジェクトに関連する文書、成果物、またはベースラインへの変更を特定、文書化、承認、または拒否するプロセス
a process which generates hundreds or thousands of probable performance outcomes based on probability distributions for cost and schedule on individual tasks. The outcomes are then used to generate a probability distribution for the project as a whole,個々のタスクのコストとスケジュールの確率分布に基づいて、数百または数千の予想されるパフォーマンス結果を生成するプロセス。結果はプロジェクト全体の確率分布を生成するために使用されます。
A processor consists of at least an instruction control unit and an arithmetic and logic unit,プロセッサは少なくとも命令制御ユニットと算術論理ユニットで構成されます。
"A product build from the development branch will have the latest features, but will also likely be immature and unstable.",開発ブランチからビルドされた製品には最新の機能が含まれていますが、未成熟で不安定な可能性もあります。
"a product, result, or service generated by a process. May be an input to a successor process",プロセスによって生成される製品、結果、またはサービス。後続のプロセスへの入力となる可能性があります
"a program family might include one version of a program developed for an English-speaking audience, a second version of a program developed for a German-speaking audience, and a third version for a Japanese-speaking audien",プログラム ファミリには、英語を話す視聴者向けに開発されたプログラムの 1 つのバージョン、ドイツ語を話す視聴者向けに開発されたプログラムの 2 つ目のバージョン、および日本語を話す視聴者向けに開発された 3 つ目のバージョンが含まれる場合があります。
"A program instruction is distinguished from a computer instruction that results from assembly, compilation, or other interpretation process.",プログラム命令は、アセンブリ、コンパイル、またはその他の解釈プロセスから生じるコンピュータ命令とは区別されます。
a program that handles files created by a later version of itself,それ自体の新しいバージョンによって作成されたファイルを処理するプログラム
a program that handles files created by an earlier version of itself,それ自体の以前のバージョンによって作成されたファイルを処理するプログラム
a program to copy magnetic tapes,磁気テープをコピーするプログラム
"a programmable terminal, a nonprogrammable terminal or a standalone microcomputer",プログラマブル端末、ノンプログラマブル端末、またはスタンドアロンのマイクロコンピュータ
a programming language used to express programs in terms of control constructs and a restricted predicate calculus,制御構造と限定された述語計算の観点からプログラムを表現するために使用されるプログラミング言語
"a project document including the identification, assessment and classification of project stakeholders",プロジェクト関係者の特定、評価、分類を含むプロジェクト文書
a project document used to document and monitor elements under discussion or in dispute between project stakeholders,プロジェクトの利害関係者間で議論されている、または論争中の要素を文書化および監視するために使用されるプロジェクト文書
a project in which a completely new application is realized,全く新しいアプリケーションを実現するプロジェクト
a project in which enhancements are made to an existing application,既存のアプリケーションに機能拡張を行うプロジェクト
A project is sometimes viewed as a unique process comprising coordinated and controlled activities and can be composed of activities from the Project Processes and Technical Processes.,プロジェクトは、調整および制御されたアクティビティで構成される独自のプロセスとみなされる場合があり、プロジェクト プロセスと技術プロセスのアクティビティで構成される場合があります。
"a project life cycle where the project scope is generally determined early in the project lifecycle, but time and cost estimates are routinely modified as the project team understanding of the product increases. Iterations develop the product through a series of repeated cycles, while increments successively add to the functionality of the product",プロジェクト ライフ サイクル。通常、プロジェクトのスコープはプロジェクト ライフサイクルの早い段階で決定されますが、プロジェクト チームの製品に対する理解が深まるにつれて、時間とコストの見積もりが定期的に変更されます。イテレーションでは、一連の繰り返されるサイクルを通じて製品が開発され、段階的に製品の機能が追加されます。
"a project life cycle, also known as change-driven or agile methods, that is intended to facilitate change and require a high degree of ongoing stakeholder involvement. Adaptive life cycles are also iterative and incremental, but differ in that iterations are very rapid (usually 2-4 weeks in length) and are fixed in time and resources",プロジェクトのライフサイクル。変更主導型またはアジャイル手法とも呼ばれ、変更を促進することを目的としており、継続的な利害関係者の高度な関与が必要です。アダプティブ ライフ サイクルも反復的で増分的ですが、反復が非常に速く (通常、長さは 2 ～ 4 週間)、時間とリソースが固定されている点が異なります。
"A project tailors its defined process from the organization's set of standard processes to meet objectives, constraints, and the environment of the project.",プロジェクトは、プロジェクトの目的、制約、環境に合わせて、組織の一連の標準プロセスから定義されたプロセスを調整します。
"a project task such as constructing or testing a function point, user story, feature, or requirement",ファンクション ポイント、ユーザー ストーリー、機能、要件の構築またはテストなどのプロジェクト タスク
a project test plan (also known as a master test plan) that encompasses all testing activities on the project; further detail of particular test activities can be defined in one or more test sub-process plans (i.e. a system test plan or a performance test plan),プロジェクトのすべてのテスト活動を含むプロジェクト テスト計画 (マスター テスト計画とも呼ばれる)。特定のテスト アクティビティの詳細は、1 つ以上のテスト サブプロセス計画 (つまり、システム テスト計画またはパフォーマンス テスト計画) で定義できます。
"a projection of the amount of budget deficit or surplus, expressed as the difference between the budget at completion and the estimate at completion",完成時の予算と完成時の見積りの差として表される、財政赤字または黒字額の予測。
"a proof of correctness technique in which assertions are written describing program inputs, outputs, and intermediate conditions, a set of theorems is developed relating satisfaction of the input assertions to satisfaction of the output assertions, and the theorems are proved or disproved using proof by induction",プログラムの入力、出力、および中間条件を記述するアサーションを記述し、入力アサーションの満足度を出力アサーションの満足度に関連付ける一連の定理を開発し、帰納法による証明を使用して定理が証明または反証される、正しさの証明手法。
"a property of the central limit theorem predicting that the data observations in a distribution will tend to group around a central location. The three typical measures of central tendency are the mean, median, and mode",分布内のデータ観測値が中心位置の周りにグループ化される傾向があることを予測する中心極限定理の特性。中心傾向を示す 3 つの典型的な尺度は、平均値、中央値、最頻値です。
a property with a multi-valued mapping,複数の値のマッピングを持つプロパティ
"A prototype is used to get feedback from users for improving and specifying a complex human interface, for feasibility studies, or for identifying requirements.",プロトタイプは、複雑なヒューマン インターフェイスの改善と仕様、実現可能性の調査、または要件の特定のためにユーザーからフィードバックを得るために使用されます。
"a provider or supplier of products, services, or results to an organization",組織に対する製品、サービス、結果のプロバイダーまたはサプライヤー
"a provision in the project management plan to mitigate cost and/or schedule risk. Often used with a modifier (e.g., management reserve, contingency reserve) to provide further detail on what types of risk are meant to be mitigated",コストやスケジュールのリスクを軽減するためのプロジェクト管理計画の規定。どのようなタイプのリスクを軽減するのかについての詳細を提供するために、修飾子 (管理準備金、緊急準備金など) とともに使用されることがよくあります。
"a quality audit is a structured, independent process to determine if project activities comply with organizational and project policies, processes, and procedures",品質監査は、プロジェクト活動が組織およびプロジェクトのポリシー、プロセス、手順に準拠しているかどうかを判断するための、構造化された独立したプロセスです。
"a quality management and control tool used to perform data analysis within the organizational structure created in the matrix. The matrix diagram seeks to show the strength of relationships between factors, causes and objectives that exist between the rows and columns that form the matrix.",マトリックスで作成された組織構造内でデータ分析を実行するために使用される品質管理および制御ツール。マトリックス図は、マトリックスを形成する行と列の間に存在する要因、原因、および目的の間の関係の強さを示すことを目的としています。
a quality management planning tool used to identify key issues and evaluate suitable alternatives to define a set of implementation priorities,主要な問題を特定し、適切な代替案を評価して実装の優先順位を定義するために使用される品質管理計画ツール
"a quality management planning tool, the interrelationship digraphs provide a process for creative problem solving in moderately complex scenarios that possess intertwined logical relationships",品質管理計画ツールである相互関係ダイグラフは、論理関係が絡み合った適度に複雑なシナリオで創造的な問題解決のプロセスを提供します。
"a quantifiable deviation, departure, or divergence away from a known baseline or expected value",既知のベースラインまたは期待値からの定量化可能な逸脱、逸脱、または発散
a quantitative assessment of the likely amount or outcome for the duration of an activity,活動期間中に起こり得る量または結果の定量的評価
"a quantitative assessment of the likely amount or outcome. Usually applied to project costs, resources, effort, and durations and is usually preceded by a modifier (i.e., preliminary, conceptual, feasibility, order-of-magnitude definitive). It should always include some indication of accuracy (e. g., (+ or -) x percent)",予想される量または結果の定量的評価。通常、プロジェクトのコスト、リソース、労力、期間に適用され、通常は修飾語 (つまり、暫定的、概念的、実現可能性、桁違いの決定的) が前に付けられます。常に何らかの精度の指標 ((+ または -) x パーセントなど) を含める必要があります。
a quantitative risk analysis and modeling technique used to help determine which risks have the most potential impact on the project. It examines the extent to which the uncertainty of each project element affects the objective being examined when all other uncertain elements are held at their baseline values. The typical display of results is in the form of a tornado diagram,どのリスクがプロジェクトに最も大きな影響を与える可能性があるかを判断するために使用される定量的なリスク分析およびモデリング手法。他のすべての不確実な要素がベースライン値に保たれている場合に、プロジェクトの各要素の不確実性が調査対象の目的にどの程度影響するかを調査します。結果は通常、竜巻図の形で表示されます。
A range constraint only makes sense if there is a linear ordering specified.,範囲制約は、線形順序付けが指定されている場合にのみ意味を持ちます。
A read is considered to include certain associated data manipulations necessary to achieve the read.,読み取りには、読み取りを達成するために必要な特定の関連データ操作が含まれると見なされます。
"A reader note is not part of the diagram itself, but rather is used for communication about a diagram during model development.",読者メモは図自体の一部ではなく、モデル開発中に図に関するコミュニケーションに使用されます。
"A refinement called hierarchical input-process-output identifies the steps, inputs, and outputs at both general and detailed levels of detail",階層的な入力-プロセス-出力と呼ばれる改良により、一般的な詳細レベルと詳細な詳細レベルの両方でステップ、入力、出力が識別されます。
a relationship between project activities and non-project activities,プロジェクト活動と非プロジェクト活動との関係
a relationship in which a schedule activity has more than one predecessor,スケジュールアクティビティに複数の先行アクティビティがある関係
a relationship in which a schedule activity has more than one successor,スケジュールアクティビティに複数の後続アクティビティがある関係
A relationship that has more than two participating entities. (Note that a single entity can participate several times in a single relationship.),3 つ以上のエンティティが参加する関係。 (単一のエンティティは単一の関係に複数回参加できることに注意してください。)
a relationship that is contractually required or inherent in the nature of the work,契約上必要な関係、または仕事の性質上固有の関係
a relationship that is established based on knowledge of best practices within a particular application area or an aspect of the project where a specific sequence is desired,特定のアプリケーション領域または特定のシーケンスが必要なプロジェクトの側面内でのベスト プラクティスの知識に基づいて確立される関係
A release coming out of head will have the newest features but will also likely be unstable.,突然リリースされるリリースには最新の機能が含まれますが、不安定になる可能性もあります。
A repo master can reduce repo bloat through repo surgery.,レポマスターは、レポ手術を通じてレポの肥大化を軽減できます。
a report of work performance in the most recent reporting period,直近の報告期間における作業実績の報告書
"a report, an output file, or a message to a different application",レポート、出力ファイル、または別のアプリケーションへのメッセージ
"a representation of the plan for executing the project's activities, including durations, dependencies and other planning information, used to produce a project schedule along with other scheduling artifacts",プロジェクトのアクティビティを実行するための計画の表現。期間、依存関係、その他の計画情報が含まれ、他のスケジュール作成成果物とともにプロジェクト スケジュールを作成するために使用されます。
"a request to provide access to a controlled application, a request to move hardware",制御されたアプリケーションへのアクセスを提供するリクエスト、ハードウェアを移動するリクエスト
"a request, demand, or assertion of rights by a seller against a buyer, or vice versa, for consideration, compensation, or payment under the terms of a legally binding contract, such as for a disputed change",係争中の変更など、法的拘束力のある契約条件に基づく対価、補償、または支払いを求める、売り手による買い手に対する権利の要求、要求、または主張、またはその逆
"a requirement that specifies the speed, accuracy, or memory usage with which a given function must be performed",特定の機能を実行する際の速度、精度、またはメモリ使用量を指定する要件
"A response might be the occurrence of internally controlled interaction(s) affecting the environment (external response), or it might be the occurrence of an internally controlled change to the unit's state (internal response).",応答は、環境に影響を与える内部制御された相互作用の発生 (外部応答) である場合もあれば、ユニットの状態に対する内部制御された変化の発生 (内部応答) である場合もあります。
"a response to a threat that has occurred, for which a prior response had not been planned or was not effective",発生した脅威に対する対応であり、事前の対応が計画されていなかったか、効果がなかったもの
"a review at the end of a phase in which a decision is made to continue to the next phase, to continue with modification, or to end a project",フェーズの終わりに行われるレビューで、次のフェーズに進むか、変更を続けるか、プロジェクトを終了するかを決定します。
a review of the change requests to verify that these were implemented as approved,変更リクエストをレビューして、承認されたとおりに実装されたことを確認する
A risk category is a characterization of a source of risk.,リスク カテゴリは、リスクの原因を特徴づけたものです。
A risk factor becomes a problem when a risk metric (an objective measure) crosses a predetermined threshold (the problem trigger). The root cause is not usually known at the time a problem record is created and the problem management process is responsible for further investigation. A problem might concern a service or product or a process (-step) or any other element of the application management organization.,リスク要因は、リスク メトリック (客観的な尺度) が所定のしきい値 (問題のトリガー) を超えると問題になります。通常、問題記録が作成された時点では根本原因は不明であり、問​​題管理プロセスがさらなる調査を担当します。問題は、サービス、製品、プロセス (-step)、またはアプリケーション管理組織のその他の要素に関係している可能性があります。
a risk response strategy whereby the project team acts to eliminate the threat or protect the project from its impact,プロジェクト チームが脅威を排除するか、その影響からプロジェクトを保護するために行動するリスク対応戦略
a risk response strategy whereby the project team acts to reduce the probability of occurrence or impact of a risk,プロジェクトチームがリスクの発生確率や影響を軽減するために行動するリスク対応戦略
"a risk response strategy whereby the project team shifts the impact of a threat to a third party, together with ownership of the response",プロジェクト チームが脅威の影響を対応の所有権とともに第三者に移すリスク対応戦略
a risk that arises as a direct result of implementing a risk response,リスク対応の実施の直接の結果として生じるリスク
a risk that remains after risk responses have been implemented,リスク対応が実施された後に残るリスク
a risk that would have a negative effect on one or more project objectives,1 つ以上のプロジェクト目標に悪影響を与えるリスク
a risk that would have a positive effect on one or more project objectives,1 つ以上のプロジェクト目標にプラスの影響を与えるリスク
"A root compiler, when combined with a code generator, comprises a full compiler.",ルート コンパイラは、コード ジェネレータと組み合わせると、完全なコンパイラを構成します。
a routine that reformats data for output,出力用にデータを再フォーマットするルーチン
a row in a database table,データベーステーブルの行
"A rule can be expressed as an obligation, an authorization, a permission, or a prohibition. Not every policy is a constraint. Some policies represent an empowerment.",ルールは、義務、承認、許可、または禁止として表現できます。すべてのポリシーが制約となるわけではありません。一部の政策は権限付与を表します。
A rule is satisfied if all conditions meet the condition entries of the rule.,すべての条件がルールの条件エントリを満たす場合、ルールは満たされます。
A SAM practitioner is often involved in the collection or reconciliation of software inventory and software entitlements.,SAM 実践者は、多くの場合、ソフトウェア インベントリとソフトウェア資格の収集または調整に関与します。
"A scenario can be a user story, use case, operational concept, or sequence of events the software may encounter.",シナリオとは、ユーザー ストーリー、ユース ケース、運用コンセプト、またはソフトウェアが遭遇する可能性のある一連のイベントのことです。
a schedule activity that has low total float. The concept of near-critical is equally applicable to a schedule activity or schedule network path. The limit below which total float is considered near critical is subject to expert judgment and varies from project to project,合計フロートが低いスケジュール アクティビティ。ニアクリティカルの概念は、スケジュール アクティビティまたはスケジュール ネットワーク パスにも同様に適用できます。総フロートがほぼ臨界とみなされる制限値は専門家の判断に左右され、プロジェクトごとに異なります。
a schedule compression technique in which activities or phases normally done in sequence are performed in parallel for at least a portion of their duration,通常は順番に実行されるアクティビティまたはフェーズを、その期間の少なくとも一部で並行して実行するスケジュール圧縮手法
a schedule method that allows the project team to place buffers on any project schedule path to account for limited resources and project uncertainties,限られたリソースとプロジェクトの不確実性を考慮して、プロジェクト チームが任意のプロジェクト スケジュール パスにバッファを配置できるようにするスケジュール方法
a scheduling approach in which work is pulled from a backlog according to the perceived value to customers and is assigned as resources become available,顧客にとっての価値に応じてバックログから作業を取り出し、リソースが利用可能になったときに割り当てるスケジューリング アプローチ
a screen. a business letter printed on paper or displayed on a screen,画面。紙に印刷された、または画面に表示されたビジネスレター
A SEE Service supplier provides a SEE Service for a SEE Service acquirer.,SEE サービスのサプライヤーは、SEE サービスの取得者に SEE サービスを提供します。
a segment of virtual memory containing objects,オブジェクトを含む仮想メモリのセグメント
A sentence can express a proposition about the entities to which the terms refer. A predicate in a sentence can refer to a relationship between the entities referred to by the terms it links.,文は、用語が参照するエンティティに関する命題を表現できます。文内の述語は、それがリンクする用語によって参照されるエンティティ間の関係を参照できます。
A service component can consist of one or more configuration items.,サービス コンポーネントは 1 つ以上の構成アイテムで構成できます。
"A service is generally an intangible product. A service can be composed of other services. A service is self contained, coherent, discrete.",サービスは通常、無形の製品です。サービスは他のサービスで構成できます。サービスは自己完結型で、一貫性があり、個別です。
"A service level agreement can also be established between the service provider and a supplier, an internal group, or a customer acting as a supplier. A service level agreement can be included in a contract or another type of documented agreement. An Application Management organization can be the service provider, but it can also be a customer itself, of another supplier.",サービス レベル アグリーメントは、サービス プロバイダーと、サプライヤー、内部グループ、またはサプライヤーとして機能する顧客との間で確立することもできます。サービス レベル アグリーメントは、契約または別の種類の文書化された契約に含めることができます。アプリケーション管理組織はサービス プロバイダーになることができますが、別のサプライヤーの顧客自体になることもできます。
a set of activities and relationships that have been established that can be used repeatedly for a particular application area or an aspect of the project where a prescribed sequence is desired,特定のアプリケーション領域または所定のシーケンスが必要なプロジェクトの側面に繰り返し使用できる、確立された一連のアクティビティと関係。
"a set of activities that assess adherence to, and the adequacy of the software processes used to develop and modify software products. SQA also determines the degree to which the desired results from software quality control are being obtained",ソフトウェア製品の開発および変更に使用されるソフトウェア プロセスの順守および適切性を評価する一連の活動。 SQA は、ソフトウェアの品質管理から望ましい結果がどの程度得られているかも判断します。
"a set of activities that measure, evaluate and report on the quality of software project artifacts throughout the project life cycle",プロジェクトのライフサイクル全体を通じてソフトウェアプロジェクト成果物の品質を測定、評価、報告する一連の活動
a set of attributes desired by the buyer which a seller must meet or exceed to be selected for a contract,買い手が希望する一連の属性で、売り手が契約に選ばれるためには満たすか超える必要があります。
a set of conditions that is required to be met before deliverables are accepted,成果物が受け入れられる前に満たす必要がある一連の条件
"a set of financial incentives related to cost, schedule, or technical performance of the seller",売り手のコスト、スケジュール、または技術的パフォーマンスに関連する一連の金銭的インセンティブ
a set of individuals who support the project manager in performing the work of the project to achieve its objectives,プロジェクトの目的を達成するためにプロジェクトの作業を実行する際にプロジェクト マネージャーをサポートする一連の個人
a set of procedures that describes how modifications to the project deliverables and documentation are managed and controlled,プロジェクトの成果物とドキュメントへの変更がどのように管理および制御されるかを説明する一連の手順
a set of software features awaiting development in a subsequent iteration,後続のイテレーションでの開発を待っている一連のソフトウェア機能
"a set of tools used to define the quality requirements and to plan effective quality management activities. They include, but are not limited to: brainstorming, force field analysis, nominal group techniques and quality management and control tools",品質要件を定義し、効果的な品質管理活動を計画するために使用される一連のツール。これらには、ブレーンストーミング、力場分析、公称グループ技術、品質管理および制御ツールが含まれますが、これらに限定されません。
"a short, unique numeric or text identification assigned to each schedule activity to differentiate that project activity from other activities. Typically unique within any one project schedule network diagram",プロジェクト アクティビティを他のアクティビティと区別するために、各スケジュール アクティビティに割り当てられる短い一意の数値またはテキストの識別子。通常、1 つのプロジェクト スケジュール ネットワーク図内で一意です。
"A signal interface signature comprises a finite set of action templates, one for each signal type in the interface. Each action template comprises the name for the signal, the number, names and types of its parameters, and an indication of causality (initiating or responding, but not both) with respect to the object which instantiates the template.",信号インターフェイス署名は、インターフェイス内の信号タイプごとに 1 つずつ、アクション テンプレートの有限セットで構成されます。各アクション テンプレートは、信号の名前、そのパラメーターの数、名前とタイプ、およびテンプレートをインスタンス化するオブジェクトに関する因果関係 (開始または応答、両方ではない) の表示で構成されます。
A signal is an interaction.,シグナルは相互作用です。
"A signature consists of the responsibility name, along with a property operator and the number and type of its arguments, if any. A type (class) can be specified for each argument to limit the argument values to being instances of that class.",署名は、責任名、プロパティ演算子、引数の数と型 (存在する場合) で構成されます。各引数に型 (クラス) を指定して、引数の値をそのクラスのインスタンスに制限できます。
a significant point or event in a project,プロジェクトの重要な点または出来事
"A simulation uses a project model that translates the uncertainties specified at a detailed level into their potential impact on objectives that are expressed at the level of the total project. Project simulations use computer models and estimates of risk, usually expressed as a probability distribution of possible costs or durations at a detailed work level, and are typically performed using Monte Carlo analysis",シミュレーションでは、詳細レベルで指定された不確実性を、プロジェクト全体のレベルで表現される目標に対する潜在的な影響に変換するプロジェクト モデルが使用されます。プロジェクト シミュレーションでは、コンピューター モデルとリスクの推定が使用されます。リスクの推定は、通常、詳細な作業レベルで発生する可能性のあるコストまたは期間の確率分布として表され、通常はモンテカルロ分析を使用して実行されます。
"A single transaction does not necessarily encapsulate a full (or effective) entitlement. An effective entitlement can be determined by an analysis of multiple licensing transactions, of a full license and then of upgrades and/or maintenance transactions assessed together with it.",単一のトランザクションは、必ずしも完全な (または有効な) 権利をカプセル化するわけではありません。有効な権利は、複数のライセンス トランザクション、完全なライセンス、およびそれとともに評価されるアップグレードおよび/またはメンテナンス トランザクションの分析によって決定できます。
a size based on the functional size multiplied by the technical complexity adjustment,機能的なサイズに技術的な複雑さの調整を乗じたサイズに基づくサイズ
a smaller portion of the overall project created when a project is subdivided into more manageable components or pieces,プロジェクトがより管理しやすいコンポーネントまたは部分に分割されるときに作成される、プロジェクト全体のより小さな部分
a software engineering approach that derives a system's design or requirements from its code,コードからシステムの設計や要件を導き出すソフトウェア エンジニアリングのアプローチ
a software library containing master copies of software and documentation from which working copies can be made for distribution and use,ソフトウェアとドキュメントのマスター コピーを含むソフトウェア ライブラリ。配布および使用のために作業コピーを作成できます。
a software module that encapsulates an elementary function or functions of a system,システムの基本機能をカプセル化するソフトウェア モジュール
a software package having a set of files that can be used to install software on a computing device and can be distributed via CD or electronic means,コンピューティング デバイスにソフトウェアをインストールするために使用でき、CD または電子手段で配布できる一連のファイルを含むソフトウェア パッケージ
"A software product can be designated for delivery, an integral part of another product, or used in development. Software products vary from large customized application software for one customer to standard software packages that are sold off the shelf to millions of customers.",ソフトウェア製品は、配布するように指定したり、別の製品の不可欠な部分として指定したり、開発で使用したりすることができます。ソフトウェア製品は、1 人の顧客向けにカスタマイズされた大規模なアプリケーション ソフトウェアから、数百万の顧客に既製品として販売される標準的なソフトウェア パッケージまでさまざまです。
a software tool that records or analyzes hardware events during the execution of a computer program,コンピュータープログラムの実行中にハードウェアイベントを記録または分析するソフトウェアツール
A source program is made up of source code,ソースプログラムはソースコードで構成されています
"a special form of bar chart used to describe the central tendency, dispersion, and shape of a statistical distribution",統計分布の中心傾向、分散、形状を説明するために使用される特別な形式の棒グラフ
a special type of bar chart used in sensitivity analysis for comparing the relative importance of the variables,変数の相対的な重要性を比較するための感度分析で使用される特別なタイプの棒グラフ
A specialized instance acquires a different (lower) lowclass.,特殊化されたインスタンスは、別の (下位の) ロークラスを取得します。
a specific (not many-to-many) relationship in which some or all of the attributes contained in the primary key o the parent entity do not participate in the primary key of the child entity,親エンティティの主キーに含まれる属性の一部またはすべてが子エンティティの主キーに関与しない、特定の (多対多ではない) 関係。
a specific implementation of FSM defined by a set of rules.,一連のルールによって定義された FSM の特定の実装。
"a specific set of processes, related control functions, and tools that are consolidated and combined to record and retain information about the project",プロジェクトに関する情報を記録および保持するために統合および組み合わせられる特定のプロセス、関連する制御機能、およびツールのセット
a specific type of professional or management activity that contributes to the execution of a process and that can employ one or more techniques and tools,プロセスの実行に貢献し、1 つ以上の技術やツールを使用できる特定の種類の専門的活動または管理活動
A squiggle binds an object type set (arrow label) to an object set (arrow segment).,波線は、オブジェクト タイプ セット (矢印ラベル) をオブジェクト セット (矢印セグメント) にバインドします。
a stand-alone document processing system,スタンドアロンの文書処理システム
a standard set of user requirements which conforms to the requirements,要件に準拠したユーザー要件の標準セット
a standard that describes the characteristics of a requirements specification,要件仕様の特徴を説明する規格
"a standard toolkit used by quality management professionals who are responsible for planning, monitoring, and controlling the issues related to quality in an organization",組織内の品質に関連する問題の計画、監視、制御を担当する品質管理専門家が使用する標準ツールキット
"A state class represents instances with changeable state. The constituent instances of a state class can come and go and can change state over time; that is, their property values can change.",状態クラスは、変更可能な状態を持つインスタンスを表します。状態クラスの構成インスタンスは行き来する可能性があり、時間の経過とともに状態が変化する可能性があります。つまり、プロパティ値は変更される可能性があります。
"A state is a shorthand representation for the unit's interaction occurrence history. Ascribing ""state"" to a unit implies that it has a capability to modify future behaviors as a result of past interactions with its environment.",状態は、ユニットのインタラクション発生履歴を簡略的に表現したものです。ユニットに「状態」を割り当てるということは、そのユニットがその環境との過去の相互作用の結果として将来の動作を変更する能力を持っていることを意味します。
"a static analysis technique that relies on visual examination of development products to detect errors, violations of development standards, and other problems3. examining or measuring to verify whether an activity, component, product, result, or service conforms to specified requirements",開発製品の目視検査に依存して、エラー、開発標準の違反、その他の問題を検出する静的分析手法3。活動、コンポーネント、製品、結果、またはサービスが指定された要件に適合しているかどうかを検証するための検査または測定
a statistical method for identifying which factors may influence specific variables of a product or process under development or in production,開発中または生産中の製品またはプロセスの特定の変数に影響を与える可能性のある要因を特定するための統計的手法
a statistical technique that calculates the average outcome when the future includes scenarios that may or may not happen. A common use of this technique is within decision tree analysis.,将来に起こるか起こらないかのシナリオが含まれる場合に、平均的な結果を計算する統計手法。この手法の一般的な用途は、決定木分析内です。
a status code,ステータスコード
A step contains one or more actions. Responses by the software are not considered to be steps.,ステップには 1 つ以上のアクションが含まれます。ソフトウェアによる応答はステップとみなされません。
"A stimulus can be the occurrence of an externally controlled interaction affecting the unit (external stimulus), or it can be the occurrence of an internally controlled event (internal stimulus).",刺激は、ユニットに影響を与える外部で制御される相互作用の発生 (外部刺激) である場合もあれば、内部で制御されるイベント (内部刺激) の発生である場合もあります。
a store of historical information and lessons learned about both the outcomes of previous project selection decisions and previous project performance,以前のプロジェクト選択の決定結果と以前のプロジェクトのパフォーマンスの両方について学んだ履歴情報と教訓の保存場所
"A stream interface comprises a finite set of action templates, one for each flow type in the stream interface. Each action template for a flow contains the name of the flow, the information type of the flow, and an indication of causality for the flow (i.e. producer or consumer but not both) with respect to the object which instantiates the template. The phrase ""complementary interface signature to X"", where X is itself an interface signature describes an interface signature identical to X in all respects except causality, which is opposite to that in X. Many Interface Definition Languages (IDLs) capture only the action templates of a signature and depend upon the context in which the IDL is used to determine the causality that is to be applied.",ストリーム インターフェイスは、ストリーム インターフェイス内のフロー タイプごとに 1 つずつ、アクション テンプレートの有限セットで構成されます。フローの各アクション テンプレートには、フローの名前、フローの情報タイプ、およびテンプレートをインスタンス化するオブジェクトに関するフローの因果関係 (つまり、プロデューサーまたはコンシューマー、ただし両方ではない) の表示が含まれます。 「X に対する相補的なインターフェイス シグネチャ」という表現 (X 自体がインターフェイス シグネチャである場合) は、X とは逆の因果関係を除くすべての点で X と同一のインターフェイス シグネチャを表します。多くのインターフェイス定義言語 (IDL) は、シグネチャのアクション テンプレートのみをキャプチャし、適用される因果関係を決定するために IDL が使用されるコンテキストに依存します。
a structured pattern of actions adopted by an organization such that the organization's policy can be explained as a set of basic principles that govern the organization's conduct,組織の方針を、組織の行動を管理する一連の基本原則として説明できるように、組織が採用する構造化された行動パターン
"a structured review of the seller's progress to deliver project scope and quality, within cost and on schedule, as compared to the contract",プロジェクトの範囲と品質をコスト内でスケジュールどおりに提供するための売主の進捗状況を、契約と比較して体系的にレビューする
a structured tool used to verify that a set of required steps has been performed,一連の必要な手順が実行されたことを検証するために使用される構造化されたツール
"a subdivision (fragment) of a project schedule network diagram, usually representing a subproject or a work package. Often used to illustrate or study some potential or proposed schedule condition, such as changes in preferential schedule logic or project scope",プロジェクト スケジュール ネットワーク図のサブディビジョン (フラグメント)。通常はサブプロジェクトまたはワーク パッケージを表します。優先スケジュール ロジックやプロジェクト範囲の変更など、潜在的なスケジュール条件または提案されたスケジュール条件を説明または検討するためによく使用されます。
A subject unit is segregated from a collection of units that constitute the environment in which its behaviors are solicited and exhibited.,対象ユニットは、その行動が勧誘および提示される環境を構成するユニットの集合から分離されます。
a subset of RUR which is selected to match the purpose in a specific evaluation,特定の評価の目的に一致するように選択された RUR のサブセット
a subset of the user requirements describing what the software does in terms of tasks and services,タスクとサービスに関してソフトウェアが何を行うかを説明するユーザー要件のサブセット
a subsidiary plan of the project management plan. It details the steps for analyzing processes to identify activities that enhance their value,プロジェクト管理計画の補助計画。プロセスを分析して価値を高める活動を特定する手順を詳しく説明します。
"a subsystem of the overall project management system. It is a collection of formal documented procedures that defines how project work will be authorized (committed) to ensure that the work is done by the identified organization, at the right time, and in the proper sequence. It includes the steps, documents, tracking system, and defined approval levels needed to issue work authorizations.",プロジェクト管理システム全体のサブシステム。これは、指定された組織によって作業が適切なタイミングで適切な順序で確実に実行されるようにするために、プロジェクト作業がどのように承認 (コミット) されるかを定義する、正式に文書化された手順の集合です。これには、作業承認を発行するために必要な手順、文書、追跡システム、および定義された承認レベルが含まれます。
"A succession of actions which the user sees as a single work unit. FPA assigns each transactional function a type and therefore distinguishes between the following types: external input, external output, and external inquiry.",ユーザーが単一の作業単位として認識する一連のアクション。 FPA は、各トランザクション機能にタイプを割り当てるため、外部入力、外部出力、および外部問い合わせのタイプを区別します。
a summary-level project schedule that identifies the major deliverables and work breakdown structure components and key schedule milestones,主要な成果物、作業分解構造のコンポーネント、および主要なスケジュールのマイルストーンを特定する概要レベルのプロジェクト スケジュール
a summary-level schedule that identifies the major schedule milestones,主要なスケジュールのマイルストーンを特定する概要レベルのスケジュール
A system element is a discrete part of a system that can be implemented to fulfill specified requirements.,システム要素は、指定された要件を満たすために実装できるシステムの個別の部分です。
"a system in failure mode is characterized by slow operation, incorrect outputs, or complete termination of execution",障害モードにあるシステムは、動作の遅さ、誤った出力、または実行の完全な終了によって特徴付けられます。
"A system is sometimes considered as a product or as the services it provides. In practice, the interpretation of its meaning is frequently clarified by the use of an associative noun, e.g., aircraft system. Alternatively, the word 'system' can be replaced by a context-dependent synonym, e.g., aircraft, though this obscures the system perspective. A complete system includes all of the associated equipment, facilities, material, computer programs, firmware, technical documentation, services, and personnel required for operations and support to the degree necessary for self-sufficient use in its intended environment",システムは、製品またはそれが提供するサービスとしてみなされることがあります。実際には、その意味の解釈は、航空機システムなどの連想名詞を使用することで明確になることがよくあります。あるいは、「システム」という単語を、航空機などの文脈依存の同義語に置き換えることもできますが、これではシステムの観点がわかりにくくなります。完全なシステムには、意図された環境での自立使用に必要な程度の運用とサポートに必要な、関連する機器、設備、材料、コンピューター プログラム、ファームウェア、技術文書、サービス、および人員がすべて含まれます。
"a system of practices, techniques, procedures, and rules used by those who work in a discipline",ある分野で働く人によって使用される実践、技術、手順、規則の体系
"a system, a software item, a requirements document, a design specification, a user guide",システム、ソフトウェア項目、要件文書、設計仕様書、ユーザーガイド
a systematic diagram of a decomposition hierarchy used to visualize as parent-to-child relationships a systematic set of rules,体系的なルールのセットを親子関係として視覚化するために使用される分解階層の系統図
"a systematic procedure, technique, or process used to transfer information among project stakeholders",プロジェクトの関係者間で情報を伝達するために使用される体系的な手順、技術、またはプロセス
a systematic repetition of one or more software development activities,1 つ以上のソフトウェア開発活動を体系的に繰り返すこと
a systematic series of activities directed towards causing an end result such that one or more inputs will be acted upon to create one or more outputs,1 つまたは複数の入力が 1 つまたは複数の出力を作成するように作用するような、最終結果を引き起こすことを目的とした体系的な一連のアクティビティ
A systems approach considers the total system and the total lifecycle of the system. This includes all aspects of the system and the system throughout its life until the day users depose of the system and the external enterprises complete the handling of the disposed system products.,システム アプローチでは、システム全体とシステムのライフサイクル全体を考慮します。これには、ユーザーがシステムを廃棄し、外部企業が廃棄されたシステム製品の取り扱いを完了する日までのシステムの全側面およびシステムの存続期間が含まれます。
a table used to allocate a weight to a function type,関数タイプに重みを割り当てるために使用されるテーブル
"a table used to allocate function points to functions, depending on the function type and the complexity established for the function",関数タイプと関数に対して確立された複雑さに応じて、関数ポイントを関数に割り当てるために使用されるテーブル
a tally sheet that can be used as a checklist when gathering data,データ収集時のチェックリストとして使用できる集計シート
"a team meeting at the end of an iterative cycle or at the end of a software project to reflect on what went well, what was learned, and what should be done differently next time",反復サイクルの終了時、またはソフトウェア プロジェクトの終了時に、何がうまくいったか、何が学べたのか、次回は何を違う方法で実行する必要があるのか​​を検討するためのチーム ミーティング
a team that is separated by geography or work schedules and maintains electronic communication,地理的または作業スケジュールによって分離され、電子コミュニケーションを維持するチーム
"a technical or ergonomic standard, a requirements list (or model requirements specification) from a group (e.g. a market sector, technical or user association), a law or a decree",技術的または人間工学的標準、グループ（市場部門、技術団体、ユーザー団体など）の要件リスト（またはモデル要件仕様）、法律または法令
a technique for determining the cause and degree of difference between the baseline and actual performance,ベースラインと実際のパフォーマンスの差の原因と程度を判断する手法
"a technique for estimating that applies a weighted average of optimistic, pessimistic, and most likely estimates when there is uncertainty with the individual activity estimates",個々の活動の推定値に不確実性がある場合に、楽観的推定値、悲観的推定値、および最も可能性の高い推定値の加重平均を適用する推定手法
a technique for estimating the duration or cost of an activity or a project using historical data from a similar activity or project,同様の活動またはプロジェクトの履歴データを使用して、活動またはプロジェクトの期間またはコストを見積もる手法
a technique for systematically reviewing materials using a list for accuracy and completeness,正確さと完全性のためにリストを使用して資料を体系的にレビューする手法
a technique in which start and finish dates are adjusted based on resource constraints with the goal of balancing demand for resources with the available supply,リソースの需要と利用可能な供給のバランスをとることを目的として、リソースの制約に基づいて開始日と終了日を調整する手法
a technique of systematically gathering and analyzing quantitative and qualitative information to determine whose interests should be taken into account throughout the project,プロジェクト全体を通じて誰の利益を考慮すべきかを決定するために、定量的および定性的情報を体系的に収集および分析する手法
"a technique that computes, or iterates, the project cost or project schedule many times using input values selected at random from probability distributions of possible costs or durations, to calculate a distribution of possible total project cost or completion dates",予想されるコストまたは期間の確率分布からランダムに選択された入力値を使用して、プロジェクト コストまたはプロジェクト スケジュールを何度も計算または反復して、予想されるプロジェクトの合計コストまたは完了日の分布を計算する手法
a technique that enhances brainstorming with a voting process used to rank the most useful ideas for further brainstorming or for prioritization,さらなるブレインストーミングや優先順位付けのために最も有用なアイデアをランク付けするために使用される投票プロセスによってブレインストーミングを強化する手法
"a technique that explores the accuracy of assumptions and identifies risks to the project from inaccuracy, inconsistency, or incompleteness of assumptions",仮定の正確さを調査し、仮定の不正確さ、不一致、または不完全さからプロジェクトへのリスクを特定する手法
a technique that is used to adjust the amount of time between predecessor and successor activities,先行アクティビティと後続アクティビティの間の時間を調整するために使用される手法
a technique that is used to adjust the start and finish dates of activities that adjusts planned resource use to be equal to or less than resource availability,計画されたリソース使用量がリソースの可用性と同じかそれ以下になるように調整するアクティビティの開始日と終了日を調整するために使用される手法
"a technique that is used to measure, compare, and analyze actual performance of work in progress on the project against the baseline",プロジェクトで進行中の作業の実際のパフォーマンスをベースラインに対して測定、比較、分析するために使用される手法
a technique that provides a direct way of viewing individuals in their environment performing their jobs or tasks and carrying out processes.,環境内の個人が仕事やタスクを実行し、プロセスを実行している様子を直接表示する方法を提供する技術。
a technique used for constructing a schedule model in which activities are represented by nodes and are graphically linked by one or more logical relationships to show the sequence in which the activities are to be performed,アクティビティがノードによって表され、アクティビティが実行される順序を示すために 1 つ以上の論理関係によってグラフィカルにリンクされるスケジュール モデルを構築するために使用される手法
"a technique used for dividing and subdividing the project scope and project deliverables into smaller, more manageable parts",プロジェクトの範囲とプロジェクトの成果物を、より小さく管理しやすい部分に分割および細分化するために使用される手法
a technique used to develop as many potential options as possible in order to identify different approaches to execute and perform the work of the project,プロジェクトの作業を実行および遂行するためのさまざまなアプローチを特定するために、可能な限り多くの潜在的なオプションを開発するために使用される手法
"a technique used to estimate cost or duration by applying an average of optimistic, pessimistic, and most likely estimates when there is uncertainty with the individual activity estimates",個々のアクティビティの推定値に不確実性がある場合に、楽観的推定値、悲観的推定値、および最も可能性の高い推定値の平均を適用することにより、コストまたは期間を推定するために使用される手法
a technique used to evaluate identified options in order to select which options or approaches to use to execute and perform the work of the project,プロジェクトの作業を実行するために使用するオプションまたはアプローチを選択するために、特定されたオプションを評価するために使用される手法
a technique used to find ways to bring project activities that are behind into alignment with plan during project execution,プロジェクトの実行中に、遅れているプロジェクト活動を計画と一致させる方法を見つけるために使用される手法
a technique used to identify the type of dependency that is used to create the logical relationships between predecessor and successor activities,先行アクティビティと後続アクティビティの間の論理関係を作成するために使用される依存関係のタイプを識別するために使用される手法
a technique used to shorten the schedule duration for the least incremental cost by adding resources,リソースを追加することで、最小限の増分コストでスケジュール期間を短縮するために使用される手法
a technique which adjusts the activities of a schedule model such that the requirement for resources on the project does not exceed certain predefined resource limits,プロジェクトのリソース要件が特定の事前定義されたリソース制限を超えないように、スケジュール モデルのアクティビティを調整する手法
a temporary data file,一時データファイル
"a temporary endeavor undertaken to create a unique product, service, or result",独自の製品、サービス、または結果を作成するために行われる一時的な取り組み
A test case is the lowest level of test input (i.e. test cases are not made up of test cases) for the test subprocess for which it is intended,テスト ケースは、対象となるテスト サブプロセスのテスト入力の最低レベルです (つまり、テスト ケースはテスト ケースで構成されていません)。
"A test environment could contain multiple environments to accommodate specific test sub-processes, e.g., a unit test environment, a performance test environment.",テスト環境には、単体テスト環境、パフォーマンス テスト環境など、特定のテスト サブプロセスに対応する複数の環境が含まれる場合があります。
A test procedure specification for an automated test run is usually called a test script.,自動テスト実行のテスト手順の仕様は、通常、テスト スクリプトと呼ばれます。
"A test specification could be detailed in one document, in a set of documents, or in other ways, for example, in a mixture of documents and database entries.",テスト仕様は、1 つの文書、一連の文書、または他の方法 (文書とデータベース エントリーの混合など) で詳細に記述することができます。
"a tested, deliverable version of a software product that provides new or modified capabilities",新しい機能または変更された機能を提供するソフトウェア製品のテスト済みの配布可能なバージョン
"a testing laboratory, the quality department of a software development organization, a government organization, or a user",テストラボ、ソフトウェア開発組織の品質部門、政府機関、またはユーザー
"A tinderbox will typically fetch on a regular basis the latest versions of the software from each supported branch, build it for the different platforms, and report the results from the build and the regression tests.",Tinderbox は通常、サポートされている各ブランチからソフトウェアの最新バージョンを定期的に取得し、さまざまなプラットフォーム用にビルドし、ビルドと回帰テストの結果をレポートします。
a traffic light that continues to alternate between red and green if the yellow light fails,黄色信号が消えた場合、赤と緑が交互に切り替わり続ける信号機
a traffic light that reverts to blinking red in all directions when normal operation fails,通常の動作が失敗すると、全方向に赤の点滅に戻る信号機
a transaction,取引
"A transaction has an intrinsic relationship to its related account, because it makes no sense for an instance of a transaction to ""switch"" to a different account, since that would change the very nature of the transaction.",トランザクションには、関連するアカウントとの本質的な関係があります。トランザクションのインスタンスが別のアカウントに「切り替える」ことは、トランザクションの性質そのものが変わるため、意味がありません。
A transformation of a base measure using a mathematical function can also be considered as a derived measure.,数学関数を使用した基本メジャーの変換も、派生メジャーとみなすことができます。
a two-level address,2 レベルのアドレス
"a type of contract involving payment (reimbursement) by the buyer to the seller for the seller's actual costs, plus a fee typically representing seller's profit. Cost-reimbursable contracts often include incentive clauses where, if the seller meets or exceeds selected project objectives, such as schedule targets or total cost, then the seller receives from the buyer an incentive or bonus payment",買い手から売り手へ、売り手の実際の費用に通常売り手の利益を表す手数料を加えた支払い（償還）を伴う契約の一種。費用償還可能な契約には、売主がスケジュール目標や総コストなど、選択したプロジェクト目標を達成または超過した場合に、売主が買主からインセンティブまたはボーナスの支払いを受け取るインセンティブ条項が含まれることがよくあります。
"a type of contract that is a hybrid contractual arrangement containing aspects of both cost-reimbursable and fixed-price contracts. Time and material contracts resemble cost-reimbursable type arrangements in that they hav no definitive end, because the full value of the arrangement is not defined at the time of the award. Thus, time and material contracts can grow in contract value as if they were cost-reimbursable-type arrangements. Conversely time and material arrangements can also resemble fixed-price arrangements. For example, the unit rates are preset by the buyer and seller, when both parties agree on the rates for the category of senior engineers",費用償還可能な契約と固定価格契約の両方の側面を含むハイブリッド契約取り決めである契約の一種。時間契約および物品契約は、契約の全額が契約の時点で定義されていないため、明確な終了がないという点で費用償還型の契約に似ています。したがって、時間と物品の契約は、あたかも費用償還型の取り決めであるかのように、契約価値が増大する可能性があります。逆に、時間と材料の取り決めも固定価格の取り決めに似ている可能性があります。たとえば、単価は買い手と売り手によって事前に設定され、両者が上級エンジニアのカテゴリーの料金に合意した場合に設定されます。
"a type of contract where the buyer pays the seller a set amount (as defined by the contract), and the seller can earn an additional amount if the seller meets defined performance criteria",買い手が売り手に（契約で定義された）一定の金額を支払い、売り手が定義された履行基準を満たした場合に売り手が追加の金額を獲得できる契約の一種。
a type of cost-reimbursable contract where the buyer reimburses the seller for the seller's allowable costs (allowable costs are defined by the contract) plus a fixed amount of profit (fee),原価償還契約の一種で、買い手が売り手に許容できる費用（許容できる費用は契約によって定義されます）と一定の利益（手数料）を払い戻すものです。
"a type of cost-reimbursable contract where the buyer reimburses the seller for the seller's allowable costs (allowable costs are defined by the contract), and the seller earns its profit if it meets defined performance criteria",原価償還契約の一種で、買主が売主の許容コスト（許容コストは契約によって定義されます）を払い戻し、定義されたパフォーマンス基準を満たした場合に売主が利益を得る契約です。
"a type of fixed price contract where the buyer pays the seller a set amount (as defined by the contract), regardless of the seller's costs",固定価格契約の一種で、売り手のコストに関係なく、買い手が売り手に一定の金額（契約で定義されている）を支払うもの
"a type of procurement document used to request price quotations from prospective sellers of common or standard products or services. Sometimes used in place of request for proposal and in some application areas, it may have a narrower or more specific meaning.",一般または標準の製品またはサービスの販売予定者に価格見積を要求するために使用される調達文書の一種。提案依頼書の代わりに使用されることもあり、一部のアプリケーション分野では、より狭い、またはより具体的な意味を持つ場合があります。
"a type of procurement document used to request proposals from prospective sellers of products or services. In some application areas, it may have a narrower or more specific meaning.",製品またはサービスの販売予定者に提案を求めるために使用される調達文書の一種。一部のアプリケーション分野では、より狭い意味またはより具体的な意味をもつ場合があります。
a type of procurement document whereby the buyer requests a potential seller to provide various pieces of information related to a product or service or seller capability,買い手が潜在的な売り手に製品やサービス、または売り手の能力に関連するさまざまな情報の提供を要求する一種の調達文書
"a Unified Modeling Language (UML) diagram that depicts time-sequential ordering of interactions, as in a use case scenario of interactions between an actor and some system elements. Can be used to depict sequential and concurrent data flow or process flow",アクターと一部のシステム要素間のインタラクションのユースケース シナリオのように、インタラクションの時系列の順序を示す統一モデリング言語 (UML) 図。順次および同時のデータ フローまたはプロセス フローを表現するために使用できます。
a unique function recognized by the user in which data and/or control information from outside the application is entered into the application,アプリケーションの外部からデータや制御情報をアプリケーションに入力する、ユーザーによって認識される独自の機能
"a unique input/output combination recognized by the user in which the application distributes an output fully determined in size without further data processing, as a result of the input",ユーザーによって認識される固有の入力/出力の組み合わせ。アプリケーションは、入力の結果として、それ以上のデータ処理を行わずに、サイズが完全に決定された出力を配布します。
a unique output recognized by the user which crosses the application boundary,アプリケーションの境界を越えてユーザーに認識される固有の出力
"a unique, user-recognizable, non-recursive item o information",ユニークでユーザーが認識できる非再帰的な項目または情報
a unit which expresses the size of an application or of a project,アプリケーションまたはプロジェクトのサイズを表す単位
"A use case specification's fundamental parts are the use case name, brief description, precondition, basic flow, postcondition, and alternate flow.",ユースケース仕様の基本部分は、ユースケース名、簡単な説明、前提条件、基本フロー、事後条件、および代替フローです。
"A user is only presented with the necessary steps to complete a task, excluding any unnecessary steps.",ユーザーには、不必要なステップを除いて、タスクを完了するために必要なステップのみが表示されます。
A valid statement of reproducibility requires specification of the conditions changed. The changed conditions include the principle of measurement; method of measurement; observer; measuring instrument; reference standard; location; conditions of use; time. Reproducibility can be expressed quantitatively in terms of the dispersion characteristics of the results. Results are here usually understood to be corrected results.,再現性を有効に表明するには、変更された条件を指定する必要があります。変更された条件には、測定原理が含まれます。測定方法；観察者;測定器。参照標準。位置;使用条件。時間。再現性は、結果の分散特性の観点から定量的に表現できます。ここでの結果は通常、修正された結果であると理解されます。
"a value -added reseller who bundles a software package to work with an embedded system, or a software reseller who is licensed to combine a number of different software products into a single bundle",組み込みシステムで動作するソフトウェア パッケージをバンドルする付加価値再販業者、または多数の異なるソフトウェア製品を 1 つのバンドルに組み合わせるライセンスを取得しているソフトウェア再販業者
A variable is represented by an identifier that begins with an upper-case letter,変数は大文字で始まる識別子で表されます。
a variable that records the number of times a loop is executed,ループが実行された回数を記録する変数
a variety of organizational forms that involve the creation of temporary systems for the performance of projects. PBOs conduct the majority of their activities as projects and/or provide project over functional approaches,プロジェクトを遂行するための一時的なシステムの構築を伴うさまざまな組織形態。 PBO は活動の大部分をプロジェクトとして実施し、機能的なアプローチよりもプロジェクトを提供します。
A verb phrase is ideally stated in active voice.,動詞句は能動態で述べるのが理想的です。
a video display,ビデオディスプレイ
A view can cover the entire area being modeled or only a part of that area.,ビューは、モデル化されている領域全体をカバーすることも、その領域の一部のみをカバーすることもできます。
a virtual machine (e.g. a process),仮想マシン (プロセスなど)
"a visual depiction of the product scope showing a business system (process, equipment, computer system, etc.), and how people and other systems (actors) interact with it",ビジネス システム (プロセス、機器、コンピュータ システムなど)、および人々や他のシステム (アクター) がそれとどのように対話するかを示す製品範囲の視覚的描写
"a visual representation or an interaction mechanism for a task object (such as a letter, a sales order, electronic parts, or a wiring diagram) or a system object (such as a printer, hard disk, or network connection); basic objects (such as window title bars, menu items, push buttons, image maps, and editable text fields) or containers (such as windows, grouping boxes, menu bars, menus, groups of mutually exclusive option buttons, and compound images that are made up of several smaller images); messages and action prompts",タスク オブジェクト (手紙、注文書、電子部品、配線図など) またはシステム オブジェクト (プリンタ、ハードディスク、ネットワーク接続など) の視覚的表現または対話メカニズム。基本オブジェクト (ウィンドウのタイトル バー、メニュー項目、プッシュ ボタン、イメージ マップ、編集可能なテキスト フィールドなど) またはコンテナ (ウィンドウ、グループ ボックス、メニュー バー、メニュー、相互に排他的なオプション ボタンのグループ、および複数の小さなイメージで構成される複合イメージなど)。メッセージとアクションプロンプト
"A web page can be generated dynamically from the server side, and can incorporate multimedia, applets, or other elements active on either the client or server side.",Web ページはサーバー側から動的に生成でき、クライアント側またはサーバー側でアクティブなマルチメディア、アプレット、またはその他の要素を組み込むことができます。
"a window, icon or text field",ウィンドウ、アイコン、またはテキストフィールド
a work breakdown structure component below the control account with known work content but without detailed schedule activities,制御アカウントの下にある作業分解構造コンポーネント。作業内容はわかっているが、詳細なスケジュール活動は含まれていません。
a work breakdown structure in which activities and tasks are denoted by verbs that indicate work to be accomplished. Each task name includes the work product or work products to be produced by that task,アクティビティとタスクが、達成すべき作業を示す動詞によって示される作業分解構造。各タスク名には、そのタスクによって生成される作業成果物が含まれます。
A Write is considered to include certain associated data manipulations necessary to achieve the Write.,書き込みには、書き込みを実現するために必要な特定の関連データ操作が含まれると見なされます。
a written guarantee that a system or component complies with its specified requirements and is acceptable for operational use,システムまたはコンポーネントが指定された要件を満たし、運用上許容されることを書面で保証するもの
ability for two or more ORBs to cooperate to deliver requests to the proper object,2 つ以上の ORB が連携してリクエストを適切なオブジェクトに配信する機能
ability of a process to satisfy stated and implied stakeholder needs when used in a specified context,特定の状況で使用された場合に、明示的および暗黙的な利害関係者のニーズを満たすプロセスの能力
"ability of a product, service, system, component, or process to meet customer or user needs, expectations, or requirements3. the degree to which a set of inherent characteristics fulfils requirements",製品、サービス、システム、コンポーネント、またはプロセスが顧客またはユーザーのニーズ、期待、または要件を満たす能力3.一連の固有の特性が要件を満たす度合い
ability of a property in a subclass to respecify the realization of an inherited property of the same name while retaining the same meaning,同じ意味を保持しながら、同じ名前の継承されたプロパティの実現を再指定するサブクラス内のプロパティの機能
ability of a service or service component to perform its required function at an agreed instant or over an agreed period of time,サービスまたはサービスコンポーネントが、合意された瞬間または合意された期間にわたって必要な機能を実行する能力
ability of a subclass to inherit responsibilities from more than one superclass,サブクラスが複数のスーパークラスから責任を継承する機能
ability of a subsystem to prevent a fault within the subsystem from causing consequential faults in other subsystems,サブシステム内の障害が他のサブシステムに重大な障害を引き起こすことを防ぐサブシステムの能力
ability of a system or component to continue normal operation despite the presence of erroneous inputs,誤った入力が存在するにもかかわらず、システムまたはコンポーネントが通常の動作を継続できる能力
ability of a system or component to perform its required functions under stated conditions for a specified period of time,指定された条件下で、指定された期間、必要な機能を実行するシステムまたはコンポーネントの能力
ability of an application object to perform its required function at an agreed instant or over an agreed period of time,アプリケーションオブジェクトが、合意された瞬間または合意された期間にわたって必要な機能を実行する能力
ability of two or more systems or components to exchange information,2 つ以上のシステムまたはコンポーネントが情報を交換できる機能
"ability to change the configuration, substituting one reference point of an object for another while the object is being used",オブジェクトの使用中に、オブジェクトの 1 つの参照点を別の参照点に置き換えて構成を変更する機能
ability to establish and maintain relationships with other people,他の人々との関係を確立し、維持する能力
able to communicate data in both directions simultaneously,双方向で同時にデータ通信可能
"able to communicate data in both directions, but in only one direction at a time",データは両方向に通信できますが、一度に一方向のみです
abnormal end,異常終了
Abstract Data Type,抽象データ型
abstract definition of an interaction of channel objects that causes protocol exchanges between the protocol objects in the channel,チャネル内のプロトコル オブジェクト間でプロトコル交換を引き起こすチャネル オブジェクトの相互作用の抽象的な定義
abstract description of work done by CM tools,CM ツールによって実行される作業の抽象的な説明
abstract functional characteristic of a system of interest that end-users and other stakeholders can understand,エンドユーザーおよび他の利害関係者が理解できる、対象システムの抽象的な機能特性
abstract relationship between attributes of entities and information needs,エンティティの属性と情報ニーズの間の抽象的な関係
"abstract representation of the domain and application engineering life cycle processes; the roles and relationships of the processes; and the assets produced, managed, and used during product line engineering and management",ドメインおよびアプリケーションエンジニアリングのライフサイクルプロセスの抽象表現。プロセスの役割と関係。製品ラインのエンジニアリングと管理中に生産、管理、使用される資産
"abstract specification of a composition of objects that results in any instance of the composition having a given property, named by <X>",<X> という名前の、指定されたプロパティを持つ構成のインスタンスとなるオブジェクトの構成の抽象仕様。
"abstract, formal model of information flow, showing static and dynamic properties of a system",システムの静的および動的特性を示す、情報フローの抽象的で形式的なモデル
"abstraction of a sequence of interactions, resulting in conveyance of information from a producer object to a consumer object",一連のインタラクションの抽象化。その結果、プロデューサー オブジェクトからコンシューマー オブジェクトへの情報の伝達が行われます。
"abstraction of an action, used in a process, which can leave unspecified some or all of the objects that participate in that action",プロセスで使用されるアクションの抽象化。そのアクションに参加するオブジェクトの一部またはすべてを未指定のままにすることができます。
abstraction of the behavior of an object that consists of a subset of the interactions of that object together with a set of constraints on when they can occur,オブジェクトの相互作用のサブセットと、それらがいつ発生するかについての一連の制約から構成される、オブジェクトの動作の抽象化。
abstraction of the knowledge and behavior of a set of similar things,一連の類似したものの知識と行動の抽象化
"abstractly, a hierarchical set of IDEF0 diagrams that depict, for a specific purpose and from a specific viewpoint, the functions of a system or subject area, along with supporting glossary, text, and For Exposition Only (FEO) information",抽象的には、サポートする用語集、テキスト、および説明専用 (FEO) 情報とともに、特定の目的および特定の視点から、システムまたは対象領域の機能を描写する IDEF0 図の階層セット。
"accounts payable, accounts receivable, payroll, procurement, shop production, assembly line control, air search radar, target tracking, weapons firing, flight line scheduling and passenger reservations",買掛金、売掛金、給与計算、調達、工場生産、組立ライン制御、航空捜索レーダー、目標追跡、武器の発射、飛行ラインのスケジュール設定、乗客の予約
accuracy and completeness with which users achieve specified goals,ユーザーが指定された目標を達成するための正確性と完全性
"Accuracy is a qualitative concept. The term precision is not a synonym for ""accuracy"". A true value is a value consistent with the definition of a given particular quantity and this is a value that would be obtained by a perfect measurement. In contexts where perfect measurement is not practically feasible, a conventional true value is a value attributed to a particular quantity and accepted, sometimes by convention, as having an uncertainty appropriate for a given purpose. 'Conventional true value', in the same reference, is sometimes called assigned value, best estimate of the value, conventional value or reference value. The accuracy can be expressed in terms of the Mean magnitude of relative error. [SOURCE: ISO/IEC Guide 99:2007 International vocabulary of metrology — Basic and general concepts and associated terms]",精度は定性的な概念です。精度という用語は「精度」と同義ではありません。真の値は、特定の量の定義と一致する値であり、完全な測定によって得られる値です。完全な測定が現実的に不可能な状況では、従来の真の値は、特定の量に起因する値であり、場合によっては慣例により、特定の目的に適した不確実性を持つものとして受け入れられます。同じ参考文献の「従来の真の値」は、割り当てられた値、値の最良推定値、従来の値、または基準値と呼ばれることもあります。精度は、相対誤差の平均の大きさで表すことができます。 [出典: ISO/IEC ガイド 99:2007 計量学の国際語彙 — 基本概念および一般概念および関連用語]
acquirer,取得者
"acquirer of products, services, or results for an organization",組織の製品、サービス、または成果の取得者
"act of applying a methodology for some particular purpose, typically an endeavor",何らかの特定の目的のために方法論を適用する行為、通常は努力
act of applying tunnel notation to an arrow segment,トンネル表記を矢印セグメントに適用する行為
act of defining and describing a methodology from a particular metamodel,特定のメタモデルから方法論を定義および記述する行為
act of determining the variant of the variation point defined in the variability model,変動モデルで定義された変動点のバリアントを決定する行為
act or process of assigning a number or category to an entity to describe an attribute of that entity,エンティティの属性を記述するためにエンティティに番号またはカテゴリを割り当てる行為またはプロセス
act or process of ensuring that a metric reliably predicts or assesses a quality factor,指標が品質係数を確実に予測または評価することを保証する行為またはプロセス
act or process of measuring,測定する行為またはプロセス
action in a transaction which leads to a state change of significance to the transaction,トランザクションにとって重要な状態変化を引き起こすトランザクション内のアクション
action indicating that a particular behavior shall not be prevented,特定の行為を妨げてはならないことを示す行為
action needed to perform an activity,アクティビティを実行するために必要なアクション
"action of applying specific documented criteria to a specific software module, package or product for the purpose of determining acceptance or release of the software module, package or product",ソフトウェア モジュール、パッケージ、または製品の受け入れまたはリリースを決定する目的で、特定の文書化された基準を特定のソフトウェア モジュール、パッケージ、または製品に適用する行為
action of mapping the measured value to the appropriate rating level,測定値を適切な評価レベルにマッピングするアクション
action resulting in an obligation by one or more of the participants in the act to comply with a rule or perform a contract,行為の参加者のうちの 1 人または複数人が規則を遵守したり契約を履行したりする義務をもたらす行為
action shared between two or more chains resulting in a single chain,2 つ以上のチェーン間でアクションが共有され、単一のチェーンが生成される
action taken to bring a defective or nonconforming component into compliance with requirements or specifications,欠陥のあるコンポーネントまたは不適合なコンポーネントを要件または仕様に準拠させるために取られる措置
action that assesses the value of something,何かの価値を評価する行為
"action that assigns something, such as authorization, responsibility or provision of a service, to another object",認可、責任、サービスの提供など、何かを別のオブジェクトに割り当てるアクション
action that associates a term from a name space with a given entity,名前空間の用語を特定のエンティティに関連付けるアクション
action that establishes a rule,ルールを確立する行為
action that establishes a state of affairs in the environment of the object making the declaration,宣言を行っているオブジェクトの環境で状況を確立するアクション
action that takes place with the participation of the environment of the object,オブジェクトの環境の参加によって行われるアクション
action to avoid or eliminate the causes or reduce the likelihood of occurrence of a potential nonconformity or other potential undesirable situation,潜在的な不適合やその他の潜在的な望ましくない状況の原因を回避または排除する、あるいは発生の可能性を減らすための行動
action to eliminate the cause or reduce the likelihood of recurrence of a detected nonconformity or other undesirable situation,検出された不適合またはその他の望ましくない状況の原因を除去するか、再発の可能性を軽減するための措置
action which enables two or more chains,2つ以上のチェーンを有効にするアクション
action which takes place without the participation of the environment of the object,物体の環境の関与なしに起こる行為
"actions taken to identify, document, review, and authorize changes to a software or documentation product that is being developed",開発中のソフトウェアまたはドキュメント製品の変更を特定、文書化、レビュー、承認するために行われるアクション
actions taken to improve the quality of the organization's processes aligned with the business needs,ビジネスニーズに合わせて組織のプロセスの品質を向上させるために取られる措置
actions taken to improve the quality of the organization's processes aligned with the business needs and the needs of other concerned parties,ビジネス ニーズおよび他の関係者のニーズに合わせて、組織のプロセスの品質を向上させるために取られる措置
actions to be taken for all combinations of conditions not covered by the other rules in the table,表内の他のルールでカバーされていない条件のすべての組み合わせに対して実行されるアクション
"actions, methods, and procedures for obtaining information on a given subject from stored data",保存されたデータから特定の主題に関する情報を取得するためのアクション、方法、および手順
"active enterprise object that has been delegated something (authorization, responsibility, provision of a service, etc.) by, and acts for, a party (in exercising the authorization, carrying out the responsibility, providing the service, etc.)",当事者によって何か（認可、責任、サービスの提供など）を委任され、（認可の行使、責任の実行、サービスの提供などにおいて）当事者の代理を務めるアクティブな企業オブジェクト。
active verb or verb phrase that describes what is to be accomplished by a function,能動的動詞または機能によって達成されることを説明する動詞句
"activities by which a certification body establishes that a person fulfills specified competence requirements, including application, evaluation, decision on certification, surveillance and recertification, and use of certificates and logos or marks",申請、評価、認証の決定、監視と再認証、証明書およびロゴまたはマークの使用を含む、個人が特定の能力要件を満たしていることを認証機関が証明する活動。
"activities concerned with monitoring the progress of a project, its direction, quality, and resource utilization, as compared with project plan",プロジェクト計画と比較した、プロジェクトの進捗状況、その方向性、品質、リソースの利用状況の監視に関する活動
activities concerned with project planning and project control,プロジェクト計画およびプロジェクト管理に関する活動
"activities concerned with the specification of the components, timing, resources, and procedures of a project",プロジェクトのコンポーネント、タイミング、リソース、手順の仕様に関係する活動
"activities involved in moving a new or changed service, system, or component to or from an environment",新規または変更されたサービス、システム、またはコンポーネントを環境との間で移動することに関連するアクティビティ
"activities involved throughout the system life cycle that address the human element of system design (including usability, measures of effectiveness, measures of performance, and total ownership cost)",システム設計の人的要素 (ユーザビリティ、有効性の測定、パフォーマンスの測定、および総所有コストを含む) に対処する、システムのライフサイクル全体に関わる活動
activities performed to ensure that a product or service remains operational,製品またはサービスが確実に稼働し続けるようにするために実行される活動
activities required to achieve a goal,目標を達成するために必要な活動
"activities that are undertaken in order to ensure that the software engineering processes are performed in a manner consistent with the organization's policies, goals, and standards.",ソフトウェア エンジニアリング プロセスが組織のポリシー、目標、基準と一致した方法で確実に実行されるようにするために行われる活動。
"activities that ensure requirements are identified, documented, maintained, communicated and traced throughout the life cycle of a system, product, or service",システム、製品、またはサービスのライフサイクル全体にわたって、要件が確実に特定、文書化、維持、伝達、追跡されるようにする活動
activities that occur after a software system has been formally accepted by its customer,ソフトウェア システムが顧客に正式に受け入れられた後に発生する活動
"activities, concepts, processes, and patterns used to construct a test model that is used to identify test conditions for a test item, derive corresponding test coverage items, and subsequently derive or select test cases",テスト項目のテスト条件を特定し、対応するテスト カバレッジ項目を導出し、その後テスト ケースを導出または選択するために使用されるテスト モデルを構築するために使用されるアクティビティ、概念、プロセス、およびパターン。
"activity group that is necessary to assure the successful completion of a project, but consists of supporting activities rather than activities directly oriented to the development effort",プロジェクトを確実に成功裏に完了させるために必要な活動グループですが、開発作業に直接向けられた活動ではなく、支援活動で構成されています。
"activity in software development consisting of detailed design, coding, unit testing, and debugging",詳細設計、コーディング、単体テスト、デバッグからなるソフトウェア開発活動
"activity in which a system or component is executed under specified conditions, the results are observed or recorded, and an evaluation is made of some aspect of the system or component",システムまたはコンポーネントが指定された条件下で実行され、結果が観察または記録され、システムまたはコンポーネントのある側面について評価が行われるアクティビティ
activity of applying ISO/IEC 20926:2009 to measure the functional size of a development project,開発プロジェクトの機能規模を測定するために ISO/IEC 20926:2009 を適用する活動
activity of applying ISO/IEC 20926:2009 to measure the functional size of an application,ISO/IEC 20926:2009 を適用してアプリケーションの機能サイズを測定する活動
activity of applying ISO/IEC 20926:2009 to measure the functional size of an enhancement project,ISO/IEC 20926:2009 を適用して拡張プロジェクトの機能サイズを測定する活動
activity of applying rules to measure the functional size of an application or project,アプリケーションまたはプロジェクトの機能サイズを測定するためにルールを適用するアクティビティ
activity of comparing objects of interest to each other or against a benchmark to evaluate characteristic(s),特性を評価するために、対象のオブジェクトを相互に比較したり、ベンチマークと比較したりするアクティビティ
activity of performing one or more testing tasks.,1 つ以上のテスト タスクを実行するアクティビティ。
activity of preparing documentation after it has been designed,設計後に文書を準備する活動
activity of sequencing attributes in a transactional function,トランザクション関数内のシーケンス属性のアクティビティ
activity of sequencing of rows or records in a transactional function,トランザクション関数における行またはレコードの順序付けのアクティビティ
"activity that, when consistently performed, contributes to achieving a specific process purpose",一貫して実行されると、特定のプロセスの目的の達成に貢献するアクティビティ
"activity that, when consistently performed, contributes to the achievement of a specific process attribute",一貫して実行されると、特定のプロセス属性の達成に貢献するアクティビティ
activity which leads to a set of object changes consistent with a dynamic schema (and its constraining invariant schema),動的スキーマ (およびその制約不変スキーマ) と一致する一連のオブジェクト変更をもたらすアクティビティ
activity-based costing,活動ベースの原価計算
Activity-on-No,アクティビティオンノー
actor that acquires an SEE service,SEE サービスを取得するアクター
actor that supplies an SEE service,SEE サービスを提供するアクター
"Actual and projected costs are closely tracked, and actions such as deleting or postponing lower priority requirements are taken if costs threaten to exceed targets.",実際のコストと予測コストは綿密に追跡され、コストが目標を超える恐れがある場合には、優先度の低い要件を削除または延期するなどの措置が取られます。
actual cost,実費
actual cost of work performed,実行された作業の実費
"Ada, ALGOL, PL/I",エイダ、ALGOL、PL/I
"Ada, COBOL, FORTRAN, ALGOL, PASCAL",Ada、COBOL、FORTRAN、ALGOL、PASCAL
"Adaptability includes the scalability of internal capacity, such as screen fields, tables, transaction volumes, and report formats. Adaptations include those carried out by specialized support staff, business or operational staff, or end users. If the system is to be adapted by the end user, adaptability corresponds to suitability for individualization as defined in ISO 9241 110.",適応性には、画面フィールド、テーブル、トランザクション量、レポート形式などの内部容量の拡張性が含まれます。適応には、専門のサポート スタッフ、ビジネス スタッフ、運用スタッフ、またはエンド ユーザーによって実行されるものが含まれます。システムがエンドユーザーによって適応される場合、適応性は ISO 9241 110 で定義されている個別化の適合性に対応します。
adaptation of a software or documentation product to the needs of a particular audience,ソフトウェアまたはドキュメント製品を特定の利用者のニーズに適応させること
"adaptation of a software process by adding, modifying, and deleting process activities that are deemed inapplicable for the project",プロジェクトに適用されないと思われるプロセスアクティビティを追加、変更、削除することによるソフトウェアプロセスの適応化
Adaptive maintenance provides enhancements necessary to accommodate changes in the environment in which a software product must operate. These changes are those that must be made to keep pace with the changing environment.,適応型メンテナンスは、ソフトウェア製品が動作する必要がある環境の変化に対応するために必要な機能強化を提供します。これらの変化は、環境の変化に対応するために行われなければならないものです。
"add, change or delete data through an elementary process",基本的なプロセスによるデータの追加、変更、または削除
additional income from one alternative compared to another,ある選択肢から別の選択肢と比べて追加の収入が得られる
"additional unnecessary steps not required as part of completing a task, misleading information, insufficient or poor information on the user interface, unexpected system responses, limitations in navigation, inefficient use error recovery mechanisms, physical characteristics of the user interface that are not suitable for the physical characteristics of the user, deviations of product attributes from established criteria",タスクの完了の一部として必要とされない追加の不必要な手順、誤解を招く情報、ユーザーインターフェイス上の不十分または貧弱な情報、予期しないシステム応答、ナビゲーションの制限、非効率的な使用エラー回復メカニズム、ユーザーの身体的特徴に適していないユーザーインターフェイスの物理的特性、確立された基準からの製品属性の逸脱
address expressed as a name or label that must be translated to the absolute address of the device or storage location to be accessed,アクセスするデバイスまたはストレージの場所の絶対アドレスに変換する必要がある名前またはラベルとして表現されるアドレス
address of a device or storage location from which data is to be transferred,データの転送元となるデバイスまたはストレージの場所のアドレス
address of a storage location in the main storage part of a virtual storage system,仮想ストレージ システムのメイン ストレージ部分のストレージ ロケーションのアドレス
address of the device or storage location to which data is to be transferred,データの転送先となるデバイスまたはストレージの場所のアドレス
address of the first instruction of a computer program in main storage,主記憶装置内のコンピュータプログラムの最初の命令のアドレス
"address of the initial storage location assigned to a computer program by an assembler, a compiler, or a linkage editor",アセンブラ、コンパイラ、またはリンケージエディタによってコンピュータプログラムに割り当てられた最初の記憶場所のアドレス
address of the initial storage location assigned to a computer program in main memory,メインメモリ内のコンピュータプログラムに割り当てられた最初の記憶場所のアドレス
address of the initial storage location of a computer program at the time the program is loaded into main memory,プログラムがメインメモリにロードされるときのコンピュータプログラムの最初の格納場所のアドレス
address space specified and used by the instruction system of a computer,コンピュータの命令システムによって指定され使用されるアドレス空間
address that has been calculated during the execution of a computer program,コンピュータプログラムの実行中に計算されたアドレス
address that identifies the storage location of an operand,オペランドの格納場所を識別するアドレス
address that identifies the storage location of another address,別のアドレスの保存場所を識別するアドレス
address that is permanently assigned to a device or storage location and that identifies the device or location without the need for translation or calculation,デバイスまたは保管場所に永続的に割り当てられ、変換や計算を必要とせずにデバイスまたは場所を識別するアドレス。
address that is to be adjusted by the loader when the computer program containing the address is loaded into memory,アドレスを含むコンピュータプログラムがメモリにロードされるときにローダーによって調整されるアドレス
address that must be added to the address of the instruction in which it appears to obtain the address of the storage location to be accessed,アクセスされる記憶場所のアドレスを取得するために命令のアドレスに追加する必要があるアドレス
address that must be added to the contents of an index register to obtain the address of the storage location to be accessed,アクセスする記憶場所のアドレスを取得するためにインデックス レジスタの内容に追加する必要があるアドレス
address that must be adjusted by the addition of an offset to determine the address of the storage location to be accessed,アクセスする記憶場所のアドレスを決定するためにオフセットを追加して調整する必要があるアドレス
"address that results from performing any required indexing, indirect addressing, or other address modification on a specified address",指定されたアドレスに対して必要なインデックス付け、間接アドレス指定、またはその他のアドレス変更を実行した結果得られるアドレス
address used as a reference point to which a relative address is added to determine the address of the storage location to be accessed,アクセスされる記憶場所のアドレスを決定するために相対アドレスが追加される参照点として使用されるアドレス
addressable element in the control store of a microprogrammed computer,マイクロプログラムされたコンピュータの制御ストア内のアドレス指定可能な要素
addressable storage space in a processing unit and all other internal storage that is used to execute instructions,命令を実行するために使用される処理装置およびその他すべての内部ストレージ内のアドレス指定可能な記憶域スペース
addresses that a computer program can access,コンピュータプログラムがアクセスできるアドレス
"addressing inflation and deflation by using cash flow amounts that represent money values which are referenced to a fixed time (typically, the beginning of a project)",一定の時点 (通常はプロジェクトの開始時) を基準とした貨幣価値を表すキャッシュ フロー金額を使用して、インフレとデフレに対処する
addressing inflation or deflation by using cash-flow amounts that represent actual amounts of money at the time of the cash flow,キャッシュフロー時の実際の金額を表すキャッシュフロー額を使用してインフレまたはデフレに対処する
"ADM does not preclude source-to-source migrations (where appropriate), but encourages user organizations to consider modernization from an analysis and design perspective.",ADM は、ソースからソースへの移行 (該当する場合) を妨げませんが、ユーザー組織が分析と設計の観点から最新化を検討することを奨励します。
administrator responsible for the implementation of a security policy,セキュリティ ポリシーの実装を担当する管理者
"advisory in software user documentation that performing some action can lead to consequences that are unwanted or undefined, such as loss of data or an equipment problem",ソフトウェアのユーザーマニュアルには、何らかのアクションを実行すると、データの損失や機器の問題など、望ましくない、または未定義の結果が生じる可能性があるという注意事項が記載されています。
advisory information in documentation that states that performing some action can lead to serious or dangerous consequences,何らかのアクションを実行すると重大または危険な結果につながる可能性があることを記載した文書内の勧告情報
agent of the export process,輸出手続きの代理人
agent of the import process,輸入手続きの代理人
aggregate of all unit responses to internal and external stimuli,内部および外部の刺激に対するすべてのユニットの反応の集合体
Aggregation methods are based on compensatory or non-compensatory models,集計方法は補償モデルまたは非補償モデルに基づいています
aggregation of hardware that is designated for configuration management and treated as a single entity in the configuration management process,構成管理用に指定され、構成管理プロセスにおいて単一のエンティティとして扱われるハードウェアの集合体
aggregation of software that is designated for configuration management and treated as a single entity in the configuration management process,構成管理用に指定され、構成管理プロセスにおいて単一のエンティティとして扱われるソフトウェアの集合体
"aggregation of software, such as a computer program or database, that satisfies an end use function and is designated for specification, qualification testing, interfacing, configuration management, or other purposes",最終用途の機能を満たし、仕様、認定テスト、インターフェース、構成管理、またはその他の目的に指定された、コンピュータ プログラムやデータベースなどのソフトウェアの集合体
aggregation of work products that is designated for configuration management and treated as a single entity in the configuration management process,構成管理用に指定され、構成管理プロセスにおいて単一のエンティティとして扱われる作業成果物の集合体
agreement by everyone in the group on a single course of action,単一の行動方針についてグループ全員が合意すること
agreement governing part of the collective behavior of a set of objects,一連のオブジェクトの集団的行動の一部を管理する合意
"agreement or result designated and fixed at a given time, from which changes require justification and approval",特定の時点で指定および固定された合意または結果。変更には正当化と承認が必要です。
"algebraic structure comprising a set of places; a set of transitions; a set of types; a function associating a type to each place, and a set of modes (a type) to each transition; pre-function imposing token demands (multisets of tokens) on places for each transition mode; post function determining output tokens (multisets of tokens) for places for each transition mode; and an initial marking",一連の場所を含む代数構造。一連のトランジション。タイプのセット。タイプを各場所に関連付け、モードのセット (タイプ) を各遷移に関連付ける関数。各遷移モードの場所にトークン要求 (トークンのマルチセット) を課す機能前。各遷移モードの場所の出力トークン (トークンのマルチセット) を決定するポスト関数。そしてイニシャルマーキング
"algebraic structure with two sets, one called places and the other called transitions, together with their associated relations and functions, and named after their inventor, Carl Adam Petri",1 つは場所と呼ばれ、もう 1 つは遷移と呼ばれる 2 つのセットと、それらに関連する関係および関数を備えた代数構造。発明者カール アダム ペトリにちなんで名付けられました。
ALGOL,アルゴル
algorithm or calculation performed to combine two or more base measures,2 つ以上の基本メジャーを組み合わせるために実行されるアルゴリズムまたは計算
algorithm or calculation performed to combine two or more quality measure elements,2 つ以上の品質尺度要素を組み合わせるために実行されるアルゴリズムまたは計算
"algorithm that lets multiple readers access a shared data repository concurrently; however, writers must have mutually exclusive access to update the repository",複数のリーダーが共有データ リポジトリに同時にアクセスできるようにするアルゴリズム。ただし、ライターはリポジトリを更新するために相互に排他的なアクセス権を持っている必要があります
algorithm that provides bounded priority inversion,制限された優先順位の逆転を提供するアルゴリズム
all components of an interactive system (software or hardware) that provide information and controls for the user to accomplish specific tasks with the interactive system,ユーザーが対話型システムで特定のタスクを実行するための情報と制御を提供する対話型システムのすべてのコンポーネント (ソフトウェアまたはハードウェア)
"all of the functions (input, output, transport, processing, and storage) of an application, databases, technical facilities, and manual procedures which support business processes",ビジネスプロセスをサポートするアプリケーション、データベース、技術的設備、および手動手順のすべての機能 (入力、出力、転送、処理、および保管)
"all or part of the programs, procedures, rules, and associated documentation of an information processing system",情報処理システムのプログラム、手順、ルール、および関連文書の全部または一部
"all the planned and systematic activities implemented within the quality system, and demonstrated as needed, to provide adequate confidence that an entity will fulfill requirements for quality",事業体が品質要件を満たしているという十分な確信を与えるために、品質システム内で実施され、必要に応じて実証されるすべての計画的かつ体系的な活動。
"all the technical components, system software, databases and data files and deployed application software, technical procedures, and technical documentation used to make the information available",情報を利用可能にするために使用されるすべての技術コンポーネント、システム ソフトウェア、データベースとデータ ファイル、展開されたアプリケーション ソフトウェア、技術手順、および技術文書
all those activities subsequent to the general initiation routine and prior to the general termination routine within the complete procedure,完全な手順内の一般的な開始ルーチンの後および一般的な終了ルーチンの前のすべてのアクティビティ
all those activities which commence with entry to the procedure and conclude with exit from the procedure,手続きへの参加で始まり、手続きからの退出で終わるすべてのアクティビティ
All widely-used programming languages are of this type.,広く使用されているプログラミング言語はすべてこのタイプです。
allocation (partitioning) of responsibility to different organizational units,異なる組織単位への責任の割り当て（分割）
"Allocation can be made entirely to hardware, software, or humans, or to some combination to be resolved upon further functional decomposition.",割り当ては、完全にハードウェア、ソフトウェア、または人間に行うことも、さらに機能を分解して解決する何らかの組み合わせに行うこともできます。
"Allocation of a resource can constrain other behaviors for which that resource is essential. Resources can be reusable, renewable or consumable. A consumable resource can become unavailable after some amount of use or after some amount of time (in case a duration or expiry has been specified for the resource).",リソースの割り当ては、そのリソースが不可欠な他の動作を制約する可能性があります。リソースは、再利用可能、再生可能、または消耗可能です。消耗品リソースは、ある程度使用した後、または一定の時間が経過すると (リソースに期間または有効期限が指定されている場合) 利用できなくなることがあります。
allows sunk cost and salvage values to be properly accounted for in a decision to replace a system,システムの交換を決定する際に、埋没費用と残存価値を適切に考慮できるようになります。
allows the branch to stabilize for a release.,リリースに向けてブランチを安定させることができます。
allows the decision maker to account for optimistic and pessimistic views,意思決定者が楽観的な見方と悲観的な見方を考慮できるようにする
already developed and available.,すでに開発され、利用可能になっています。
"alteration in the configuration of a hardware/software configuration item or items, delivered, to be delivered, or under development, after formal establishment of their configuration identification",構成識別が正式に確立された後の、納品された、納品される予定、または開発中のハードウェア/ソフトウェア構成アイテムの構成の変更
"alternate name for an IDEF1X model construct (class, responsibility, entity, or domain)",IDEF1X モデル構成 (クラス、責任、エンティティ、またはドメイン) の代替名
alternative systems review,代替システムのレビュー
alternative that is assumed to provide equivalent service to another alternative over their lives; all the revenue cash flows are ignored to simplify the comparison and only the expense cash flows are shown,代替者は、生涯にわたって別の代替者と同等のサービスを提供すると想定されています。比較を簡単にするために収益キャッシュ フローはすべて無視され、支出キャッシュ フローのみが表示されます。
alternative that is described in terms of its complete cash-flow stream with expense and incom,費用と収入を含む完全なキャッシュ フロー ストリームの観点から説明される代替案
"Alternatively, or in addition, a clear description of the table.",代わりに、または追加として、テーブルの明確な説明。
"Although ""accessibility"" typically addresses users who have disabilities, the concept is not limited to disability issues. The range of capabilities includes disabilities associated with age. Accessibility for people with disabilities can be specified or measured either as the extent to which a product or system can be used by users with specified disabilities to achieve specified goals with effectiveness, efficiency, freedom from risk and satisfaction in a specified context of use, or by the presence of product properties that support accessibility. Context of use includes direct use or use supported by assistive technologies. [SOURCE: ISO 9241-171:2008",「アクセシビリティ」は通常、障害のあるユーザーを対象としていますが、この概念は障害の問題に限定されません。能力の範囲には、年齢に伴う障害が含まれます。障害のある人々のアクセシビリティは、特定の障害を持つユーザーが製品またはシステムを使用して、指定された使用状況において有効性、効率性、リスクからの解放および満足度を伴って指定された目標を達成できる範囲として、またはアクセシビリティをサポートする製品特性の存在によって指定または測定できます。使用のコンテキストには、直接使用または支援技術によってサポートされる使用が含まれます。 [出典: ISO 9241-171:2008]
"Although information will necessarily have a representation form to make it communicable, it is the interpretation of this representation (the meaning) that is relevant in the first place.",情報を伝達可能にするためには必然的に表現形式が必要になりますが、そもそも重要なのはこの表現の解釈（意味）です。
American National Standards Institute.,アメリカ国家規格協会。
amount of a series of equal payments at regular intervals over a planning horizon,計画期間にわたる一定の間隔での一連の均等支払いの金額
amount of effort directly expended in creating a specific output product,特定の出力製品を作成するために直接費やされる労力の量
amount of elapsed time or processor time used in executing a computer program,コンピュータプログラムの実行に費やされた経過時間またはプロセッサ時間
amount of time a computer system spends performing tasks that do not contribute directly to the progress of any user task,コンピュータ システムがユーザー タスクの進行に直接寄与しないタスクの実行に費やす時間
"amount of unscheduled time between sequential activities not on the critical path, which can be used to delay the completion of the earlier activity or advance the start of the later activity",クリティカル パス上にない連続したアクティビティ間の予定外の時間。前のアクティビティの完了を遅らせたり、後のアクティビティの開始を早めたりするために使用できます。
amount of work that can be performed by a computer system or component in a given period of time,コンピュータ システムまたはコンポーネントが一定期間内に実行できる作業量
An <x> interceptor performs checks to enforce or monitor policies on permitted interactions between basic engineering objects in different domains; performs transformations to mask differences in interpretation of data by basic engineering objects in different domains. An inter-subnetwork relay is an example of an interceptor,<x> インターセプタは、異なるドメイン内の基本的なエンジニアリング オブジェクト間の許可された対話に関するポリシーを強制または監視するためのチェックを実行します。変換を実行して、さまざまなドメインの基本的なエンジニアリング オブジェクトによるデータの解釈の違いをマスクします。サブネットワーク間リレーはインターセプタの一例です
an abacus,そろばん
"an abrupt shutdown of an OS process that brings down a system, a significant increase in users of the system",OS プロセスが突然シャットダウンしてシステムがダウンし、システムのユーザーが大幅に増加する
"An activity normally has an expected duration, cost, and resource requirements. Activities are often subdivided into tasks.",通常、アクティビティには、予想される期間、コスト、およびリソース要件があります。多くの場合、アクティビティはタスクに細分化されます。
an activity that can be planned and measured and that yields a specific output,計画および測定が可能で、特定の成果を生み出す活動
an activity that does not produce definitive end products and is measured by the passage of time,最終的な最終製品を生み出さず、時間の経過によって評価される活動
an activity that logically comes before a dependent activity in a schedule,スケジュール内で依存アクティビティより論理的に前に来るアクティビティ
an activity where effort is allotted proportionately across certain discrete efforts and not divisible into discrete efforts,努力が特定の個別の努力に比例して割り当てられ、個別の努力に分割できない活動
an actual condition that is different from the expected condition that is contained in the baseline plan,ベースライン計画に含まれる予想条件とは異なる実際の条件
An addressing range depends on the bits of address lines and addressing mode.,アドレス範囲は、アドレス ラインのビットとアドレス指定モードによって異なります。
"An adverse consequence results from the system-of-interest being in a dangerous condition combined with th environment of the system being in its worst-case state (relative to the adverse consequence). The concept of adverse consequences covers not only harm in the safety context, but also other losses, such as loss of assets in the security context.",悪影響は、対象システムが危険な状態にあることと、システムの環境が (悪影響と比較して) 最悪の状態にあることと組み合わされて発生します。悪影響の概念には、安全上の危害だけでなく、セキュリティ上の資産の損失などの他の損失も含まれます。
"An agent can be a party or can be the ODP system or one of its components. Another system in the environment of the ODP system can also be an agent. The delegation can have been direct, by a party, or indirect, by an agent of the party having authorization from the party to so delegate.",エージェントは当事者であることも、ODP システムまたはそのコンポーネントの 1 つであることもできます。 ODP システムの環境内の別のシステムもエージェントになることができます。委任は、当事者による直接的なものであっても、当事者から委任の許可を得た当事者の代理人による間接的なものであってもよい。
an agreement that sets the amount that will be paid for a defined scoped of work regardless of cost or effort to deliver it,定義された範囲の仕事に対して、それを実現するためのコストや労力に関係なく支払われる金額を設定する契約
an airline reservation system,航空会社の予約システム
"an alternative set of actions and tasks available in the event the primary plan must be abandoned because of issues, risks or other causes",問題、リスク、またはその他の原因により主計画を放棄しなければならない場合に利用できる、代替のアクションとタスクのセット
an amount of the project budget withheld for management control purposes. These are budgets reserved for unforeseen work that is within scope of the project. The management reserve is not included in the Performance Measurement Baseline (PMB),管理制御の目的で保留されるプロジェクト予算の金額。これらは、プロジェクトの範囲内で予期せぬ作業のために確保されている予算です。管理準備金はパフォーマンス測定ベースライン (PMB) には含まれていません
an analytic technique where a series of input variables are examined in relation to their corresponding output results in order to develop a mathematical or statistical relationship,数学的または統計的な関係を構築するために、一連の入力変数を対応する出力結果との関連で検査する分析手法
"an analytical procedure in which each potential failure mode in every component of a product is analyzed to determine its effect on the reliability of that component and, by itself or in combination with other possible failure modes, on the reliability of the product or system and on the required function of the component; or the examination of a product (at the system and/or lower levels) for all ways that a failure may occur. For each potential failure, an estimate is made of its effect on the total system and of its impact. In addition, a review is undertaken of the action planned to minimize the probability of failure and to minimize its effects",製品のすべてのコンポーネントの潜在的な各故障モードを分析して、そのコンポーネントの信頼性、および単独で、または他の考えられる故障モードと組み合わせて、製品またはシステムの信頼性、およびコンポーネントの必要な機能に及ぼす影響を判断する分析手順。または、障害が発生する可能性のあるあらゆる方法について製品を (システムおよび/または下位レベルで) 検査します。潜在的な障害ごとに、システム全体への影響とその影響が推定されます。さらに、失敗の可能性を最小限に抑え、その影響を最小限に抑えるために計画されたアクションのレビューが行われます。
"an analytical technique that uses mathematical models to forecast future outcomes based on historical results. It is a method of determining the variance from a baseline of a budget, cost, schedule, or scope parameter by using prior progress reporting periods' data and projecting how much that parameter's variance from baseline might be at some future point in the project if no changes are made in executing the project",数学的モデルを使用して、過去の結果に基づいて将来の結果を予測する分析手法。これは、以前の進捗報告期間のデータを使用して、予算、コスト、スケジュール、範囲パラメーターのベースラインからの差異を決定し、プロジェクトの実行に変更が加えられなかった場合に、プロジェクトの将来のある時点でそのパラメーターのベースラインからの差異がどの程度になるかを予測する方法です。
"an analytical technique to determine the essential features and relationships of components in the project management plan to establish a reserve for the schedule duration, budget, estimated cost, or funds for a project",プロジェクト管理計画におけるコンポーネントの重要な特徴と関係を判断し、プロジェクトのスケジュール期間、予算、推定コスト、または資金の予備を確立するための分析手法
"an analytical technique to determine the information needs of the project stakeholders through interviews, workshops, study of lessons learned from previous projects, etc.",インタビュー、ワークショップ、以前のプロジェクトから学んだ教訓の研究などを通じて、プロジェクト関係者の情報ニーズを判断する分析手法。
an analytical technique used to determine the basic underlying reason that causes a variance or a defect or a risk. A root cause may underlie more than one variance or defect or risk.,差異、欠陥、またはリスクを引き起こす基本的な根本的な理由を判断するために使用される分析手法。根本原因は、複数の差異、欠陥、またはリスクの根底にある場合があります。
an application function point count related to a set of installed systems,インストールされている一連のシステムに関連するアプリケーション機能ポイント数
An application management organization can be an internal or external unit in relation to the user organization.,アプリケーション管理組織は、ユーザー組織に関して内部単位または外部単位になることができます。
"an approach used to optimize project life cycle costs, save time, increase profits, improve quality, expand market share, solve problems, and/or use resources more effectively",プロジェクトのライフサイクルコストの最適化、時間の節約、利益の増加、品質の向上、市場シェアの拡大、問題の解決、および/またはリソースのより効率的な使用に使用されるアプローチ
"an approved integrated scope-schedule-cost plan for the project work against which project execution i compared to measure and manage performance. The PMB includes contingency reserve, but excludes management reserve",プロジェクトの実行を比較してパフォーマンスを測定および管理するプロジェクト作業の、承認された統合スコープ、スケジュール、コスト計画。 PMB には危険準備金が含まれますが、管理準備金は含まれません
"An argument not designated as ""updatable"" means that no requests can be sent that can change the state of the instance identified by the argument.",「更新可能」として指定されていない引数は、引数によって識別されるインスタンスの状態を変更できるリクエストを送信できないことを意味します。
"an artifact that is produced, is quantifiable, and can be either an end item in itself or a component item",生産され、定量化可能で、それ自体が最終品目または構成品目のいずれかになる成果物
An assembly can be regarded as behaviorally equivalent with a unit. The ports of the unit are just those ports of the assembly units that are not internally interconnected. The behavior of the unit is a composition of the shared behaviors of the assembly units,アセンブリは、ユニットと動作的に同等であるとみなすことができます。ユニットのポートは、内部で相互接続されていないアセンブリ ユニットのポートにすぎません。ユニットの動作は、アセンブリユニットの共有動作の合成です。
an assignment that can be delegated within a project management plan such that the assigned resource incurs a duty to perform the requirements of the assignment,割り当てられたリソースが割り当ての要件を実行する義務を負うように、プロジェクト管理計画内で委任できる割り当て。
An associative entity is used when a relationship does not otherwise provide sufficient mechanisms.,関連エンティティは、関係によって十分なメカニズムが提供されない場合に使用されます。
An assurance case contains the following and their relationships: one or more claims about properties; arguments that logically link the evidence and any assumptions to the claim(s); a body of evidence and possibly assumptions supporting these arguments for the claim(s); justification of the choice of top-level claim and the method of reasoning,保証ケースには、次の内容とその関係が含まれます。プロパティに関する 1 つ以上のクレーム。証拠および仮定を主張に論理的に結び付ける議論。主張に対するこれらの議論を裏付ける一連の証拠と、場合によっては仮定。最上位の主張の選択の正当性と推論方法
An audit results in a clear indication of whether the audit criteria have been met.,監査の結果、監査基準が満たされているかどうかが明確に示されます。
an earned value method for assigning a specified percentage of budget value of a work package to the start milestone of the work package with the remaining budget value percentage assigned when the work package is complete,ワークパッケージの予算値の指定された割合をワークパッケージの開始マイルストーンに割り当て、ワークパッケージが完了したときに残りの予算値の割合を割り当てるアーンドバリュー方式。
"an earned value method that divides a work package into measurable segments, each ending with an observable milestone, and then assigns a weighted value to the achievement of each milestone",作業パッケージを測定可能なセグメントに分割し、各セグメントが観察可能なマイルストーンで終わり、各マイルストーンの達成度に重み付けされた値を割り当てるアーンドバリュー手法。
An effective license consists of one or more underlying licenses. Full use of the software is as defined in the terms and conditions of the license(s).,有効なライセンスは、1 つ以上の基礎となるライセンスで構成されます。ソフトウェアの完全な使用は、ライセンスの利用規約に定義されているとおりです。
An element can contain sub elements or other software/system elements that are dependent on the top-level element.,要素には、トップレベルの要素に依存するサブ要素または他のソフトウェア/システム要素を含めることができます。
"an elementary component of a set of Functional User Requirements, comprising a unique, cohesive and independently executable set of data or data movements (functional services)",一連の機能的ユーザー要件の基本コンポーネントであり、独自で一貫性があり、独立して実行可能なデータまたはデータ移動のセット (機能的サービス) で構成されます。
an elementary unit of functional user requirements defined by and used by an FSM method for measurement purposes,測定目的で FSM メソッドによって定義され、使用される機能ユーザー要件の基本単位
an elicitation technique that analyzes existing documentation and identifies information relevant to the requirements,既存の文書を分析し、要件に関連する情報を特定する抽出手法
"an elicitation technique that brings together prequalified stakeholders and subject matter experts to learn about their expectations and attitudes about a proposed product, service, or result",提案された製品、サービス、または結果についての期待や態度を知るために、事前に資格を与えられた利害関係者と対象分野の専門家を集めて引き出す手法。
an elicitation technique using focused sessions that bring key cross-functional stakeholders together to define product requirements,製品要件を定義するために主要な部門横断的な関係者を集める集中的なセッションを使用した引き出し手法
An end user will generally be defined in terms of a specific software component of a system.,エンド ユーザーは通常、システムの特定のソフトウェア コンポーネントに関して定義されます。
"An engineering interface reference is necessary to establish distributed bindings, and is distinct from the binding endpoint identifiers used by a basic engineering object for the purposes of interaction.",エンジニアリング インターフェイス参照は、分散バインディングを確立するために必要であり、対話の目的で基本的なエンジニアリング オブジェクトによって使用されるバインディング エンドポイント識別子とは異なります。
An enterprise object that is an artifact in one action can be an actor in another action.,あるアクションではアーティファクトであるエンタープライズ オブジェクトが、別のアクションではアクターになる可能性があります。
an enterprise whose personnel are most directly involved in doing the work of the project or program,従業員がプロジェクトまたはプログラムの作業に最も直接的に関与している企業
"An entitlement is sometimes revoked by the organization which originally issued it. The entitlement schema (Ent) enables the recording of entitlement revocations. Specific Ent transactions can also be revoked, e.g., to correct errors or record the rescinding of entitlement allocations.",資格は、最初にそれを発行した組織によって取り消される場合があります。資格スキーマ (Ent) により、資格取り消しの記録が可能になります。特定の Ent トランザクションは、たとえばエラーを修正したり、権利割り当ての取り消しを記録したりするために取り消すこともできます。
an entity type in a logical file,論理ファイル内のエンティティ タイプ
"an entity type that cannot be maintained and, consequently, is not counted within the framework of FPA",維持できないため、FPA のフレームワーク内でカウントされないエンティティ タイプ
"an entity type that has a secondary function in the application (e.g., code tables, reference tables, entity types with constants, text, or decodings) and whose data can be maintained by the application to be counted or by a different application",アプリケーション内で二次的な機能を持つエンティティ タイプ (例: コード テーブル、参照テーブル、定数、テキスト、またはデコードを含むエンティティ タイプ) で、そのデータはカウント対象のアプリケーションまたは別のアプリケーションによって維持できます。
an entry in the work breakdown structure that can be at any level,どのレベルでも使用できる作業分解構造のエントリ
"an entry is considered to account for certain associated data manipulations (e.g., validation of the entered data)",エントリは、特定の関連するデータ操作 (入力されたデータの検証など) を考慮していると見なされます。
An entry point is an executable statement within a test item that can be selected by an external process as the starting point for one or more paths through the test item. It is most commonly the first executable statement within the test item.,エントリ ポイントは、テスト項目内の 1 つ以上のパスの開始点として外部プロセスによって選択できる、テスト項目内の実行可能なステートメントです。最も一般的には、テスト項目内の最初の実行可能なステートメントです。
an established method of accomplishing a consistent performance or result. A procedure typically can be described as the sequence of steps that will be used to execute a process,一貫したパフォーマンスや結果を達成するための確立された方法。プロシージャは通常、プロセスを実行するために使用される一連のステップとして説明できます。
"an estimate, expressed as a percent, of the amount of work that has been completed on an activity or a work breakdown structure component",アクティビティまたは作業分解構造コンポーネントで完了した作業量のパーセントで表される推定値
an event or occurrence that could affect the execution of the project that may be accounted for with a reserve,引当金で計上される可能性のある、プロジェクトの実行に影響を与える可能性のあるイベントまたは出来事
an event or situation that indicates that a risk is about to occur,リスクが発生しつつあることを示す出来事または状況
An exit is considered to account for certain associated data manipulations (e.g. formatting and routing associated with the data to be exited).,終了は、特定の関連するデータ操作 (終了するデータに関連するフォーマットやルーティングなど) を考慮すると考えられます。
"An exit point is a terminal point of a path through a test item, being an executable statement within the test item which either terminates the test item, or returns control to an external process. This is most commonly the last executable statement within the test item.",出口点はテスト項目を通るパスの終端点であり、テスト項目を終了するか外部プロセスに制御を返すテスト項目内の実行可能ステートメントです。最も一般的には、これはテスト項目内の最後の実行可能ステートメントです。
An external measure of an attribute of a computing system (such as the response time to user input) is an indirect measure of attributes of the software as the measure will be influenced by attributes of the computing environment as well as attributes of the software.,コンピューティング システムの属性の外部尺度 (ユーザー入力に対する応答時間など) は、ソフトウェアの属性だけでなくコンピューティング環境の属性にも影響を受けるため、ソフトウェアの属性の間接的な尺度です。
an FSM method to be used for comparison reasons when verifying the functional size measurement results,機能サイズの測定結果を検証する際の比較目的で使用される FSM メソッド
An HCI exists where functional allocations have been made that clearly distinguish equipment functions from software functions and where the hardware has been established as a configuration item.,HCI は、機器の機能とソフトウェアの機能を明確に区別して機能割り当てが行われ、ハードウェアが構成要素として確立されている場所に存在します。
An ICOM code is used to associate a boundary arrow of a child diagram with an arrow attached to an ancestral box.,ICOM コードは、子ダイアグラムの境界矢印を祖先ボックスに付加された矢印に関連付けるために使用されます。
An ICOM label associates a boundary arrow of a child diagram with an arrow label of an arrow attached to an ancestral box.,ICOM ラベルは、子ダイアグラムの境界矢印を祖先ボックスに付けられた矢印の矢印ラベルに関連付けます。
An IDEF0 model's model name and model name abbreviation are placed in the A-0 context diagram along with the model's purpose statement and viewpoint statement.,IDEF0 モデルのモデル名とモデル名の略語は、モデルの目的ステートメントと視点ステートメントとともに A-0 コンテキスト図に配置されます。
An IDEF0 object type is generally analogous to an IDEF1X entity or an IDEF1 entity class.,IDEF0 オブジェクト タイプは、通常、IDEF1X エンティティ クラスまたは IDEF1 エンティティ クラスに似ています。
"an identified area of project management defined by its knowledge requirements and described in terms of its component processes, practices, inputs, outputs, tools, and techniques",知識要件によって定義され、その構成要素であるプロセス、実践、インプット、アウトプット、ツール、およびテクニックの観点から説明されるプロジェクト管理の識別された領域
"An identified part of an organization (even as small as a single individual) or an identified group of organizations can be regarded as an organization if it has responsibilities, authorities and relationships. A body of persons organized for some specific purpose, such as a club, union, corporation, or society, is an organization. An organization can be public or private. The arrangement is generally orderly.",組織の特定の部分 (たとえ 1 人の個人のような小さなものであっても) または組織の特定のグループは、責任、権限、および関係がある場合、組織と見なすことができます。クラブ、労働組合、企業、協会など、特定の目的のために組織された人の集まりが組織です。組織は公的または民間の場合があります。配置は一般的に整然としています。
an imperfection or deficiency in a project component where that component does not meet its requirements or specifications and needs to be either repaired or replaced,プロジェクトコンポーネントの不完全性または欠陥で、そのコンポーネントが要件または仕様を満たしておらず、修理または交換が必要な場合
"An inclusive term that describes the sum of knowledge within the profession of project management. As with other professions, such as law, medicine, and accounting, the body of knowledge rests with the practitioners and academics that apply and advance it. The complete project management body of knowledge includes proven traditional practices that are widely applied and innovative practices that are emerging in the profession. The body of knowledge includes both published and unpublished materials. This body of knowledge is constantly evolving",プロジェクト管理の専門職における知識の総和を表す包括的な用語。法律、医学、会計などの他の専門職と同様、知識体系はそれを応用し発展させる実務家や学者にかかっています。完全なプロジェクト管理の知識体系には、広く適用されている実証済みの伝統的な実践方法と、専門分野で新たに登場しつつある革新的な実践方法が含まれています。知識体系には、公開された資料と未公開の資料の両方が含まれます。この知識体系は常に進化しています
"an indication denoting the estimated size of an application or project, based exclusively on a conceptual data model or a data model in the third normal-form",概念的なデータ モデルまたは第 3 正規形のデータ モデルのみに基づいて、アプリケーションまたはプロジェクトの推定サイズを示す指標
"An indication of exposure to risk. If a project is canceled before it reaches its payback period, the organization will have lost money.",リスクにさらされていることを示します。投資回収期間に達する前にプロジェクトがキャンセルされた場合、組織は損失を被ることになります。
"an indicator of the number of story points, features, functions, user stories, use cases, or requirements completed and the work remaining or remaining effort needed to complete a product development iteration cycle. Work is measured as all work done to deliver story points, features, functions, user stories, use cases, or requirements during a product development iteration.",完了したストーリー ポイント、機能、機能、ユーザー ストーリー、ユース ケース、または要件の数と、製品開発の反復サイクルを完了するために必要な残りの作業または残りの労力を示す指標。作業は、製品開発の反復中にストーリー ポイント、機能、機能、ユーザー ストーリー、ユース ケース、または要件を提供するために行われたすべての作業として測定されます。
"an indicator of the work completed and an estimate of remaining work to be completed or remaining effort needed to complete a product development iteration cycle. Work is measured as all work done to deliver story points, stories, features, functions, function points, user stories, use cases, or requirements during a product development iteration.",完了した作業の指標と、完了すべき残りの作業または製品開発の反復サイクルを完了するために必要な残りの労力の見積もり。作業は、製品開発の反復中にストーリー ポイント、ストーリー、機能、機能、ファンクション ポイント、ユーザー ストーリー、ユース ケース、または要件を提供するために行われたすべての作業として測定されます。
"an individual, group, or organization who may affect, be affected by, or perceive itself to be affected by a decision, activity, or outcome of a project",プロジェクトの決定、活動、結果に影響を与える可能性がある、影響を受ける、または影響を受けると認識している個人、グループ、または組織
an information gathering technique used as a way to reach a consensus of experts on a subject. Experts on the subject participate in this technique anonymously. A facilitator uses a questionnaire to solicit ideas about the important project points related to the subject. The responses are summarized and are then recirculated to the experts for further comment. Consensus may be reached in a few rounds of this process. The Delphi technique helps reduce bias in the data and keeps any one person from having undue influence on the outcome.,ある主題について専門家の合意に達する方法として使用される情報収集手法。このテーマの専門家が匿名でこの手法に参加しています。ファシリテーターはアンケートを使用して、主題に関連するプロジェクトの重要なポイントについてアイデアを募ります。回答は要約され、さらなるコメントを得るために専門家に再回覧されます。このプロセスの数ラウンドで合意に達する可能性があります。 Delphi テクニックは、データの偏りを軽減し、誰かが結果に不当な影響を与えることを防ぎます。
"An information item can be produced in several versions during a system, software, or service life cycle.",情報項目は、システム、ソフトウェア、またはサービスのライフ サイクル中に複数のバージョンで作成されることがあります。
"an information system consisting of the tools and techniques used to gather, integrate, and disseminate the outputs of project management processes. It is used to support all aspects of the project from initiating through closing, and can include both manual and automated systems",プロジェクト管理プロセスの成果を収集、統合、配布するために使用されるツールと技術で構成される情報システム。プロジェクトの開始から終了までのあらゆる側面をサポートするために使用され、手動システムと自動システムの両方を含めることができます。
"An instance of the meta-entity called Attribute, having a name, full description and brief description, is significant without the knowledge of the DataObject it describes.",Attribute と呼ばれるメタエンティティのインスタンスは、名前、完全な説明、簡単な説明を持ち、それが記述する DataObject について知らなくても意味があります。
"An instance possesses knowledge, exhibits behavior, and obeys rules. These are collectively referred to as the instance's responsibilities. A class abstracts the responsibilities in common to its instances. A responsibility can apply to each instance of the class (instance-level) or to the class as a whole (class-level",インスタンスは知識を持ち、行動を示し、ルールに従います。これらは総称してインスタンスの責任と呼ばれます。クラスは、そのインスタンスに共通の責任を抽象化します。責任は、クラスの各インスタンス (インスタンス レベル) またはクラス全体 (クラス レベル) に適用できます。
an instruction specifying the desired format of source code listings,ソースコードリストの希望の形式を指定する命令
an instruction to add the contents of A to the contents of B,Aの内容をBの内容に追加する命令
"an instruction to add the contents of A to the contents of B, then execute the instruction at location C",A の内容を B の内容に加算し、その命令を位置 C で実行する命令
"an instruction to add the contents of locations A and B, and place the results in location C",場所 A と B の内容を追加し、その結果を場所 C に配置する命令
"an instruction to add the contents of locations A and B, place the results in location C, then execute the instruction at location D",位置 A と B の内容を加算し、結果を位置 C に配置し、位置 D で命令を実行する命令
"an instruction to add the contents of locations A, B, and C, and place the result in location D",場所 A、B、C の内容を加算し、その結果を場所 D に配置する命令
"an instruction to add the contents of locations A, B, and C, place the results in location D, then execute the instruction at location E",位置 A、B、および C の内容を追加し、結果を位置 D に配置し、位置 E で命令を実行する命令
an instruction to load the contents of location A,場所 A の内容をロードする命令
"an instruction to load the contents of location A, then execute the instruction at location B",位置 A の内容をロードし、位置 B で命令を実行する命令
an intentional activity that ensures the future performance of the project work is aligned with the project management plan,プロジェクト作業の将来のパフォーマンスがプロジェクト管理計画と一致していることを保証する意図的な活動
an intentional activity that realigns the performance of the project work with the project management plan,プロジェクト作業のパフォーマンスをプロジェクト管理計画に合わせて再調整する意図的な活動
an intentional activity to modify a non-conforming product or product component,不適合製品または製品コンポーネントを変更する意図的な活動
"an internal arrow that is the output of a box whose box number is greater than the box number of the box that uses that arrow as input, control, or mechanism",ボックス番号が、その矢印を入力、制御、またはメカニズムとして使用するボックスのボックス番号よりも大きいボックスの出力である内部矢印
an internal logical file (ILF) or an external interface file (EIF) maintained or read by a transaction,トランザクションによって維持または読み取られる内部論理ファイル (ILF) または外部インターフェース ファイル (EIF)
"an iterative planning technique in which the work to be accomplished in the near term is planned in detail, while the work in the future is planned at a higher level",短期的に達成すべき作業を詳細に計画し、将来の作業をより高いレベルで計画する反復計画手法
An MCDM with one alternative is the same as the development of a composite measure.,1 つの選択肢を備えた MCDM は、複合メジャーの開発と同じです。
An MOP typically characterizes physical or functional attributes relating to the system operation.,MOP は通常、システム動作に関連する物理的または機能的属性を特徴付けます。
"an n-dimensional ordered set of data items identified by a single name and one or more indices, so that each element of the set is individually addressable",セットの各要素を個別にアドレス指定できるように、単一の名前と 1 つ以上のインデックスによって識別されるデータ項目の n 次元の順序付きセット。
"An object of interest can be any physical thing, as well as any conceptual object or part of a conceptual object in the world of the functional user.",対象オブジェクトは、機能的ユーザーの世界における任意の概念的オブジェクトまたは概念的オブジェクトの一部だけでなく、任意の物理的なものにすることができます。
An object program is made up of object code.,オブジェクトプログラムはオブジェクトコードで構成されます。
An object represents something in the observable world that is distinguished from other instances of its object type and can be uniquely identified.,オブジェクトは、そのオブジェクト タイプの他のインスタンスとは区別され、一意に識別できる、観察可能な世界の何かを表します。
An object set is a subset of the union of the members of an object type set; the set of object sets includes the empty set and the set of the union of the members of the object type set itself. An object set is modeled by an arrow segment.,オブジェクト セットは、オブジェクト タイプ セットのメンバーの結合のサブセットです。オブジェクト セットのセットには、空のセットと、オブジェクト タイプ セット自体のメンバーの結合セットが含まれます。オブジェクト セットは矢印セグメントによってモデル化されます。
An object type set can include object types that are themselves grouped as object type sets. An object type set is designated by an arrow label.,オブジェクト タイプ セットには、それ自体がオブジェクト タイプ セットとしてグループ化されているオブジェクト タイプを含めることができます。オブジェクト タイプ セットは矢印ラベルで指定されます。
"an object with operations that concurrent objects (that is, tasks) invoke directly or indirectly",同時オブジェクト (つまり、タスク) が直接または間接的に呼び出す操作を含むオブジェクト
"an official recommendation or advice that indicates policies, standards, or procedures for how something should be accomplished",何かを達成する方法についてのポリシー、基準、または手順を示す公式の推奨事項またはアドバイス
an operating system,オペレーティングシステム
An operation can consist of other operations.,操作は他の操作で構成することができます。
"An operation interface signature comprises a set of announcements and interrogation signatures as appropriate, one for each operation type in the interface, together with an indication of causality (client or server, but not both) for the interface as a whole, with respect to the object which instantiates the template.",操作インターフェース署名は、テンプレートをインスタンス化するオブジェクトに関するインターフェース全体の因果関係 (クライアントまたはサーバー、ただし両方ではない) の表示とともに、インターフェース内の操作タイプごとに 1 つずつ、適切なアナウンスおよび問い合わせ署名のセットで構成されます。
"An optional requirement is either: a) one of two or more alternative requirements, or b) an additional requirement that is fulfilled only if applicable and otherwise is disregarded.]",オプションの要件は、a) 2 つ以上の代替要件の 1 つ、または b) 該当する場合にのみ満たされ、それ以外の場合は無視される追加の要件のいずれかです。
"an organizational placement strategy where the project team members are physically located close to one another in order to improve communication, working relationships, and productivity",コミュニケーション、仕事上の関係、生産性を向上させるために、プロジェクト チームのメンバーが物理的に互いに近くに配置される組織配置戦略
"an organizational structure that standardizes the project-related governance processes and facilitates the sharing of resources, methodologies, tools and techniques",プロジェクト関連のガバナンスプロセスを標準化し、リソース、方法論、ツール、テクニックの共有を促進する組織構造
"An organizational unit is typically part of a larger organization, although in a small organization the organizational unit can be the whole organization.",組織単位は通常、より大きな組織の一部ですが、小規模な組織では、組織単位が組織全体である場合もあります。
"An outcome is an artifact, a significant change of state or the meeting of specified constraints. An outcome statement describes one of the following: production of an artifact; a significant change in state; meeting of specified constraints, e.g., requirements, goals.",結果とは、アーティファクト、状態の重大な変化、または指定された制約を満たすことです。結果ステートメントでは、次のいずれかを説明します。 成果物の生成。状態の重大な変化。要件や目標など、指定された制約を満たすこと。
"an output from performing project management processes and activities. Results include outcomes (e.g., integrated systems, revised process, restructured organization, tests, trained personnel, etc.) and documents (e.g., policies, plans, studies, procedures, specifications, reports, etc.)",プロジェクト管理プロセスとアクティビティの実行からの出力。結果には、結果 (例: 統合システム、改訂されたプロセス、再構築された組織、テスト、訓練を受けた要員など) および文書 (例: ポリシー、計画、調査、手順、仕様、報告書など) が含まれます。
"an output of a schedule model that presents linked activities with planned dates, durations, milestones, and resources",リンクされたアクティビティと計画された日付、期間、マイルストーン、およびリソースを示すスケジュール モデルの出力
an output of data in a layout specified by the user,ユーザーが指定したレイアウトでのデータの出力
"An underlying full license for version 1 of a software product, plus an underlying upgrade license to version 2 of the software product, combine to produce one effective full license for version 2 of the software product.",ソフトウェア製品のバージョン 1 の基本フル ライセンスと、ソフトウェア製品のバージョン 2 への基本アップグレード ライセンスを組み合わせると、ソフトウェア製品のバージョン 2 に対して 1 つの有効なフル ライセンスが生成されます。
"An underlying license can have conditions associated with it, requiring it to be used in combination with another license or licenses to create an effective full license. It can also have capacity or permission to use future versions of the software, or specify ways or limitations to how it can be upgraded or replaced by a new version, or how the license can be upgraded by combining with another license that is linked directly to another purchase record.",基礎となるライセンスには条件が関連付けられている場合があり、有効な完全ライセンスを作成するには、そのライセンスを別のライセンスと組み合わせて使用​​する必要があります。また、ソフトウェアの将来のバージョンを使用するための容量や許可を設定したり、ソフトウェアをアップグレードまたは新しいバージョンに置き換える方法や制限を指定したり、別の購入記録に直接リンクされている別のライセンスと組み合わせてライセンスをアップグレードする方法を指定したりすることもできます。
"analysis of a computer program to identify all possible paths through the program, to detect incomplete paths, or to discover portions of the program that are not on any path",コンピューター プログラムを分析して、プログラム内で考えられるすべてのパスを特定する、不完全なパスを検出する、またはどのパスにもないプログラムの部分を検出する
analysis of a defect to determine its cause,欠陥を分析して原因を特定する
analysis of alternatives,代替案の分析
"analysis of strengths, weaknesses, opportunities and threats of an organization, project, or option",組織、プロジェクト、またはオプションの強み、弱み、機会、脅威の分析
analysis of systems within a domain to discover commonalities and differences among them,ドメイン内のシステムを分析して、システム間の共通点と相違点を発見する
"analysis of two or more objective functions to find where, if at all, they have the same value",2 つ以上の目的関数を分析して、それらが同じ値を持つ場合、どこにあるかを見つけること
"analysis that seeks to maximize the effectiveness that can be attained from a fixed, maximum investment",一定の最大投資から得られる効果を最大化することを目指す分析
"analysis that seeks to minimize the investment needed to attain a fixed, minimum degree of effectiveness",一定の最小限の有効性を達成するために必要な投資を最小限に抑えようとする分析
analytic hierarchy process,分析階層プロセス
analytical approach used to determine how well a system performs in its intended utilization environment,意図された使用環境でシステムがどの程度うまく機能するかを判断するために使用される分析アプローチ
"analytical evaluation of design options/alternatives against performance, design-to-cost objectives, and life cycl quality factors",性能、設計対コスト目標、およびライフサイクル品質要素に対する設計オプション/代替案の分析的評価
ancestral box related to its child diagram by exactly one parent/child relationship,祖先ボックスは、厳密に 1 つの親子関係によってその子ダイアグラムに関連付けられます。
"ancillary part of a program, or sometimes a separate program, that allows the user to view parts of the online documentation or help text on request",ユーザーが要求に応じてオンライン ドキュメントやヘルプ テキストの一部を表示できるようにする、プログラムの補助的な部分、または場合によっては別個のプログラム
"anomalous or unexpected event, set of events, condition, or situation at any time during the life cycle of a project, product, service, or system",プロジェクト、製品、サービス、またはシステムのライフサイクル中の任意の時点における、異常または予期しないイベント、一連のイベント、状態、または状況
any activity on the critical path in a project schedule,プロジェクト スケジュールのクリティカル パス上のアクティビティ
any artifact produced by a process,プロセスによって生成されるあらゆる成果物
any change to the project scope. A scope change almost always requires an adjustment to the project cost or schedule,プロジェクト範囲の変更。スコープの変更には、ほとんどの場合、プロジェクトのコストまたはスケジュールの調整が必要です
any continuous series of schedule activities connected with logical relationships in a project schedule network diagram,プロジェクト スケジュール ネットワーク図の論理関係に関連付けられた一連のスケジュール アクティビティ。
"any document or communication that defines the initial intentions of a project. This can take the form of a contract, memorandum of understanding (MOU), letters of agreement, verbal agreements, email, etc.",プロジェクトの当初の意図を定義する文書またはコミュニケーション。これは、契約、覚書（MOU）、合意書、口頭合意、電子メールなどの形式をとることがあります。
any historical sequence of behaviors through which a unit is manipulated by external stimuli,ユニットが外部刺激によって操作される歴史的な一連の行動
"any item, whether internal or external to the project that is required by a process before that process proceeds. May be an output from a predecessor process",プロジェクトの内部または外部に関係なく、プロセスが続行する前にプロセスで必要とされる任意の項目。先行プロセスからの出力である可能性があります
any of the alternative sets of program statements in (1),(1) のプログラム ステートメントの代替セットのいずれか
any of the individual items in (1),(1)の各項目のいずれか
"any of the requirements specifically requested by the user to complete an elementary process, such as validations, algorithms, or calculations, and reading or maintaining a file",検証、アルゴリズム、計算、ファイルの読み取りや維持などの基本的なプロセスを完了するためにユーザーが特に要求した要件のいずれか
"any organizational structure in which the project manager has full authority to assign priorities, apply resources, and direct the work of persons assigned to the project",プロジェクト マネージャーが優先順位を割り当て、リソースを適用し、プロジェクトに割り当てられた人の作業を指示する完全な権限を持つ組織構造
any organizational structure in which the project manager shares responsibility with the functional managers for assigning priorities and for directing the work of persons assigned to the project,プロジェクトマネージャーが、優先順位を割り当て、プロジェクトに割り当てられた人の作業を指示する責任を機能マネージャーと共有する組織構造。
any person or thing that communicates or interacts with the software at any time,いつでもソフトウェアと通信または対話する人または物
any person that communicates or interacts with the software at any time,いつでもソフトウェアと通信または対話する人
any physical or virtual component of limited availability within a computer system available for a given purpose and managed by the runtime platform,特定の目的で利用可能であり、ランタイム プラットフォームによって管理される、コンピューター システム内で可用性が制限されている物理コンポーネントまたは仮想コンポーネント。
"any processing of the data other than a movement of the data into or out of a functional process, or between a functional process and persistent storage",機能プロセスへの、または機能プロセスからのデータの移動、または機能プロセスと永続ストレージ間のデータの移動以外のデータの処理
any program that reads programs or data into main memory,プログラムまたはデータをメインメモリに読み取るプログラム
"any project schedule network diagram drawn in such a way that the positioning and length of the schedule activity represents its duration. Essentially, it is a bar chart that includes schedule network logic",スケジュール アクティビティの位置と長さがその期間を表すように描かれたプロジェクト スケジュール ネットワーク図。基本的に、スケジュール ネットワーク ロジックを含む棒グラフです。
"any property that, if lost, is considered a negative effect",紛失した場合に悪影響を及ぼすと考えられる財産
"Any request sent to an instance receives an acceptable response, regardless of whether the receiver is an instance of the subclass or the superclass.",インスタンスに送信されたリクエストは、受信者がサブクラスのインスタンスであるかスーパークラスのインスタンスであるかに関係なく、受け入れ可能な応答を受け取ります。
any system element or aggregation of system elements that satisfies an end use function and is designated by the acquirer for separate configuration control,最終用途の機能を満たし、個別の構成制御のために取得者によって指定されるシステム要素またはシステム要素の集合体
any thing that is identified from the point of view of the functional user requirements about which the software is required to process or store data.,ソフトウェアがデータを処理または保存するために必要とするユーザーの機能要件の観点から特定されるもの。
"any unique and verifiable product, result, or capability to perform a service that must be produced to complete a process, phase, or project",プロセス、フェーズ、またはプロジェクトを完了するために作成する必要がある、ユニークで検証可能な製品、結果、またはサービスを実行する機能
"anything affecting a subject system or affected by a subject system through interactions with it, or anything sharing an interpretation of interactions with a subject system",主体システムに影響を与えるもの、あるいは主体システムとの相互作用を通じて影響を受けるもの、あるいは主体システムとの相互作用の解釈を共有するもの
"anything observed in the documentation or operation of a system that deviates from expectations based on previously verified system, software, or hardware products or reference documents",以前に検証されたシステム、ソフトウェア、またはハードウェア製品または参考資料に基づいた期待から逸脱する、システムのドキュメントまたは操作で観察されたものすべて
anything that has value to a person or organization,個人または組織にとって価値のあるものすべて
"application allowing a person to retrieve and read hypertext, to view the contents of hypertext nodes (Web pages), to navigate from one Web page to another, and to interact with the content, such as changing the visual appearance of the displayed content",ハイパーテキストの取得と読み取り、ハイパーテキスト ノード (Web ページ) のコンテンツの表示、ある Web ページから別の Web ページへの移動、および表示されたコンテンツの外観の変更などのコンテンツとの対話を可能にするアプリケーション
"Application asset encompasses requirements, an architectural design, components, and tests.",アプリケーション資産には、要件、アーキテクチャ設計、コンポーネント、テストが含まれます。
Application Entity (Invocation),アプリケーションエンティティ（呼び出し）
"application function point count taken of the functionality at a point in time, from which changes can be measured",アプリケーション関数 ある時点での機能のポイント数。そこから変化を測定できます。
Application Layer Structure,アプリケーション層の構造
"Application management includes all of the tasks, responsibilities, and activities that serve to bring applications into a state where they meet the requirements and needs of their owners throughout the entire life cycle of the business processes that are supported by the applications.",アプリケーション管理には、アプリケーションによってサポートされるビジネス プロセスのライフ サイクル全体を通じて、アプリケーションを所有者の要件とニーズを満たす状態にするためのすべてのタスク、責任、アクティビティが含まれます。
"application of a systematic, disciplined, and quantifiable approach to design, implement, and maintain a tangible product by transforming a set of requirements that represent the collection of stakeholder needs, expectations, and constraints; using documented techniques and technology",利害関係者のニーズ、期待、制約の集まりを表す一連の要件を変換することにより、具体的な製品を設計、実装、維持するための体系的で規律ある定量化可能なアプローチの適用。文書化された手法とテクノロジーを使用する
"application of a systematic, disciplined, quantifiable approach to structures, machines, products, systems, or processes",構造、機械、製品、システム、またはプロセスに対する体系的で規律ある定量化可能なアプローチの適用
"application of a systematic, disciplined, quantifiable approach to the development, operation, and maintenance of software; that is, the application of engineering to software [ISO/IEC TR 19759:2016, Software Engineering — Guide to the Software Engineering Body of Knowledge (SWEBOK)",ソフトウェアの開発、運用、保守に対する体系的で規律ある定量化可能なアプローチの適用。つまり、ソフトウェアへのエンジニアリングの適用 [ISO/IEC TR 19759:2016、ソフトウェア エンジニアリング — ソフトウェア エンジニアリング知識体系ガイド (SWEBOK)]
application of configuration management to the control of documents,構成管理のドキュメント管理への応用
"application of technical and administrative resources to plan, organize, and control engineering functions",エンジニアリング機能を計画、組織、制御するための技術的および管理的リソースの適用
Application Process (Invocation),申請プロセス（呼び出し）
Application profile,アプリケーションプロファイル
Application Program Interface,アプリケーションプログラムインターフェース
Application Service Object,アプリケーションサービスオブジェクト
"Application software is the software that the application management organization produces, services, and maintains. There is also system software: the software to produce and maintain the application software and to run the application software on its platform. The application management organization is one of the users of the system software.",アプリケーション ソフトウェアは、アプリケーション管理組織が作成、サービス、および保守するソフトウェアです。システム ソフトウェアもあります。これは、アプリケーション ソフトウェアを作成および保守し、そのプラットフォーム上でアプリケーション ソフトウェアを実行するためのソフトウェアです。アプリケーション管理組織もシステムソフトウェアの利用者の一つです。
application specific integrated circuit,特定用途向け集積回路
application-independent software that supports the running of application software,アプリケーション ソフトウェアの実行をサポートする、アプリケーションに依存しないソフトウェア
"application-specific artifacts produced during application requirements engineering, such as application requirements specifications and application requirements models",アプリケーション要件エンジニアリング中に生成されるアプリケーション固有の成果物 (アプリケーション要件仕様やアプリケーション要件モデルなど)
"applications specifically designed to aid the project management team with planning, monitoring, and controlling the project, including cost estimating, scheduling, collaboration, and risk analysis",コスト見積り、スケジュール設定、コラボレーション、リスク分析など、プロジェクトの計画、監視、制御を行うプロジェクト管理チームを支援するために特別に設計されたアプリケーション
Apportioned effort is one of three earned value management (EVM) types of activities used to measure work performance.,配分された労力は、作業パフォーマンスの測定に使用される 3 つの稼動価値管理 (EVM) タイプのアクティビティのうちの 1 つです。
Appraisal findings are inferences drawn from corroborated objective evidence.,鑑定結果は、裏付けられた客観的証拠から導き出された推論です。
approach to distributing products and services from the original supplier to the end-user organization,元のサプライヤーからエンドユーザー組織まで製品とサービスを配布するアプローチ
approach to managing a system or software project so as to hold the project to a predetermined cost,プロジェクトを所定のコストに抑えるためにシステムまたはソフトウェアのプロジェクトを管理するアプローチ
"approach to system design and development that aims to make interactive systems more usable by focusing on the use of the system; applying human factors, ergonomics and usability knowledge and techniques",システムの使用に焦点を当て、対話型システムをより使いやすくすることを目的としたシステム設計および開発のアプローチ。ヒューマンファクター、人間工学、ユーザビリティの知識と技術を適用する
approaches to presenting information with logical linkages that aid in understanding,理解を助ける論理的なつながりを持って情報を提示するアプローチ
"Appropriateness recognizability will depend on the ability to recognize the appropriateness of the product or system's functions from initial impressions of the product or system or any associated documentation. The information provided by the product or system can include demonstrations, tutorials, documentation or, for a web site, the information on the home page.",適切性の認識可能性は、製品やシステム、あるいは関連ドキュメントの第一印象から、製品やシステムの機能の適切性を認識できるかどうかに依存します。製品またはシステムによって提供される情報には、デモンストレーション、チュートリアル、ドキュメント、または Web サイトの場合はホームページ上の情報が含まれる場合があります。
approved International Standard or Telecommunication Standardization Sector of the International Telecommunications Union (ITU-T) Recommendation,承認された国際規格または国際電気通信連合の電気通信標準化部門 (ITU-T) 勧告
"approved requirements for a product, subsystem or component, describing the functional, performance, interoperability, and interface requirements that are allocated from higher-level requirements and the verifications required to demonstrate achievement of those requirements, as established at a specific point in time and documented in the allocated configuration documentation",製品、サブシステム、またはコンポーネントの承認された要件。上位レベルの要件から割り当てられる機能、パフォーマンス、相互運用性、およびインターフェイスの要件と、特定の時点で確立され、割り当てられた構成文書に文書化される、それらの要件の達成を実証するために必要な検証について説明します。
"approved version of a configuration item, regardless of media, formally designated and fixed at a specific time during the configuration item's life cycle",構成アイテムの承認済みバージョン。メディアに関係なく、構成アイテムのライフサイクル中の特定の時点で正式に指定および修正されます。
"approximation of the value of a function at a given point, based on values on a straight line between two known points",2 つの既知の点の間の直線上の値に基づく、特定の点における関数の値の近似値
arc directed from a place to the transition,ある場所からトランジションに向かう弧
arc directed from the transition to a place,トランジションからある場所へ向かう弧
"arc, node, reference node, or page of a net graph",ネット グラフのアーク、ノード、参照ノード、またはページ
"archetypical user of a system, based on research into real users of a system",システムの実際のユーザーに関する調査に基づく、システムの典型的なユーザー
Architecting takes place in the context of an organization or a project.,アーキテクトは、組織またはプロジェクトのコンテキストで行われます。
architecture including the architectural structure and rules (e.g. common rules and constraints) that constrains a specific member product within a product line,製品ライン内の特定のメンバー製品を制約するアーキテクチャ構造とルール (共通のルールや制約など) を含むアーキテクチャ
architecture-driven modernization,アーキテクチャ主導のモダナイゼーション
"area around textual or graphical elements, not including margins, which breaks up text, separates topic and subtopic groupings, indicates hierarchical and topical relationships, highlights information, or makes text easier to read",テキスト要素またはグラフィック要素の周囲の領域（余白は含まない）。テキストを分割し、トピックとサブトピックのグループを分離し、階層およびトピックの関係を示し、情報を強調表示し、テキストを読みやすくします。
area of interest or expertise,興味のある分野または専門分野
area of interest with respect to a software design,ソフトウェア設計に関する関心のある分野
area of knowledge or activity characterized by a set of concepts and terminology understood by practitioners in that area,その分野の専門家によって理解される一連の概念と用語によって特徴付けられる知識または活動の領域
area on a screen or in a window in which a user enters data,ユーザーがデータを入力する画面またはウィンドウ上の領域
area with visible boundaries that presents a view of a software object or through which a user conducts a dialog with a computer system,ソフトウェア オブジェクトのビューを表示する、またはユーザーがコンピュータ システムとの対話を行う目に見える境界のある領域
argument that has not been specified as an input argument,入力引数として指定されていない引数
"arithmetic or logic operations upon data, merging or sorting of data, assembling or compiling of programs, or operations on text, such as editing, sorting, merging, storing, retrieving, displaying, or printing",データに対する算術演算または論理演算、データの結合または並べ替え、プログラムのアセンブルまたはコンパイル、または編集、並べ替え、結合、保存、取得、表示、印刷などのテキストに対する操作
arithmetic or logical operation performed in an algorithmic and manipulation BFC,アルゴリズムおよび操作 BFC で実行される算術または論理演算
"arithmetic, logical, or syntactic operation performed on an address",アドレスに対して実行される算術演算、論理演算、または構文演算
"arrangement of a computer system or component as defined by the number, nature, and interconnections of its constituent parts",構成部品の数、性質、および相互接続によって定義される、コンピュータ システムまたはコンポーネントの配置
"arrangement of a system or network as defined by the nature, number, and chief characteristics of its functional units",機能単位の性質、数、および主な特徴によって定義されるシステムまたはネットワークの配置
arrangement of data for storage or display,保存または表示するためのデータの配置
"arrangement of functions and their subfunctions and interfaces (internal and external) that defines the execution sequencing, conditions for control or data flow, and the performance requirements to satisfy the requirements baseline",関数とそのサブ関数、および実行順序、制御またはデータ フローの条件、および要件ベースラインを満たすためのパフォーマンス要件を定義するインターフェイス (内部および外部) の配置。
arrangement of nodes and interconnecting branches,ノードと相互接続するブランチの配置
"arrangement of source code, including layout of code within a single file and packaging of source code into modules, classes, physical files, and so on",ソース コードの配置 (単一ファイル内のコードのレイアウト、およびソース コードのモジュール、クラス、物理ファイルなどへのパッケージ化を含む)
"arrival rates, formats, value ranges, or relationships between field values",到着率、形式、値の範囲、またはフィールド値間の関係
arrow connected at both ends (source and use) to a box in a diagram,図の両端 (ソースと使用) がボックスに接続された矢印
"arrow label attached without a squiggle directly to the arrowhead of an output boundary arrow or to the arrowtail of an input, control, or mechanism boundary arrow",波線なしで出力境界矢印の矢尻、または入力、コントロール、またはメカニズム境界矢印の矢尻に直接取り付けられた矢印ラベル
arrow left undrawn between its attachment to an ancestral box and its appearance as a boundary arrow on some hierarchically consecutive descendent diagram,祖先ボックスへの接続と、階層的に連続する子孫図上の境界矢印としての出現との間で描画されないままになっている矢印
arrow or arrow segment that expresses IDEF0 control,IDEF0 制御を表す矢印または矢印セグメント
arrow or arrow segment that expresses IDEF0 input,IDEF0 入力を表す矢印または矢印セグメント
arrow or arrow segment that expresses IDEF0 mechanism,IDEF0 メカニズムを表す矢印または矢印セグメント
arrow or arrow segment that expresses IDEF0 output,IDEF0 出力を表す矢印または矢印セグメント
arrow segment of a junction from which other arrow segments branch or to which other arrow segments join,他の矢印セグメントが分岐する、または他の矢印セグメントが結合する接合部の矢印セグメント
"arrow segment that collects multiple meanings into a single construct or abstraction, i.e., an arrow segment that represents an object type set that includes more than one object type",複数の意味を単一の構造または抽象化に収集する矢印セグメント、つまり、複数のオブジェクト タイプを含むオブジェクト タイプ セットを表す矢印セグメント
arrow that enables the sharing of detail between IDEF0 models (linking them together) or within an IDEF0 model,IDEF0 モデル間 (リンク) または IDEF0 モデル内で詳細の共有を可能にする矢印
arrow with one end (source or use) not connected to any box in a diagram,一方の端 (ソースまたは使用) が図内のどのボックスにも接続されていない矢印
artifact associated with the execution of a process,プロセスの実行に関連付けられたアーティファクト
artifact resulting from the execution of a process,プロセスの実行によって生じる成果物
"artifact that includes major assets (functional areas and high-level common and variable features of all applications) that can be included in a product line with their quantified costs and benefits, and estimate results",製品ラインに含めることができる主要な資産 (すべてのアプリケーションの機能領域と高レベルの共通および可変機能) と、定量化されたコストとメリット、および推定結果を含むアーティファクト
"Artifacts are, for example, the software engineering environment. Benchmarking repository is a repository which is designated for use as the source of comparative measures for the purpose of benchmarking.",成果物とは、たとえば、ソフトウェア エンジニアリング環境です。ベンチマーク リポジトリは、ベンチマークを目的とした比較尺度のソースとして使用するために指定されたリポジトリです。
"artifacts produced during the test process required to plan, design, and execute tests",テストの計画、設計、実行に必要なテストプロセス中に生成されるアーティファクト
"artifacts that relate to describing, implementing, and improving processes, such as policies, measurements, process descriptions, and process implementation support tools",ポリシー、測定、プロセスの説明、プロセス実装サポート ツールなど、プロセスの記述、実装、改善に関連するアーティファクト
artificial language for expressing programs,プログラムを表現するための人工言語
artificial language used to represent a software requirement,ソフトウェア要件を表すために使用される人工言語
As persistent storage is on the software side of the boundary; it is not considered to be a functional user of the software being measured.,永続ストレージは境界のソフトウェア側にあるため、測定対象のソフトウェアの機能ユーザーとはみなされません。
aspect of an instance's specification that is determined by the state-changing operations it can perform,インスタンスの仕様の側面。インスタンスが実行できる状態変更操作によって決定されます。
"aspect of an instance's specification that is determined by the values of its attributes, participant properties, and constant, read-only operations",インスタンスの仕様の側面。その属性、参加者プロパティ、および定数の読み取り専用操作の値によって決定されます。
assembler that executes on one computer but generates machine code for a different computer,1 つのコンピュータ上で実行されますが、別のコンピュータ用のマシンコードを生成するアセンブラ
"assembler that includes, or performs the functions of, a macrogenerator",マクロジェネレーターを含む、またはマクロジェネレーターの機能を実行するアセンブラー
assembler that produces absolute code,絶対コードを生成するアセンブラ
assembler that produces relocatable code,再配置可能なコードを生成するアセンブラ
"assembly language, high-order language",アセンブリ言語、高級言語
assertion that is always true for a specified segment or at a specified point of a computer program,コンピュータ プログラムの指定されたセグメントまたは指定された時点で常に真となるアサーション
assessment indicator that supports the judgment of the process performance of a specific process,特定のプロセスのプロセスパフォーマンスの判断をサポートする評価指標
assessment indicator that supports the judgment of the process quality characteristic of a specific process,特定のプロセスのプロセス品質特性の判断をサポートする評価指標
assessment of systems or software product against targeted values of identified and applicable quality characteristics performed using applicable techniques or methods,適用可能な技術または方法を使用して実行される、特定され適用可能な品質特性の目標値に対するシステムまたはソフトウェア製品の評価
"assessor who has demonstrated the competencies to conduct an assessment and to monitor and verify the conformance of a process assessment [ISO/IEC 29110-2-1:2015 — Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 2-1: Framework and taxonomy, 4.19],",評価を実施し、プロセス評価の適合性を監視および検証する能力を実証した評価者 [ISO/IEC 29110-2-1:2015 — ソフトウェア エンジニアリング — 非常に小規模な事業体 (VSE) のライフサイクル プロファイル — パート 2-1: フレームワークと分類法、4.19]、
"asset proposals, domain requirements specifications, domain requirements models",資産提案、ドメイン要件仕様、ドメイン要件モデル
asset that is utilized or consumed during the execution of a process,プロセスの実行中に利用または消費される資産
asset with parameters or slots that can be used to construct an instantiated asset,インスタンス化されたアセットの構築に使用できるパラメータまたはスロットを含むアセット
assigned correspondence between two things that is represented as a set of ordered pairs,順序付けされたペアのセットとして表現される 2 つのものの間に割り当てられた対応関係
assignment of computer resources to current and waiting jobs,現在のジョブと待機中のジョブへのコンピュータ リソースの割り当て
assignment of different values to increase the importance of selected decision attributes,選択した決定属性の重要性を高めるために異なる値を割り当てる
"assignment of either unique version names or unique version numbers to unique states of software configuration items, usually for a specific purpose, such as a release of the software product to an external group or the identification of a specific baseline",通常、外部グループへのソフトウェア製品のリリースや特定のベースラインの識別など、特定の目的のために、ソフトウェア構成アイテムの一意の状態に一意のバージョン名または一意のバージョン番号を割り当てること
assignment of numbers to objects in a systematic way to represent properties of the object.,オブジェクトのプロパティを表すために体系的な方法でオブジェクトに番号を割り当てること。
assignment of responsibility for specific quality-related requirements or decompositions thereof to a particular process instance,特定の品質関連要件またはその分解に対する責任を特定のプロセスインスタンスに割り当てること
"assignment of values and labels to aspects of software engineering work products, processes, and resources plus the models that are derived from them, whether these models are developed using statistical or other techniques",ソフトウェア エンジニアリングの作業成果物、プロセス、リソースの側面と、それらから派生したモデル (これらのモデルが統計的手法やその他の手法を使用して開発されたかどうかに関係なく) への値とラベルの割り当て
assignment or budgeting of top-level functional or nonfunctional requirements among the lower-level partitione functions for accomplishment,達成のための下位レベルのパーティション機能間でのトップレベルの機能要件または非機能要件の割り当てまたは予算編成
assistant leader of a chief programmer team,チーフプログラマーチームのアシスタントリーダー
association among two or more logical entities that is discernible in either direction (to and from an entity),どちらの方向（エンティティへの、またはエンティティからの）でも識別可能な、2 つ以上の論理エンティティ間の関連付け。
"association between a computing system tool and something in the environment that affects both endpoints, though not necessarily in the same way",コンピューティング システム ツールと、必ずしも同じ方法ではないものの、両方のエンドポイントに影響を与える環境内の何かとの関連性
association between two (not necessarily distinct) classes that is deemed relevant within a particular scope and purpose,特定の範囲および目的内で関連すると考えられる 2 つの (必ずしも別個ではない) クラス間の関連性
association between two or more domains of entities,エンティティの 2 つ以上のドメイン間の関連付け
association between two or more entities,2 つ以上のエンティティ間の関連付け
association of specific instances of the related classes,関連するクラスの特定のインスタンスの関連付け
asynchronous communication interface adapter,非同期通信インターフェースアダプター
"at a given instant in time, the condition of an object that determines the set of all sequences of actions (or traces) in which the object can participate",特定の瞬間における、オブ​​ジェクトが参加できる一連のアクション (またはトレース) のすべてのセットを決定するオブジェクトの状態。
"at the level of top management, establishment of strategy and policy for the use of IT, and organizational control of the use of IT",経営トップレベルでのIT活用の戦略・方針の策定とIT活用の組織的管理
"At the organizational level, the process owner is the person (or team) responsible for the description of a standard process; at the project level, the process owner is the person (or team) responsible for the description of the defined process. A process can therefore have multiple owners at different levels of responsibility.",組織レベルでは、プロセス所有者は標準プロセスの記述に責任を持つ人 (またはチーム) です。プロジェクト レベルでは、プロセス所有者は、定義されたプロセスの説明に責任を持つ人 (またはチーム) です。したがって、プロセスには、さまざまなレベルの責任を持つ複数の所有者が存在する可能性があります。
atomic shared action resulting in one-way communication from an initiating object to a responding objec,開始オブジェクトから応答オブジェクトへの一方向通信をもたらすアトミックな共有アクション
atomic-level software component of the software architecture that can be subjected to standalone testing,スタンドアロンテストの対象となるソフトウェアアーキテクチャのアトミックレベルのソフトウェアコンポーネント
Atomicity Consistency Isolation Durability,原子性の一貫性 分離の耐久性
"attribute in the generic entity (or a generic ancestor entity) of a category cluster whose values indicate which category entity in the category cluster contains a specific instance of the generic entity [IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.51] Syn",カテゴリ クラスタの汎用エンティティ (または汎用祖先エンティティ) 内の属性。その値は、カテゴリ クラスタ内のどのカテゴリ エンティティに汎用エンティティの特定のインスタンスが含まれるかを示します [IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject)、3.1.51] Syn
"attribute of a test, indicating that the same results are produced each time the test is conducted",テストの属性。テストが実行されるたびに同じ結果が生成されることを示します。
attribute of an entity that has not migrated into the entity,エンティティに移行されていないエンティティの属性
attribute or combination of attributes that is derived from one or more test conditions by using a test design technique that enables the measurement of the thoroughness of the test execution,テスト実行の完全性の測定を可能にするテスト設計手法を使用して、1 つ以上のテスト条件から導出される属性、または属性の組み合わせ。
attribute that can have no value for an instance,インスタンスに対して値を持たない属性
attribute that is a characteristic of a category entity by virtue of being an attribute in its generic entity or a generic ancestor entity,汎用エンティティまたは汎用祖先エンティティの属性であるため、カテゴリ エンティティの特性である属性
attribute that is a characteristic of a class by virtue of being an attribute of a generic ancestor,ジェネリック祖先の属性であるため、クラスの特性である属性
attribute that is not the primary or a part of a composite primary key of an entity,エンティティの主キーまたは複合主キーの一部ではない属性
attribute that uniquely identifies an object in the model section of a transfer,転送のモデルセクション内のオブジェクトを一意に識別する属性
"attribute, or combination of attributes, of a child or category entity instance whose values match those in the primary key of a related parent or generic entity instance",関連する親または汎用エンティティ インスタンスの主キーの値と一致する値を持つ子エンティティ インスタンスまたはカテゴリ エンティティ インスタンスの属性、または属性の組み合わせ
"attribute, or combination of attributes, of an entity for which no two instances agree on the values",2 つのインスタンスが値に一致しないエンティティの属性、または属性の組み合わせ
Attributes of the behavior can be verified or validated by executing the software product during testing and operation.,動作の属性は、テストおよび運用中にソフトウェア製品を実行することによって検証または検証できます。
Attributes of the behavior can be verified or validated by executing the system or software product during testing and operation.,動作の属性は、テストおよび運用中にシステムまたはソフトウェア製品を実行することによって検証または検証できます。
"audit conducted to verify that a configuration item, as built, conforms to the technical documentation that defines it",構築された構成アイテムが、それを定義する技術文書に準拠していることを検証するために実施される監査
"audit conducted to verify that the development of a configuration item has been completed satisfactorily, that the item has achieved the performance and functional characteristics specified in the functional or allocated configuration identification, and that its operational and support documents are complete and satisfactory",構成アイテムの開発が満足に完了していること、そのアイテムが機能または割り当てられた構成識別で指定されたパフォーマンスと機能特性を達成していること、およびその運用およびサポート文書が完全で満足のいくものであることを検証するために行われる監査。
"audit that reconciles license-related information from multiple information sources, such as entitlement consumption against entitlement rights",エンタイトルメントの権利に対するエンタイトルメントの消費など、複数の情報ソースからのライセンス関連情報を照合する監査
automated build and regression-testing tool,自動ビルドおよび回帰テスト ツール
"automated design tool that accepts information about a program's design and produces such outputs as module hierarchy diagrams, graphical representations of control and data structure, and lists of accessed data blocks",プログラムの設計に関する情報を受け取り、モジュール階層図、制御とデータ構造のグラフィカル表現、アクセスされたデータ ブロックのリストなどの出力を生成する自動設計ツール
automation by means of computers,コンピューターによる自動化
"Availability is normally expressed as a ratio or percentage of the time that the service or service component is actually available for use by the customer to the agreed time that the service should be available. Availability is a combination of maturity (which reflects the frequency of failure), fault tolerance and recoverability (which reflect the length of downtime following each failure). This concerns the start and finish (execution) of the application, the processing at the correct times and in the correct order, the execution of incidental processing, the opening times of online processing, and the storage period of files.",可用性は通常、サービスが利用可能であるべきであると合意された時間に対する、サービスまたはサービス コンポーネントが実際に顧客によって使用可能である時間の割合またはパーセンテージとして表されます。可用性は、成熟度 (障害の頻度を反映する)、耐障害性、および回復可能性 (各障害後のダウンタイムの長さを反映する) の組み合わせです。これは、アプリケーションの開始と終了（実行）、正しい時刻と正しい順序での処理、付随処理の実行、オンライン処理の開始時刻、ファイルの保存期間などに関係します。
"availability performance and its influencing factors: reliability performance, maintainability performance and maintenance support performance",可用性パフォーマンスとその影響要因: 信頼性パフォーマンス、保守性パフォーマンス、保守サポートパフォーマンス
average effort required to locate and fix a software failure,ソフトウェアの障害を特定して修正するために必要な平均労力
avoidable additional investment between one alternative and another,ある代替案と別の代替案の間で回避可能な追加投資
"Azimuth, which is required to be between -180° to +180",方位角 -180° ～ +180 である必要があります。
background information or descriptive material,背景情報または説明資料
backout done without prior arrangement by a committer other than the one who introduced the original change,元の変更を導入したコミッター以外のコミッターによって事前の取り決めなしに行われたバックアウト
Backus-Naur for,バッカス・ナウルの
balance of competing components to achieve the best performance under the situation,状況下で最高のパフォーマンスを達成するために競合するコンポーネントのバランスを調整する
"balance sheets, class diagrams, data flow diagrams, organization charts, Petri nets, state transition models",貸借対照表、クラス図、データフロー図、組織図、ペトリネット、状態遷移モデル
ball grid array,ボールグリッドアレイ
base functional component (BFC),基本機能コンポーネント (BFC)
"base functional component [ISO/IEC 14143-1:2007 Information technology — Software measurement — Functional size measurement; Part 1: Definition of concepts, 4; ISO/IEC 19761:2011 Software engineering — COSMIC: a functional size measurement method, 2.1] BFC class",基本機能コンポーネント [ISO/IEC 14143-1:2007 情報技術 — ソフトウェア測定 — 機能サイズの測定。パート 1: 概念の定義、4; ISO/IEC 19761:2011 ソフトウェアエンジニアリング — COSMIC: 機能的サイズ測定法、2.1] BFC クラス
base functional component which moves a single data group.,単一のデータグループを移動する基本機能コンポーネント。
base practice,基礎練習
based on a circuit architecture with double stable states,二重安定状態を備えた回路アーキテクチャに基づいています
based on the IEEE 1394 standards,IEEE 1394規格に基づく
Basic Engineering Object,基本的なエンジニアリングオブジェクト
battery-powered portable computer small and light enough to be operated anywhere,どこでも操作できるほど小さくて軽い、バッテリー駆動のポータブル コンピュータ
"Because of their dual nature, clabjects exhibit a class facet and an object facet, and can work as either at any time. Instances of powertypes are usually viewed as clabjects, since they are objects (because they are instances of a type, the powertype) and also classes (subtypes of the partitioned type).",その二重の性質により、clabject はクラス ファセットとオブジェクト ファセットを示し、いつでもどちらとしても機能します。パワータイプのインスタンスは、通常、オブジェクト (タイプ、パワータイプのインスタンスであるため) であり、クラス (パーティション化されたタイプのサブタイプ) でもあるため、clabject として見なされます。
"Because the expression is evaluated each time its corresponding formal parameter is used in the called module, the value of the parameter can change during the execution of the called module.",式は、対応する仮パラメータが呼び出されるモジュールで使用されるたびに評価されるため、パラメータの値は呼び出されるモジュールの実行中に変更される可能性があります。
behavior by which a given contract is put in place between given objects,特定のオブジェクト間で特定のコントラクトを確立する動作
behavior characterizing a set of objects which becomes possible as a result of establishing behavior,動作を確立した結果として可能になる一連のオブジェクトを特徴付ける動作
behavior contrary to that required by a rule,規則で要求されていることに反する行為
behavior defined in a specification via which a policy can be changed,仕様で定義されたポリシーを変更できる動作
"Behavior in an information system can be modeled as transitions from one static schema to another, i.e., reclassification of instances from one type to another. In the information language, a state change involving a set of objects can be regarded as an interaction between those objects. Not all of the objects involved in the interaction need change state; some of the objects can be involved in a read-only manner",情報システムにおける動作は、ある静的スキーマから別の静的スキーマへの遷移、つまり、あるタイプから別のタイプへのインスタンスの再分類としてモデル化できます。情報言語では、オブジェクトのセットに関係する状態変化は、それらのオブジェクト間の相互作用と見なすことができます。インタラクションに関与するすべてのオブジェクトの状態を変更する必要があるわけではありません。一部のオブジェクトは読み取り専用で関与できます。
behavior that a system is expected to exhibit,システムが示すと予想される動作
behavior that terminates a binding,バインディングを終了する動作
behavior which breaks down a liaison and repudiates the corresponding contractual context and the corresponding contract,関係を破壊し、対応する契約内容および対応する契約を拒否する行為
"behavior, act, or event deviating from a system's desired property or claim of interest",システムの望ましい特性または利益の主張から逸脱する動作、行為、またはイベント
"behavior, triggered by an interaction, which adds value for the service users by creating, modifying, or consuming information; the changes become visible in the service provider's environment",インタラクションによって引き起こされる動作。情報を作成、変更、または消費することでサービス ユーザーに価値を付加します。変更はサービスプロバイダーの環境に反映されます
Bench Mark Test,ベンチマークテスト
bi-directional two-wire serial bus that provides a communication link between integrated circui,集積回路間の通信リンクを提供する双方向 2 線式シリアル バス
bill of materials,部品表
binary digit,2進数
"binding agreement between two parties, especially enforceable by law, or a similar internal agreement wholly within an organization",二者間の拘束力のある合意、特に法律によって執行可能なもの、または組織内全体での同様の内部合意
binding performed during the execution of a computer program,コンピュータプログラムの実行中に実行されるバインディング
binding performed prior to the execution of a computer program and not subject to change during program execution,バインディングはコンピュータ プログラムの実行前に実行され、プログラムの実行中に変更されることはありません。
block of comments placed at the beginning of a computer program or routine,コンピュータプログラムまたはルーチンの先頭に置かれるコメントのブロック
"block of main storage having the size of, and used to hold, a page",ページのサイズを持ち、ページを保持するために使用される主記憶域のブロック
"body certifying persons against the requirements in ISO/IEC 24773:2008, including the development and maintenance of a Scheme",スキームの開発と維持を含む、ISO/IEC 24773:2008 の要件に照らして個人を認証する機関
body of evidence and rationale that shows an item is justified as being safe within allowed limits on risk,品目がリスクの許容範囲内で安全であると正当化されることを示す一連の証拠と理論的根拠
body of free text that describes some general comment or specific constraint about a portion of a model,モデルの一部に関する一般的なコメントまたは特定の制約を説明するフリーテキストの本文
body of knowledge used as the basis for the design of tests and test cases,テストおよびテストケースの設計の基礎として使用される知識体系
body that performs an assessment,評価を行う機関
Boolean expression (one that evaluates to true or false) associated with a transition,遷移に関連付けられたブール式 (true または false に評価される式)
Boolean expression containing no Boolean operators,ブール演算子を含まないブール式
bootstrap loader used to load that part of an operating system needed to load the remainder of the operating system,オペレーティング システムの残りの部分をロードするために必要なオペレーティング システムの部分をロードするために使用されるブートストラップ ローダー
both private and protected,プライベートと保護の両方
Both probability and potential loss might change over time.,確率と潜在的な損失は時間の経過とともに変化する可能性があります。
"both the set of artifacts that constitute the unit of component implementation, and the definition of this aggregate entity",コンポーネント実装の単位を構成する成果物のセットと、この集合エンティティの定義の両方
"bottom-up design, bottom-up testing",ボトムアップ設計、ボトムアップテスト
box in a child diagram,子図のボックス
box in a descendent diagram,子孫図のボックス
box in the A-0 context diagram that models the top-level function of an IDEF0 model,IDEF0 モデルの最上位関数をモデル化する A-0 コンテキスト図のボックス
box related to a specific diagram by a hierarchically consecutive sequence of one or more parent/child relationships,1 つ以上の親子関係の階層的に連続したシーケンスによって特定のダイアグラムに関連付けられたボックス
box that is detailed by a decomposition diagram that is not the box's child diagram,ボックスの子図ではない分解図によって詳細が説明されているボックス
"Braille displays, screen readers, screen magnification software, and eye tracking devices",点字ディスプレイ、スクリーン リーダー、画面拡大ソフトウェア、および視線追跡デバイス
branch created for developing a particular set of features,特定の機能セットを開発するために作成されたブランチ
branch for keeping track of versions of imported software,インポートされたソフトウェアのバージョンを追跡するためのブランチ
"branch of computer science devoted to developing data processing systems that perform functions normally associated with human intelligence, such as reasoning, learning, and self-improvement",推論、学習、自己改善など、通常は人間の知能に関連する機能を実行するデータ処理システムの開発に特化したコンピューターサイエンスの分野
branch of science and technology that is concerned with information processing by means of computers,コンピュータによる情報処理に関係する科学技術の分野
branch where active product development takes place,活発な製品開発が行われる支店
branch where most development concerns bug fixes,ほとんどの開発がバグ修正に関係するブランチ
"branch where no development takes place, either in preparation for a release or because active development has ceased on it",リリースの準備中、またはアクティブな開発が停止したため、開発が行われないブランチ
branch where stability-disrupting changes are discourage,安定性を破壊する変更が妨げられるブランチ
"branch, created at the time of a release, to which only security commits are made",リリース時に作成され、セキュリティコミットのみが行われるブランチ
breakpoint that automatically invokes a previously specified debugging process when initiated,開始時に以前に指定されたデバッグ プロセスを自動的に呼び出すブレークポイント
"breakpoint that can be set at compile time, such as entry into a given routine",特定のルーチンへの入り口など、コンパイル時に設定できるブレークポイント
breakpoint that is initiated upon entry into a program or routine,プログラムまたはルーチンに入ると開始されるブレークポイント
breakpoint that is initiated upon execution of a given computer instruction,特定のコンピュータ命令の実行時に開始されるブレークポイント
breakpoint that is initiated upon exit from a given program or routine,特定のプログラムまたはルーチンの終了時に開始されるブレークポイント
breakpoint that is initiated when a specified data item is accessed,指定されたデータ項目にアクセスしたときに開始されるブレークポイント
"breakpoint whose predefined initiation event is a runtime characteristic of the program, such as the execution of any twenty source statements",事前に定義された開始イベントがプログラムのランタイム特性であるブレークポイント (任意の 20 のソース ステートメントの実行など)
brief daily project status meeting or other planning meeting in agile development methodologies,毎日の簡単なプロジェクト状況会議またはアジャイル開発手法におけるその他の計画会議
brief description of a computer program that provides sufficient information for potential users to determine the appropriateness of the program to their needs and resources,潜在的なユーザーがニーズやリソースに対するプログラムの適切性を判断するのに十分な情報を提供するコンピューター プログラムの簡単な説明
brief statement of the perspective of an IDEF0 model that is presented in the a-0 context diagram of the mode,モードの a-0 コンテキスト図に示される IDEF0 モデルの視点の簡単な説明
brief statement of the reason for an IDEF0 model's existence that is presented in the a-0 context diagram of the model,モデルの a-0 コンテキスト図に示される、IDEF0 モデルの存在理由の簡単な説明
broadly stated responsibility that is eventually refined as specific properties and constraints,最終的には特定の特性と制約として洗練される、広範に述べられた責任
budget at completion,完成時の予算
budget within the cost baseline or performance measurement baseline that is allocated for identified risks that are accepted and for which contingent or mitigating responses are developed,コストベースラインまたはパフォーマンス測定ベースライン内で、受け入れられ、偶発的または緩和的な対応が開発される特定のリスクに割り当てられる予算。
budgeted cost of work performed BCWS,実行された作業の予算コスト BCWS
budgeted cost of work scheduled,予定されている作業の予算コスト
buffering technique in which a buffer is allocated to a computer program for the duration of the program's execution,バッファリング技術: プログラムの実行中にコンピューター プログラムにバッファーを割り当てる方法
buffering technique in which data are stored in a buffer in anticipation of a need for the data,バッファリング技術: データの必要性を見越してデータをバッファに保存する技術
"buffering technique in which the buffer allocated to a computer program varies during program execution, based on current need",バッファリング技術: コンピュータ プログラムに割り当てられるバッファが、現在のニーズに基づいてプログラムの実行中に変化する技術
building a software system at least partly from existing pieces to perform a new application,新しいアプリケーションを実行するために、既存の部分から少なくとも部分的にソフトウェア システムを構築する
"buildings, instruments, tools",建物、楽器、道具
built-in test,組み込みテスト
"burndown charts, cumulative flow diagrams, parking lot diagrams",バーンダウン チャート、累積フロー図、駐車場図
"bus snoop, cache snoop, bus sniffing",バス スヌープ、キャッシュ スヌープ、バス スニッフィング
Business information management represents the business as the customer organization or client of the application management and IT infrastructure management organizations in maintaining the functionality of the information provisioning and the information systems. It is the demand side of the information provisioning. An information system can have non-automated elements such as forms and user guides. Those elements are usually maintained by the business information management organization.,ビジネス情報管理は、情報プロビジョニングおよび情報システムの機能を維持する際に、アプリケーション管理および IT インフラストラクチャ管理組織の顧客組織またはクライアントとしてのビジネスを表します。情報提供の需要側です。情報システムには、フォームやユーザー ガイドなどの非自動化要素が含まれる場合があります。これらの要素は通常、ビジネス情報管理組織によって維持されます。
business requirements specification,ビジネス要件の仕様
by issuing database commands or directly manipulating system files,データベース コマンドを発行するか、システム ファイルを直接操作することによって
byte that consists of eight bits,8ビットで構成されるバイト
"Calendar units are generally in hours, days, or weeks, but can also be in quarter years, months, shifts, or even in minutes.",カレンダーの単位は通常、時間、日、または週ですが、四半期、月、シフト、または分単位にすることもできます。
can be checked for correctness by a person or tool,人またはツールによって正確性をチェックできる
can be context-sensitiv,状況に依存する可能性がある
can be enforced by means of binary semaphores or by using monitors.,バイナリ セマフォまたはモニターを使用して強制できます。
can be part of a loader,ローダーの一部にすることができます
can be provided as separate documentation or as embedded documentation or both,個別のドキュメントとして、または埋め込みドキュメントとして、またはその両方として提供できます。
can be retrieved and viewed,取得して表示することができます
"Can be specified or measured either as the extent to which a product or system can be used by specified users to achieve specified goals of learning to use the product or system with effectiveness, efficiency, freedom from risk and satisfaction in a specified context of use, or by product properties corresponding to suitability for learning as defined in ISO 9241-110",指定された使用状況において、有効性、効率性、リスクからの解放、満足度を伴って製品またはシステムを使用する方法を学習するという指定された目標を達成するために、指定されたユーザーが製品またはシステムを使用できる程度として、または ISO 9241-110 で定義されている学習への適合性に対応する製品特性によって指定または測定できます。
can be used to store 0 or 1 as digital data,0または1をデジタルデータとして保存するために使用できます
"can denote bundling of arrows, meaning the inclusion of multiple object types within an object type set",矢印の束を表すことができます。これは、オブジェクト タイプ セット内に複数のオブジェクト タイプが含まれていることを意味します。
can occur when versions from different branches are merged or when two committers work concurrently on the same file.,この問題は、異なるブランチのバージョンがマージされる場合、または 2 人のコミッターが同じファイルに対して同時に作業する場合に発生する可能性があります。
"can refer either to general characteristics such as reliability, maintainability, and usability or to specific features of a software product. An attribute expresses some characteristic that is generally common to the instances of a class. The name of the attribute is the name of the role that the value class plays in describing the class, which can simply be the name of the value class (as long as using the value class name does not cause ambiguity).",信頼性、保守性、使いやすさなどの一般的な特性を指す場合もあれば、ソフトウェア製品の特定の機能を指す場合もあります。属性は、クラスのインスタンスに一般に共通する何らかの特性を表します。属性の名前は、クラスを説明する際に値クラスが果たす役割の名前であり、(値クラス名の使用によって曖昧さが生じない限り) 単に値クラスの名前にすることもできます。
candidate key of an entity other than the primary key,主キー以外のエンティティの候補キー
candidate key selected as the unique identifier of an entity,エンティティの一意の識別子として選択された候補キー
"capabilities of the various computational, user interface, input, output, data management, and other features provided by a product",製品によって提供されるさまざまな計算、ユーザー インターフェイス、入力、出力、データ管理、およびその他の機能の機能
capability development document,能力開発文書
capability maturity model structure wherein capability levels provide a recommended order for approaching process improvement within each specified process area,能力成熟度モデル構造。能力レベルは、指定された各プロセス領域内でプロセス改善に取り組むための推奨順序を提供します。
capability of a functional unit to meet the requirements of a specified interface without appreciable modification,大幅な変更を加えることなく、指定されたインターフェイスの要件を満たす機能ユニットの機能
"capability of a microcontroller unit to allow the user to download new code (reprogram the unit), activated by restarting the unit",ユーザーが新しいコードをダウンロード (ユニットを再プログラム) できるようにするマイクロコントローラー ユニットの機能。ユニットを再起動することで有効になります。
capability of a microcontroller unit to fetch new program code and reprogram itself while the system is operating,システムの動作中に新しいプログラム コードをフェッチして自身を再プログラムするマイクロコントローラー ユニットの機能
capability of a product to satisfy the stated and implied needs when used under specific conditions,特定の条件下で使用された場合に、明示的および黙示的なニーズを満たす製品の能力
capability of a program to be executed on various types of data processing systems without converting the program to a different language and with little or no modification,プログラムを別の言語に変換したり、ほとんどまたはまったく変更したりすることなく、さまざまなタイプのデータ処理システム上で実行できるプログラムの機能
capability of a system or device to be attached to other systems or devices without modification,システムまたはデバイスを変更せずに他のシステムまたはデバイスに接続できる機能
"capability of objects to collaborate, that is, the capability mutually to communicate information in order to exchange events, proposals, requests, results, commitments and flows",オブジェクトが連携する機能、つまり、イベント、提案、要求、結果、コミットメント、およびフローを交換するために相互に情報を通信する機能
capability of software product to satisfy stated and implied needs when used under specified conditions,指定された条件下で使用された場合に、明示的および暗黙的なニーズを満たすソフトウェア製品の機能
capability of the software product to be modified,変更されるソフトウェア製品の機能
capability production document,能力生産ドキュメント
capability to adjust the size of a bus on request during operations,動作中にリクエストに応じてバスのサイズを調整する機能
"capability to communicate, execute programs, and transfer data among various functional units in a manner that requires the user to have little or no knowledge of the unique characteristics of those units",ユーザーがそれらのユニットの固有の特性についてほとんどまたはまったく知識を必要としない方法で、さまざまな機能ユニット間で通信、プログラムの実行、およびデータ転送を行う機能
"capability to deliver a service without interruption, or with consistent availability as scheduled and agreed",サービスを中断することなく、または計画および合意どおりに一貫した可用性を維持して提供する能力
cascading style sheets,カスケード スタイル シート
cascading stylesheets level 2,カスケード スタイルシート レベル 2
CASE Data Interchange Format (originally),CASE データ交換フォーマット (オリジナル)
case where a task's execution is delayed because a lower priority task is blocking it,優先度の低いタスクがタスクをブロックしているためにタスクの実行が遅れる場合
"categorization of an abstract set of possible values, characteristics, and set of operations for an attribute",属性の可能な値、特性、および一連の操作の抽象的なセットの分類
"categorization of values operation arguments, typically covering both behavior and representation",値操作の引数の分類。通常は動作と表現の両方をカバーします。
categorized functions that are generally used together,一般的に一緒に使用される分類された機能
category in a historical classification of computers based mainly on the technology used in their manufacture,主に製造に使用されたテクノロジーに基づいたコンピュータの歴史的な分類におけるカテゴリ
category of data quality attributes that bears on data quality,データ品質に関係するデータ品質属性のカテゴリ
category of process attributes that are significant to process quality,プロセス品質に重要なプロセス属性のカテゴリ
category of product attributes that bears on quality,品質に関わる製品属性のカテゴリー
category of software quality attributes that bears on software quality,ソフトウェアの品質に影響を与えるソフトウェア品質属性のカテゴリ
category of the criteria addressing whether and how to group objects into concurrent tasks,オブジェクトを同時タスクにグループ化するかどうか、およびその方法を指定する基準のカテゴリ
category of the task-structuring criteria addressing how device interface objects are mapped to I/O tasks and when an I/O task is activated,デバイス インターフェイス オブジェクトが I/O タスクにどのようにマップされるか、および I/O タスクがいつアクティブ化されるかを指定するタスク構造基準のカテゴリ。
category of the task-structuring criteria addressing how internal objects are mapped to internal tasks and when an internal task is activated,内部オブジェクトが内部タスクにどのようにマップされるか、および内部タスクがいつアクティブ化されるかを指定するタスク構造基準のカテゴリ。
category of the task-structuring criteria addressing the relative importance of executing a given tas,特定のタスクを実行することの相対的な重要性に対処するタスク構造化基準のカテゴリー。
"category of users sharing the same or similar characteristics and needs (for example, purpose in using the documentation, tasks, education level, abilities, training, and experience) that determine the content, structure, and use of the intended documentation",同じまたは類似の特性とニーズ (たとえば、ドキュメントの使用目的、タスク、教育レベル、能力、トレーニング、経験) を共有するユーザーのカテゴリー。対象となるドキュメントの内容、構造、用途を決定します。
"category of users sharing the same or similar characteristics and needs (for example, reason for using the documentation, tasks, education level, abilities, training, experience)",同じまたは類似の特性とニーズを共有するユーザーのカテゴリ (ドキュメントを使用する理由、タスク、教育レベル、能力、トレーニング、経験など)
category or class of elements,要素のカテゴリまたはクラス
"cause-and-effect diagrams, checksheets, control charts, flowcharts, histograms, Pareto diagrams, scatte diagrams",因果関係図、チェックシート、管理図、フローチャート、ヒストグラム、パレート図、散布図
central processing unit,中央処理装置
central repository of material pertinent to a project,プロジェクトに関連する資料の中央リポジトリ
Certification criteria are defined by a certification policy. Certification criteria can be specified as a set of certification properties that must be met.,認定基準は認定ポリシーによって定義されます。認定基準は、満たす必要がある認定プロパティのセットとして指定できます。
"Certification is applicable to all objects of conformity assessment except for conformity assessment bodies themselves, to which accreditation is applicable. Certification of a management system is sometimes also called registration.",認証は、認定が適用される適合性評価機関自体を除く、すべての適合性評価の対象に適用されます。マネジメントシステムの認証は登録と呼ばれることもあります。
"certification system related to specified products, to which the same specified requirements, specific rules, and procedures apply",特定の製品に関連し、同一の特定の要件、特定の規則、手順が適用される認証制度
"chain of actions, where at least one object participates in all the actions of the chain",アクションのチェーン。少なくとも 1 つのオブジェクトがチェーンのすべてのアクションに参加します。
change by an instance from being an instance of its current class to being additionally an instance of one (or more) of the subclasses of the current subclass,インスタンスによって、現在のクラスのインスタンスから、さらに現在のサブクラスの 1 つ (または複数) のサブクラスのインスタンスに変更されること。
change by an instance from being an instance of its current subclass to being an instance of one of the other subclasses in its current cluster,インスタンスによって、現在のサブクラスのインスタンスから現在のクラスター内の他のサブクラスのインスタンスに変更される
change by an instance from being an instance of its current subclass within a cluster to being an instance of none of the subclasses in the cluster,インスタンスによって、クラスター内の現在のサブクラスのインスタンスからクラスター内のどのサブクラスのインスタンスにもならないように変更されます。
change control board,制御基板を変更する
change detectable by the subject software,対象ソフトウェアによって検出可能な変更
change from one State to another,ある状態から別の状態に変化する
change from one state to another state or the same state,ある状態から別の状態、または同じ状態に変化する
change in one version of a file that cannot be reconciled with the version of the file to which it is applied,ファイルのあるバージョンでの変更が、適用先のファイルのバージョンと一致しないこと
"changes made directly to the version control system's repository, bypassing the system's commands",システムのコマンドをバイパスして、バージョン管理システムのリポジトリに直接変更を加えます。
changes recorded in the repository that do not contribute anything useful to the project's history,リポジトリに記録された、プロジェクトの歴史に何の役にも立たない変更
changing or translation of a requirement through analysis into a form that is suitable for low-level analysis or design,分析を通じて要件を、低レベルの分析または設計に適した形式に変更または変換すること
"changing the requirements, extending the schedule, or transferring the risk factor to another domain",要件の変更、スケジュールの延長、またはリスク要因の別のドメインへの移管
Char Transmission Code Set,文字送信コードセット
character or bit pattern that is assigned a particular meaning,特定の意味が割り当てられた文字またはビット パターン
character or set of characters that specifies a computer operation,コンピュータの操作を指定する文字または文字セット
"character or set of characters used to denote the beginning or end of a group of related bits, characters, words, or statements",関連するビット、文字、単語、またはステートメントのグループの始まりまたは終わりを示すために使用される文字または文字のセット
character that represents a nonnegative integer,非負の整数を表す文字
"characteristic of a unit (usually composite in structure and multi-dimensional) expressing the cumulative effect of all previous unit interaction occurrences, in terms of which the delayed affective relationships of the unit can be evaluated",ユニットの特性（通常は構造が複合的で多次元）
"characteristic of software, or a generic term applying to quality factors, quality subfactors, or metric values",ソフトウェアの特性、または品質要素、品質サブ要素、またはメトリック値に適用される一般的な用語
characteristics that can differ among members of the product line,製品ラインのメンバー間で異なる可能性がある特性
characterization of a family of systems that are related by sharing structural and semantic properties,構造的および意味論的な特性を共有することによって関連するシステムファミリーの特徴付け
characterization of a process on an ordinal measurement scale of process capability,工程能力の通常の測定スケールでの工程の特徴付け
characterization of the ability of a process to meet current or projected business goals,現在または予測されるビジネス目標を達成するためのプロセスの能力の特徴付け
characterization of the way an entity DataType participates in a relationship,エンティティ DataType が関係に参加する方法の特徴付け
chart depicting program constructs defined in ISO/IEC 8631 and having the structure of a tree,ISO/IEC 8631 で定義され、ツリー構造を持つプログラム構造を示すチャート
"checkpointing a cluster, followed by deletion of the cluster",クラスターにチェックポイントを設定し、その後クラスターを削除する
Checkpoints can only be created when the engineering object involved satisfies a pre-condition stated in a checkpointing policy,チェックポイントは、関係するエンジニアリング オブジェクトがチェックポイント設定ポリシーに記載されている前提条件を満たしている場合にのみ作成できます。
child entitlement tags created for allocation purposes,割り当て目的で作成された子資格タグ
chip with two or more microprocessor units,2つ以上のマイクロプロセッサユニットを搭載したチップ
choosing part of a population of interest for inspection,検査対象となる対象母集団の一部を選択する
chronological record of a risk's current and historical risk state information,リスクの現在および過去のリスク状態情報の時系列記録
chronological record of relevant details about the execution of tests,テストの実行に関する関連詳細の時系列記録
"claim of a system, product, or element that includes limitations on a property's values, the claim's scope of applicability, and the allowable uncertainty regarding the claim's achievement",プロパティの値、クレームの適用範囲、およびクレームの達成に関する許容される不確実性に対する制限を含む、システム、製品、または要素のクレーム
claim representing a requirement for a risk reduction measure identified in the risk treatment process of the system-of-interest,対象システムのリスク処理プロセスで特定されたリスク低減措置の要件を表すクレーム
"Claims usually relate to specified versions of a product. The statement of a claim does not mean that the only possible intent or desire is to show it is true. Sometimes claims are made for the purpose of evaluating whether they are true or false or undertaking an effort to establish what is true. In its entirety, a claim is an unambiguous declaration of an assertion with any associated conditionality, giving explicit details including limitations on values and uncertainty. It could be about the future, present, or past. A safety goal is an instance of a claim.",通常、クレームは製品の指定されたバージョンに関連します。主張の表明は、それが真実であることを示すことだけが考えられる意図や願望であることを意味するものではありません。場合によっては、主張が真実か虚偽かを評価したり、真実を証明する努力をしたりする目的で主張がなされることがあります。全体として、クレームは関連する条件を伴う主張の明確な宣言であり、値の制限や不確実性などの明示的な詳細を示します。それは未来、現在、あるいは過去に関するものかもしれません。安全目標はクレームの一例です。
class for which the set of instances is fixed; its instances do not come and go over time,インスタンスのセットが固定されているクラス。そのインスタンスは時間の経過とともに現れたり消えたりすることはありません
class for which the set of instances is not fixed; its instances come and go over time.,インスタンスのセットが固定されていないクラス。そのインスタンスは時間の経過とともに現れては消えます。
class in which each instance is a collection of values,各インスタンスが値のコレクションであるクラス
class in which each instance is a group of instances of other classes,各インスタンスが他のクラスのインスタンスのグループであるクラス
class in which each instance is a single value,各インスタンスが単一の値であるクラス
class introduced to resolve a many-to-many relationship,多対多の関係を解決するために導入されたクラス
class itself or any of its generic ancestors,クラス自体またはその汎用祖先のいずれか
class of computers that have the highest processing speeds available at a given time,特定の時点で最高の処理速度を備えたコンピュータのクラス
"class of data, characterized by the members of the class and the operations that can be applied to them",データのクラス。クラスのメンバーとそれらに適用できる操作によって特徴付けられます。
class of licenses with common characteristics,共通の特徴を持つライセンスのクラス
class of software based on the characteristics of functional user requirements which are pertinent to FSM,FSM に関連する機能ユーザー要件の特性に基づくソフトウェアのクラス
class of techniques for representing data based on first defining a human readable representation using some specific character repertoire and then defining an encoding for that repertoire,最初に特定の文字レパートリーを使用して人間が読める表現を定義し、次にそのレパートリーのエンコーディングを定義することに基づいてデータを表現するための技術のクラス。
class of test design technique in which tests are designed to execute individual scenarios,個々のシナリオを実行するようにテストを設計するテスト設計手法の一種
class presented in a view that is specified in some other view,他のビューで指定されたビューに表示されるクラス
class that cannot be instantiated independently,独立してインスタンス化できないクラス
class that is a primitive in the IDEF1X metamodel,IDEF1X メタモデルのプリミティブであるクラス
class that represents a set of real or abstract objects that have common knowledge or behavior,共通の知識や動作を持つ実際のオブジェクトまたは抽象オブジェクトのセットを表すクラス
class that represents instances that are pure values,純粋な値であるインスタンスを表すクラス
class whose instances are specialized into one or more subclasses,インスタンスが 1 つ以上のサブクラスに特化されているクラス
"class whose instances are, by their very nature, intrinsically related to certain other state class instance(s)",インスタンスがその性質上、他の特定の状態クラス インスタンスと本質的に関連しているクラス
"Classes are used to represent the notion of ""things whose knowledge or actions are relevant.""",クラスは、「知識や動作が関連するもの」の概念を表すために使用されます。
classification of activities defined by the execution of the same algorithm,同じアルゴリズムの実行によって定義されるアクティビティの分類
classification of chains which is defined by the sequence of tasks types,タスクタイプのシーケンスによって定義されるチェーンの分類
classification of emulated users that is defined by the combination of 1) the relative frequencies of the use of chain types; 2) the preparation times (mean values and their standard deviations),エミュレートされたユーザーの分類。1) チェーン タイプの使用の相対頻度。 2) 準備時間 (平均値とその標準偏差)
classification of software as either developed or nondeveloped,ソフトウェアを開発済みか未開発かに分類する
"classification of tasks which is defined by the combination of (1) the activity type, or a set of activity types which are all belonging to an identical timeliness function and task mode (2) the timeliness function; the task mode.",(1) 同一の適時性機能とタスク モードにすべて属するアクティビティ タイプまたはアクティビティ タイプのセット (2) 適時性機能の組み合わせによって定義されるタスクの分類。タスクモード。
classification scheme for referencing profiles or sets of profiles unambiguously,プロファイルまたはプロファイルのセットを明確に参照するための分類スキーム
classification used for a meta-entity whose instances can exist without the occurrences of other meta-entities,他のメタエンティティが出現しなくてもインスタンスが存在できるメタエンティティに使用される分類
clear and measurable statements of preferred direction and behavior to condition the decisions made within an organization,組織内で行われる決定を条件付けるための、好ましい方向性と行動に関する明確かつ測定可能な記述
"clear statement listing of all parts of the organization and types of software, assets, and platforms covered by a SAM program",SAM プログラムの対象となる組織のすべての部分とソフトウェア、資産、プラットフォームの種類を明確に記載したリスト
clear text file encoding of a CDIF transfer file,CDIF 転送ファイルのクリア テキスト ファイル エンコーディング
Client Conversion Code Sets,クライアント変換コードセット
client makes it right,クライアントはそれを正しくする
"client mappings; that is, mappings of the externally-visible component features for component declarations, or home features for home declarations",クライアントマッピング。つまり、コンポーネント宣言に対する外部から見えるコンポーネント機能のマッピング、またはホーム宣言に対するホーム機能のマッピングです。
Client Native Code Set,クライアントネイティブコードセット
client that is defined using the IDL extensions in the component model,コンポーネント モデルの IDL 拡張機能を使用して定義されたクライアント
clock pulse generator,クロックパルス発生器
cloning a cluster after cluster failure or deletion,クラスターの障害または削除後のクラスターのクローン作成
cloning a cluster following its deactivation,非アクティブ化後のクラスターのクローン作成
closeness of the agreement between the results of measurements of the same measurand carried out under changed conditions of measurement,変更された測定条件下で実行された同じ測定対象の測定結果間の一致の近さ
closeness of the agreement between the results of successive measurements of the same measurand carried out under the same conditions of measurement,同じ測定条件下で実行された同じ測定対象の連続測定結果間の一致の近さ
"cluster of related practices in an area that, when implemented collectively, satisfies a set of goals considered important for making improvement in that area",ある分野における関連実践の集合体であり、集合的に実施すると、その分野を改善するために重要と考えられる一連の目標を満たします。
cluster template containing checkpoints of the basic engineering objects in a cluster,クラスタ内の基本的なエンジニアリング オブジェクトのチェックポイントを含むクラスタ テンプレート
COBOL,コボル
code communicated to a job stream processor by a batch program to influence the execution of succeeding steps in the input stream,入力ストリームの後続のステップの実行に影響を与えるために、バッチ プログラムによってジョブ ストリーム プロセッサに通信されるコード
code containing addresses that are to be adjusted by the loader to reflect the storage locations into which the code is loaded,コードがロードされる格納場所を反映するためにローダーによって調整されるアドレスを含むコード
code generator that produces programs to solve one or more problems in a particular application area,特定のアプリケーション分野における 1 つまたは複数の問題を解決するプログラムを作成するコード ジェネレーター
code in which all addresses are absolute addresses,すべてのアドレスが絶対アドレスであるコード
code or process that invokes an operation on an object,オブジェクトに対する操作を呼び出すコードまたはプロセス
code that is executed to perform a service,サービスを実行するために実行されるコード
code used to indicate the results of a computer program operation,コンピュータプログラムの操作の結果を示すために使用されるコード
code used to influence the execution of a calling module following a return from a called module,呼び出されたモジュールから戻った後の呼び出しモジュールの実行に影響を与えるために使用されるコード
coherent presentation of a set of content objects and associated interaction objects delivered to users through a browser in accordance with Internet protocols,インターネット プロトコルに従ってブラウザを通じてユーザーに配信される、一連のコンテンツ オブジェクトと関連する対話オブジェクトの一貫したプレゼンテーション
"cohesive collection of automated procedures and data supporting a business objective, consisting of one or more components, modules, or subsystems",1 つ以上のコンポーネント、モジュール、またはサブシステムで構成される、ビジネス目標をサポートする自動化された手順とデータのまとまったコレクション
collaboration pattern of interaction between two units used when one unit is not independently capable of providing its service behavior without the assistance of the other unit.,コラボレーション 1 つのユニットが他のユニットの支援なしに独立してサービス動作を提供できない場合に使用される 2 つのユニット間の対話のパターン。
"collect project performance data with respect to a plan, produce performance measures, and report and disseminate performance information",計画に関するプロジェクトのパフォーマンス データを収集し、パフォーマンスの測定値を作成し、パフォーマンス情報を報告および配布する
"collection and comparison of technical accomplishments during project execution to the specified level of service, key performance indicators, or planned technical events and accomplishments",プロジェクト実行中の技術的成果の収集と、指定されたレベルのサービス、主要業績評価指標、または計画された技術的イベントおよび成果との比較
collection class restricted to hold only instances of a specified type (class),指定された型 (クラス) のインスタンスのみを保持するように制限されたコレクション クラス
collection class that contains no duplicates and whose members are ordered,重複を含まず、メンバーが順序付けされているコレクション クラス
collection class whose members are unordered but in which duplicates are meaningful,メンバーに順序はありませんが、重複が意味のあるコレクション クラス
collection class with no duplicate members and where order is irrelevant,重複するメンバーがなく、順序が無関係なコレクション クラス
"collection of all interface ports between a unit and its environment, characterized by the input and output interactions that it allows",ユニットとその環境の間のすべてのインターフェイス ポートの集合。これにより許可される入力と出力の相互作用によって特徴付けられます。
collection of all software-related artifacts belonging to a system,システムに属するすべてのソフトウェア関連成果物のコレクション
collection of all system element or software-related artifacts belonging to a system,システムに属するすべてのシステム要素またはソフトウェア関連成果物のコレクション
"collection of all the infrastructure tools, software applications, non-automated elements, data sets, user documentation, and organizational structures which serve to supply information to the business",ビジネスに情報を提供するすべてのインフラストラクチャ ツール、ソフトウェア アプリケーション、非自動化要素、データ セット、ユーザー ドキュメント、および組織構造のコレクション
collection of applications managed by an application management organization or an entity within that application management organization,アプリケーション管理組織またはそのアプリケーション管理組織内のエンティティによって管理されるアプリケーションのコレクション
"collection of changed objects that are to be transferred integrally to one or more production environments, including implementation instructions",実装手順を含む、1 つ以上の実稼働環境に統合的に転送される変更されたオブジェクトのコレクション
collection of characters used in an encoding to represent terminal symbols,終端記号を表すためにエンコーディングで使用される文字のコレクション
collection of common development rules and constraints for realizing the applications of a product line,製品ラインのアプリケーションを実現するための共通の開発ルールと制約の集合
collection of data describing a specific target area that is used and updated by one or more applications,1 つ以上のアプリケーションによって使用および更新される特定のターゲット領域を記述するデータのコレクション
"collection of data organized according to a conceptual structure describing the characteristics of the data and the relationships among their corresponding entities, supporting one or more application areas",データの特性とそれらに対応するエンティティ間の関係を記述する概念的構造に従って編成されたデータの集合で、1 つ以上のアプリケーション領域をサポートします。
collection of data that corresponds to one or more coherent views of a system of interest that is stored or transferred as a unit,単位として保存または転送される、対象システムの 1 つまたは複数の一貫したビューに対応するデータの集合
collection of data that is stored or transferred as a unit,単位として保存または転送されるデータの集合
collection of documentation that has been segmented into separately identified volumes or files for ease of distribution or use,配布や使用を容易にするために、個別に識別されたボリュームまたはファイルに分割されたドキュメントの集合
collection of documents on a given subject,与えられた主題に関する文書のコレクション
"collection of documents that describe the requirements, capabilities, limitations, design, operation, and maintenance of an information processing system",情報処理システムの要件、機能、制限、設計、運用、保守について説明する文書の集合
collection of entities and assigned attributes (domains) assembled for some purpose,何らかの目的のために集められたエンティティと割り当てられた属性 (ドメイン) のコレクション
"collection of formal documents that includes a description of the desired form of response from a potential supplier, the relevant statement of work for the supplier, and required provisions in the supplier agreement",潜在的なサプライヤーからの望ましい応答形式、サプライヤーの関連作業範囲記述書、およびサプライヤー契約の必須条項の説明を含む正式文書のコレクション
"collection of information about data such as name, description, creator, owner, provenance, translation in different languages, and usage",名前、説明、作成者、所有者、出所、さまざまな言語への翻訳、使用法などのデータに関する情報の収集
collection of information related to a specific subset of terms related to a specific domain,特定のドメインに関連する用語の特定のサブセットに関連する情報の収集
"collection of information that can be useful to those who are defining, implementing, and managing processes in the organization.",組織内でプロセスを定義、実装、管理する人にとって役立つ情報のコレクション。
collection of interconnections to a CASE tool that have a common kind of endpoint in the environment,環境内に共通の種類のエンドポイントを持つ CASE ツールへの相互接続のコレクション
collection of interrelated data stored together in one or more computerized files,1 つまたは複数のコンピュータ化されたファイルに一緒に保存された相互に関連するデータの集合
collection of items where repetition of items is allowed,項目の繰り返しが許可されている項目のコレクション
"collection of items which contain the test conditions of the test item to be tested which can be collected from risks, requirements, functions, models, etc.",リスク、要件、機能、モデルなどから収集できる、試験対象の試験項目の試験条件をまとめた項目。
collection of KDM model elements that represent one or more views of the system of interest,対象となるシステムの 1 つ以上のビューを表す KDM モデル要素のコレクション
collection of knowledge items or areas generally agreed to be essential to understanding a particular subject,特定の主題を理解するために不可欠であると一般に同意されている知識項目または領域の集合
collection of logically connected web pages managed as a single entity,単一のエンティティとして管理される、論理的に接続された Web ページの集合
collection of macros available for use by a macrogenerator,マクロジェネレーターで使用できるマクロのコレクション
collection of material pertinent to the development of a given software unit or set of related units,特定のソフトウェアユニットまたは一連の関連ユニットの開発に関連する資料のコレクション
"collection of microinstructions, comprising part of or all of microprograms",マイクロプログラムの一部またはすべてを構成するマイクロ命令の集合
collection of nanoinstructions,ナノ命令のコレクション
collection of new or changed configuration items that are tested and introduced into a live environment together,一緒にテストされ、実際の環境に導入される、新規または変更された構成項目のコレクション
collection of objects able to interact at interfaces,インターフェイスで対話できるオブジェクトのコレクション
collection of objects that have been changed and approved and will be transferred to the production environment,変更および承認され、運用環境に転送されるオブジェクトのコレクション
collection of objects which can undergo change as the result of a release,リリースの結果として変更される可能性のあるオブジェクトのコレクション
collection of one or more new or changed configuration items deployed into the live environment as a result of one or more changes,1 つ以上の変更の結果としてライブ環境にデプロイされた 1 つ以上の新規または変更された構成アイテムのコレクション
"collection of profiles which are related by composition of processes (i.e., activities, tasks) or by capability level, or both",プロセスの構成 (アクティビティ、タスクなど)、能力レベル、またはその両方によって関連付けられたプロファイルのコレクション
"collection of profiles which are related by composition of processes (i.e., activities, tasks), or by requirements sharing or composition",プロセス (アクティビティ、タスクなど) の構成、または要件の共有または構成によって関連付けられたプロファイルのコレクション
collection of projects that addresses the strategic objectives of the organization,組織の戦略的目標に取り組むプロジェクトの集合体
collection of related processes,関連するプロセスのコレクション
"collection of software, firmware, and hardware elements that controls the execution of computer programs and provides such services as computer resource allocation, job control, input/output control, and file management in a computer system",コンピュータプログラムの実行を制御し、コンピュータシステムにおけるコンピュータリソースの割り当て、ジョブ制御、入出力制御、ファイル管理などのサービスを提供するソフトウェア、ファームウェア、およびハードウェア要素の集合。
collection of steps taking place in a prescribed manner,所定の方法で行われるステップの集合
"collection of subject domains, classes, relationships, responsibilities, properties, constraints, and notes assembled or created for a certain purpose and covering a certain scope",特定の目的のために集められ、特定の範囲をカバーする主題のドメイン、クラス、関係、責任、プロパティ、制約、およびメモの集合
collection of test cases for the purpose of testing a specific test objective,特定のテスト目的をテストするためのテスト ケースのコレクション
collection of the documentation inherent to the testing activities,テスト活動に固有の文書のコレクション
collection of the names and narrative descriptions of all terms that can be used for defined concepts within an environment,環境内で定義された概念に使用できるすべての用語の名前と説明のコレクション
collection of units in which ports on different units are compatibly interconnected so behaviors of one unit can influence behaviors of another unit by means of interactions occurring through interconnected ports,異なるユニットのポートが互換性を持って相互接続されているユニットの集合。相互接続されたポートを介して発生する相互作用によって、あるユニットの動作が別のユニットの動作に影響を与える可能性があります。
"collection of values assigned to base measures, derived measures and/or indicators",基本メジャー、派生メジャー、および/または指標に割り当てられた値のコレクション
combination of a hardware device and computer instructions or computer data that reside as read-only software on the hardware device,ハードウェア デバイスと、ハードウェア デバイス上に読み取り専用ソフトウェアとして常駐するコンピュータ命令またはコンピュータ データの組み合わせ。
combination of a particular syntax and a particular encoding of that syntax which together provides a complete definition of the transfer format,特定の構文とその構文の特定のエンコーディングの組み合わせで、転送フォーマットの完全な定義を提供します。
"combination of a particular syntax, a particular encoding of that syntax, and a metamodel",特定の構文、その構文の特定のエンコーディング、およびメタモデルの組み合わせ
"combination of a specific activity; a demanded execution time, defined by a specific timeliness function; a specific task mode",特定のアクティビティの組み合わせ。特定の適時性関数によって定義される要求された実行時間。特定のタスクモード
"combination of a test item parameter with a value assigned to that parameter, used as a test condition and coverage item in combinatorial test design techniques",テスト項目パラメータとそのパラメータに割り当てられた値の組み合わせ。組み合わせテスト設計手法でテスト条件およびカバレッジ項目として使用されます。
combination of an operating system and hardware that makes up the operating environment in which a program runs,プログラムが実行されるオペレーティング環境を構成するオペレーティング システムとハードウェアの組み合わせ
combination of computer instructions and data definitions that enable computer hardware to perform computational or control functions,コンピュータハードウェアが計算機能や制御機能を実行できるようにする、コンピュータ命令とデータ定義の組み合わせ。
combination of conditions (also known as causes) and actions (also known as effects) that produce a specific outcome in decision table testing and cause-effect graphing,デシジョンテーブルテストおよび因果関係グラフ作成において特定の結果を生み出す条件 (原因とも呼ばれる) とアクション (結果とも呼ばれる) の組み合わせ。
"combination of hardware, software and/or services that receives input from and communicates output to users",ユーザーから入力を受け取り、ユーザーに出力を伝達するハードウェア、ソフトウェア、および/またはサービスの組み合わせ
combination of interacting elements organized to achieve one or more stated purposes,1 つ以上の明示された目的を達成するために編成された相互作用する要素の組み合わせ
combination of programming language constructs and natural language used to express a computer program design,コンピュータープログラム設計を表現するために使用されるプログラミング言語構造と自然言語の組み合わせ
"combination of the probability of an abnormal event or failure and the consequence(s) of that event or failure to a system's components, operators, users, or environment",異常なイベントまたは障害の確率と、そのイベントまたは障害がシステムのコンポーネント、オペレーター、ユーザー、または環境に及ぼす影響の組み合わせ。
combination of the probability of an event and its consequence,出来事の確率とその結果の組み合わせ
combination of the probability of occurrence and the consequences of a given future undesirable event,将来の望ましくない出来事の発生確率とその結果の組み合わせ
combination of two or more behaviors yielding a new behavior,2 つ以上の動作を組み合わせて新しい動作を生み出すこと
"combination of two or more objects yielding a new object, at a different level of abstraction",異なる抽象化レベルで新しいオブジェクトを生成する 2 つ以上のオブジェクトの組み合わせ
"command files, job control language, both executable and non-executable software, such as fonts, graphics, audio and video recordings, templates, dictionaries, and documents",コマンド ファイル、ジョブ コントロール言語、フォント、グラフィックス、オーディオおよびビデオの記録、テンプレート、辞書、ドキュメントなどの実行可能および非実行可能ソフトウェアの両方
"command used for listing the latest version of each program's source code line, along with the date, the file version it was introduced, and the person who committed it",各プログラムのソース コード行の最新バージョンを、日付、導入されたファイル バージョン、コミット者とともに一覧表示するために使用されるコマンド
"command, control, communications, computer, and intelligence",指揮、制御、通信、コンピュータ、インテリジェンス
comment made by a reader about a diagram and placed on the diagram page,図に関して読者によって作成され、図のページに掲載されたコメント
"commercial off-the-shelf (COTS) products, acquirer-furnished products, products in reuse libraries, a preexisting developer products",商用既製 (COTS) 製品、取得者提供製品、再利用ライブラリ内の製品、既存の開発者製品
Commercial-Off-The-Shelf,市販品
common data representation,共通のデータ表現
Common Management Information Protocol,共通管理情報プロトコル
Common Management Information Service,共通経営情報サービス
Common Object Request Broker Architecture,共通オブジェクトリクエストブローカーのアーキテクチャ
common object services,共通オブジェクトサービス
"common secure interoperability, version 2",共通の安全な相互運用性、バージョン 2
Common Software Measurement International Consortium,共通ソフトウェア測定国際コンソーシアム
Common Vulnerabilities and Exposures,一般的な脆弱性とその危険性
Common Vulnerability Scoring System,一般的な脆弱性スコアリング システム
commonly includes the organization of the tests into groups,通常、テストをグループに編成することが含まれます。
commonly used for both the integration of components and the integration of entire systems,コンポーネントの統合とシステム全体の統合の両方に一般的に使用されます。
commonly used in embedded networks for vehicles or medical equipment,車両や医療機器の組み込みネットワークで一般的に使用されています
commonly used techniques for both event-oriented and project-oriented analysis approaches,イベント指向とプロジェクト指向の両方の分析アプローチで一般的に使用される手法
communication in which a producer task sends a message to a consumer task and does not wait for a response,プロデューサータスクがコンシューマータスクにメッセージを送信し、応答を待たない通信
communication sent from one object to another,あるオブジェクトから別のオブジェクトに送信される通信
communication technology,通信技術
"Communication within a local area network is not subject to external regulations; however, communication across the LAN boundary can be subject to some form of regulation.",ローカル エリア ネットワーク内の通信は外部規制の影響を受けません。ただし、LAN 境界を越える通信は、何らかの規制を受ける可能性があります。
communications security,通信セキュリティ
community of <x> domains,<x> 個のドメインのコミュニティ
"compact disc, read-only memory",CD、読み取り専用メモリ
Compact Disk,コンパクトディスク
compact sequence of characters that identifies an abstract or physical resource available on the Internet,インターネット上で利用可能な抽象的または物理的なリソースを識別するコンパクトな文字列
"company licensed to repackage and support existing products, such as combined software packages",統合されたソフトウェア パッケージなど、既存の製品を再パッケージ化してサポートするライセンスを取得した企業
"company, corporation, firm, enterprise, institution, charity, sole trader, association, or parts or combination thereof",会社、法人、事務所、企業、機関、慈善団体、個人事業主、協会、またはそれらの一部または組み合わせ
"comparator, cross-reference generator, decompiler, driver, editor, flowcharter, monitor, test case generator, timing analyzer",コンパレータ、クロスリファレンスジェネレータ、デコンパイラ、ドライバ、エディタ、フローチャート、モニタ、テストケースジェネレータ、タイミングアナライザ
"comparing actual performance with planned performance, analyzing variances, assessing trends to effect process improvements, evaluating possible alternatives, and recommending appropriate corrective action as needed",実際のパフォーマンスと計画されたパフォーマンスの比較、差異の分析、プロセス改善に影響を与える傾向の評価、考えられる代替案の評価、必要に応じた適切な是正措置の推奨
compiler that completes as much of the translation of each source statement as possible during the input or scanning of the source statement,ソース ステートメントの入力またはスキャン中に、各ソース ステートメントの翻訳を可能な限り完了するコンパイラ
compiler that executes on one computer but generates machine code for a different computer,1 つのコンピュータ上で実行されますが、別のコンピュータ用のマシンコードを生成するコンパイラ
"compiler whose output is a machine independent, intermediate-level representation of a program",出力がマシンに依存しないプログラムの中間レベル表現であるコンパイラ
"compilers, loaders, and other utilities",コンパイラ、ローダー、その他のユーティリティ
complete and documented set of software supplied for a specific application or function,特定のアプリケーションまたは機能用に提供される、完全かつ文書化されたソフトウェアのセット
complete cycle of performing reverse engineering followed by forward engineering,リバースエンジニアリングの後にフォワードエンジニアリングを実行する完全なサイクル
"complete documentation of the test design, test cases and test procedures for a specific test item",特定のテスト項目のテスト設計、テストケース、テスト手順の完全な文書化
complete mapping,完全なマッピング
"complete set of computer programs, procedures, and associated documentation designed for delivery to a user",ユーザーに提供するために設計されたコンピュータ プログラム、手順、および関連文書の完全なセット
complete set of instructions recognized by a given computer or provided by a given programming language,特定のコンピュータによって認識される、または特定のプログラミング言語によって提供される命令の完全なセット
"complete set of software designed for delivery to a software consumer or end-user, which can include computer programs, procedures and associated documentation and data.",ソフトウェア消費者またはエンドユーザーに配布するために設計されたソフトウェアの完全なセット。これには、コンピューター プログラム、手順、関連する文書とデータが含まれる場合があります。
complex programmable logic device,複雑なプログラマブル ロジック デバイス
"Complexity measures and the number, severity, and failure frequency of faults found in a walkthrough are internal software quality measures made on the product itself.",複雑さの尺度、ウォークスルーで見つかった障害の数、重大度、障害の頻度は、製品自体に対して行われる内部ソフトウェア品質尺度です。
comply with a regulation,規制に従う
"Component home interfaces provide operations to manage component life cycles, and optionally, to manage associations between component instances and primary key values.",コンポーネント ホーム インターフェイスは、コンポーネントのライフ サイクルを管理するための操作を提供し、オプションでコンポーネント インスタンスと主キー値の間の関連付けを管理するための操作を提供します。
Component Implementation Definition Language,コンポーネント実装定義言語
Component Implementation Framework,コンポーネント実装フレームワーク
component of a structured DataType with a domain specified by reference to some other DataType,他の DataType への参照によって指定されたドメインを持つ構造化 DataType のコンポーネント
component of an information structure that provides information related to the entity represented by the information structure,情報構造によって表されるエンティティに関連する情報を提供する情報構造のコンポーネント
component of an infrastructure or an item which is or will be under control of configuration management,構成管理の制御下にある、または制御される予定のインフラストラクチャまたはアイテムのコンポーネント
component of an XML document or part of the entitlement schema (Ent) that provides information related to the entitlement represented by the Ent,XML ドキュメントのコンポーネント、または Ent によって表される資格に関連する情報を提供する資格スキーマ (Ent) の一部。
"component specified in a computational viewpoint that has a control interface and declared sets of (a) operation interfaces in which it plays a server role (facets), (b) operation interfaces in which it plays a client role (receptacles), (c) operation interfaces originating announcements carrying notifications of typed events (event sources), (d) operation interfaces consuming announcements carrying notifications of typed events (event sinks), (e) operation interfaces supporting accessors and mutators for attributes (attributes)",制御インターフェースと宣言されたセットを持つ計算観点で指定されたコンポーネント。(a) サーバーの役割を果たす操作インターフェース (ファセット)、(b) クライアントの役割を果たす操作インターフェース (レセプタクル)、(c) 型付きイベントの通知を運ぶアナウンスを発信する操作インターフェース (イベント ソース)、(d) 型付きイベントの通知を運ぶアナウンスを消費する操作インターフェース (イベント シンク)、(e) アクセサーとミューテーターをサポートする操作インターフェース属性 (属性)
component that is directly related to or forms part of an application,アプリケーションに直接関連する、またはアプリケーションの一部を形成するコンポーネント
component that offers any type of port,任意のタイプのポートを提供するコンポーネント
"component, component integration, system, and acceptance testing",コンポーネント、コンポーネント統合、システム、および受け入れテスト
Components of a community object are objects of the community represented,コミュニティ オブジェクトのコンポーネントは、表現されるコミュニティのオブジェクトです
components of an interactive system (software or hardware) that provide information and controls for the user to accomplish specific tasks with the interactive system,対話型システムで特定のタスクを実行するための情報と制御をユーザーに提供する対話型システムのコンポーネント (ソフトウェアまたはハードウェア)
composed of discrete parts,個別部品で構成されている
composite enterprise object that represents a community,コミュニティを表す複合エンタープライズ オブジェクト
"computational model consisting of a finite number of states and transitions between those states, possibly with accompanying actions",有限数の状態とそれらの状態間の遷移で構成され、場合によってはアクションを伴う計算モデル
computational object which supports a binding between a set of other computational objects,他の計算オブジェクトのセット間のバインディングをサポートする計算オブジェクト
Computer Aided Design,コンピュータ支援設計
Computer Aided Software Engineering,コンピュータ支援ソフトウェアエンジニアリング
computer architecture with physically separate communication paths for instructions and data,命令とデータ用に物理的に分離された通信パスを備えたコンピュータ アーキテクチャ
computer being emulated by another computer,別のコンピュータによってエミュレートされているコンピュータ
"computer equipment, programs, documentation, services, facilities, supplies, and personnel available for a given purpose",特定の目的に利用できるコンピュータ機器、プログラム、文書、サービス、設備、消耗品、および人員
computer in which machine language instructions are implemented by microprograms rather than by hard-wired logic,機械語命令が配線されたロジックではなくマイクロプログラムによって実装されるコンピューター
computer instruction in a source program,ソースプログラム内のコンピュータ命令
computer instruction in which all addresses are absolute addresses,すべてのアドレスが絶対アドレスであるコンピューター命令
computer instruction or process that performs the transfer in (1),(1)の転送を実行するコンピュータ命令またはプロセス
computer instruction that can be executed only by a supervisory program,監視プログラムによってのみ実行できるコンピュータ命令
"computer instruction that contains five address fields, the fifth containing the address of the instruction to be executed next",5 つのアドレス フィールドを含むコンピューター命令。5 番目のフィールドには次に実行される命令のアドレスが含まれます。
computer instruction that contains four address fields,4 つのアドレス フィールドを含むコンピューター命令
"computer instruction that contains four address fields, the fourth containing the address of the instruction to be executed next",4 つのアドレス フィールドを含むコンピューター命令。4 番目のフィールドには次に実行される命令のアドレスが含まれます。
computer instruction that contains indirect addresses for its operands,オペランドの間接アドレスを含むコンピュータ命令
computer instruction that contains more than one address field,複数の住所フィールドを含むコンピューター命令
"computer instruction that contains n address fields, where n is any non-negative intege",n 個のアドレス フィールドを含むコンピュータ命令 (n は負でない整数)
"computer instruction that contains n+1 address fields, the last containing the address of the instruction to be executed next",n+1 個のアドレス フィールドを含むコンピュータ命令。最後のアドレス フィールドには次に実行される命令のアドレスが含まれます。
computer instruction that contains no address fields,住所フィールドを含まないコンピュータ命令
computer instruction that contains one address field,1 つのアドレスフィールドを含むコンピューター命令
computer instruction that contains the direct addresses of its operands,オペランドの直接アドレスを含むコンピュータ命令
computer instruction that contains three address fields,3 つのアドレス フィールドを含むコンピューター命令
"computer instruction that contains three address fields, the third containing the address of the instruction to be executed next",3 つのアドレス フィールドを含むコンピューター命令。3 番目のフィールドには次に実行される命令のアドレスが含まれます。
"computer instruction that contains two address fields, the second containing the address of the instruction to be executed next",2 つのアドレス フィールドを含むコンピューター命令。2 番目のフィールドには次に実行される命令のアドレスが含まれます。
computer instruction that contains two address fields.,2 つのアドレス フィールドを含むコンピューター命令。
"computer instruction that results from performing any required indexing, indirect addressing, or other modification on the addresses in a specified computer instruction",指定されたコンピュータ命令内のアドレスに対して必要なインデックス付け、間接アドレス指定、またはその他の変更を実行した結果として生じるコンピュータ命令。
computer instruction that transfers control from one software module to another as in (1) and often specifies the parameters to be passed to and from the module,(1) のように、あるソフトウェア モジュールから別のソフトウェア モジュールに制御を移し、多くの場合、モジュール間で受け渡されるパラメータを指定するコンピュータ命令。
computer instruction whose address fields contain the values of the operands rather than the operands' addresses,アドレスフィールドにオペランドのアドレスではなくオペランドの値が含まれるコンピュータ命令
"computer instructions and data definitions expressed in a form suitable for input to an assembler, compiler, or other translator",アセンブラ、コンパイラ、その他のトランスレータへの入力に適した形式で表現されたコンピュータ命令とデータ定義
computer instructions and data definitions expressed in a form that can be recognized and processed by a compiler,コンパイラーが認識および処理できる形式で表現されたコンピューター命令とデータ定義
computer instructions and data definitions expressed in a form that can be recognized and processed by an assembler,アセンブラが認識して処理できる形式で表現されたコンピュータ命令とデータ定義
computer instructions and data definitions expressed in a form that can be recognized and processed by an interpreter,インタプリタが認識および処理できる形式で表現されたコンピュータ命令とデータ定義
computer instructions and data definitions expressed in a form that can be recognized by the processing unit of a computer,コンピュータの処理装置が認識できる形式で表現されたコンピュータ命令とデータ定義
computer instructions and data definitions in a form output by an assembler or compiler,アセンブラまたはコンパイラによって出力される形式のコンピュータ命令とデータ定義
Computer Integrated Manufacturing,コンピュータ統合製造
"computer intended to run in a computer center, with extensive capabilities and resources to which other computers can be connected so that they can share facilities",コンピュータ センターで実行することを目的としたコンピュータ。他のコンピュータが接続して施設を共有できる広範な機能とリソースを備えています。
"computer language designed to improve the productivity achieved by high-order (third-generation) language and, often, to make computing power available to non-programmer",高次 (第 3 世代) 言語によって達成される生産性を向上させ、多くの場合、プログラマー以外でも計算能力を利用できるように設計されたコンピューター言語
"computer language that incorporates the concepts of knowledge-based systems, expert systems, inference engines, and natural language processing",知識ベースのシステム、エキスパート システム、推論エンジン、自然言語処理の概念を組み込んだコンピューター言語
computer language with facilities or notations applicable primarily to a single application area,主に単一のアプリケーション分野に適用できる機能または表記法を備えたコンピュータ言語
computer network located on a user's premises within a limited geographical area,限られた地理的領域内のユーザーの敷地内に設置されたコンピュータ ネットワーク
computer on which a program is intended to execute,プログラムを実行するコンピュータ
computer on which a program or file is installed,プログラムまたはファイルがインストールされているコンピュータ
computer operation that establishes or reestablishes a set of initial conditions to facilitate the execution of a computer program,コンピュータープログラムの実行を容易にするために一連の初期条件を確立または再確立するコンピューター操作
computer operation whose execution has no effect except to advance the instruction counter to the next instruction,命令カウンタを次の命令に進めること以外は実行に影響を与えないコンピュータ操作
computer program component,コンピュータプログラムのコンポーネント
computer program configuration item,コンピュータプログラムの構成項目
computer program construct in which one of two or more alternative sets of program statements is selected for execution,2 つ以上の代替プログラム ステートメントのセットのうち 1 つが実行のために選択されるコンピューター プログラム構造
"computer program constructed of a basic set of control structures, each having one entry and one exit",それぞれが 1 つの入口と 1 つの出口を持つ基本的な制御構造セットで構成されるコンピューター プログラム
computer program error that has not been purposely inserted as part of an error-seeding proces,エラーシーディングプロセスの一部として意図的に挿入されていないコンピュータープログラムエラー
computer program or routine that carries out some final processing step after the completion of the primary process,一次プロセスの完了後に何らかの最終処理ステップを実行するコンピュータプログラムまたはルーチン
computer program or routine that carries out some processing step prior to the primary process,一次プロセスの前に何らかの処理ステップを実行するコンピュータプログラムまたはルーチン
computer program or routine that processes source code and generates equivalent code that is acceptable to a compiler,ソースコードを処理し、コンパイラが受け入れられる同等のコードを生成するコンピュータプログラムまたはルーチン
computer program or routine that provides an interface between the user and a computer system or program,ユーザーとコンピュータシステムまたはプログラム間のインターフェースを提供するコンピュータプログラムまたはルーチン
computer program or subprogram in a form suitable for loading into main storage for execution by a computer; usually the output of a linkage editor,コンピュータによる実行のために主記憶装置にロードするのに適した形式のコンピュータプログラムまたはサブプログラム。通常はリンケージエディタの出力
computer program or subprogram that is the output of an assembler or compiler,アセンブラまたはコンパイラの出力であるコンピュータ プログラムまたはサブプログラム
"computer program segment that is maintained in auxiliary storage and loaded into main storage when needed, overwriting other segments not currently in use",補助記憶装置に保持され、必要に応じて主記憶装置にロードされ、現在使用されていない他のセグメントを上書きするコンピュータ プログラムのセグメント
computer program statement substituting for the body of a software module that is or will be defined elsewhere,他の場所で定義されている、または今後定義されるソフトウェアモジュールの本体を置き換えるコンピュータプログラムステートメント
computer program statement that assigns a value to a variable,変数に値を割り当てるコンピューター プログラムのステートメント
computer program statement that causes a jump,ジャンプを引き起こすコンピュータープログラムのステートメント
"computer program that controls a peripheral device and, sometimes, reformats data for transfer to and from the device",周辺機器を制御し、場合によっては機器との間で転送するデータを再フォーマットするコンピューター プログラム
"computer program that creates a single load module from two or more independently translated object modules or load modules by resolving cross-references among the modules and, possibly, by relocating element",モジュール間の相互参照を解決し、場合によっては要素を再配置することによって、2 つ以上の独立して変換されたオブジェクト モジュールまたはロード モジュールから単一のロード モジュールを作成するコンピュータ プログラム
computer program that has been purposely altered from the intended version to evaluate the ability of test cases to detect the alteration,変更を検出するテストケースの能力を評価するために、意図されたバージョンから意図的に変更されたコンピュータープログラム
computer program that is the output of an assembler or compiler,アセンブラまたはコンパイラの出力であるコンピュータプログラム
"computer program that must be compiled, assembled, or otherwise translated in order to be executed by a computer",コンピュータで実行するためにコンパイル、アセンブル、またはその他の方法で変換する必要があるコンピュータ プログラム
"computer program that reads machine code into main memory in preparation for execution and, in some cases, adjusts the addresses and links the modules",実行の準備としてマシンコードをメインメモリに読み込み、場合によってはアドレスを調整してモジュールをリンクするコンピュータプログラム
"computer program that reads one or more object modules into main memory in preparation for execution, creates a single load module by resolving cross-references among the separate modules, and, in some cases, adjusts the addresses to reflect the storage locations into which the code has been loaded",実行の準備として 1 つまたは複数のオブジェクト モジュールをメイン メモリに読み取り、個別のモジュール間の相互参照を解決して単一のロード モジュールを作成し、場合によっては、コードがロードされた記憶域の場所を反映するようにアドレスを調整するコンピューター プログラム
computer program that transforms a sequence of statements expressed in one language into an equivalent sequence of statements expressed in another language,ある言語で表現された一連のステートメントを、別の言語で表現された同等の一連のステートメントに変換するコンピューター プログラム
computer program that translates and executes each statement or construct of a computer program before translating and executing the next,次の文を翻訳して実行する前に、コンピュータ プログラムの各ステートメントまたは構成を翻訳して実行するコンピュータ プログラム。
computer program that translates microprograms from symbolic form to binary form,マイクロプログラムを記号形式からバイナリ形式に変換するコンピュータ プログラム
computer program that translates programs expressed in a high-order language into their machine language equivalents,高級言語で表現されたプログラムを同等の機械語に翻訳するコンピュータープログラム
computer program that translates programs expressed in assembly language into their machine language equivalents,アセンブリ言語で表現されたプログラムを同等の機械語に翻訳するコンピュータプログラム
"computer program that translates, interprets, or performs other tasks required to process statements expressed in a given language",特定の言語で表現されたステートメントを処理するために必要な翻訳、解釈、またはその他のタスクを実行するコンピューター プログラム
"computer program used in the development, testing, analysis, or maintenance of a program or its documentation",プログラムまたはその文書の開発、テスト、分析、保守に使用されるコンピュータ プログラム
"computer program, often part of a word processing system, that allows a user to enter, alter, and view text",ユーザーがテキストを入力、変更、表示できるようにするコンピューター プログラム。多くの場合ワードプロセッサ システムの一部です。
"computer program, usually part of an operating system, that controls the execution of other computer programs and regulates the flow of work in a computer system",他のコンピューター プログラムの実行を制御し、コンピューター システム内の作業の流れを調整するコンピューター プログラム。通常はオペレーティング システムの一部です。
"computer program, usually part of an operating system, that schedules, initiates, and terminates jobs",ジョブをスケジュール、開始、終了するコンピュータ プログラム。通常はオペレーティング システムの一部です。
computer programming language used to express the parameters of a problem rather than the steps in a solution.,解決策の手順ではなく、問題のパラメーターを表現するために使用されるコンピューター プログラミング言語。
computer programming language used to express the sequence of operations to be performed by a computer.,コンピュータによって実行される一連の操作を表現するために使用されるコンピュータ プログラミング言語。
computer programming using macros and macroinstructions,マクロとマクロ命令を使用したコンピュータ プログラミング
"computer programs and data files built to support software development and testing, but not intended to be included in the final product",ソフトウェア開発とテストをサポートするために構築されたコンピューター プログラムとデータ ファイルですが、最終製品に含まれることを意図したものではありません。
"computer programs, procedures and possibly associated documentation and data pertaining to the operation of a computer system",コンピュータプログラム、手順、およびコンピュータシステムの動作に関連する可能性のある関連文書およびデータ
computer resource allocation technique in which shared resources (especially data) are protected by permitting access by only one device or process at a time,一度に 1 つのデバイスまたはプロセスのみによるアクセスを許可することで共有リソース (特にデータ) を保護するコンピューター リソース割り当て技術
"computer resource allocation technique in which the resources assigned to a program vary during program execution, based on current need",プログラムに割り当てられるリソースを、現在のニーズに基づいてプログラムの実行中に変更するコンピュータ リソース割り当て手法
computer software component,コンピュータのソフトウェアコンポーネント
computer software configuration item,コンピュータソフトウェアの構成項目
computer system controlled by software.,ソフトウェアによって制御されるコンピュータ システム。
computer system that is part of a larger system and performs some of the requirements of that system,より大きなシステムの一部であり、そのシステムの要件の一部を実行するコンピュータ システム
computer system that provides for expertly solving problems in a given field or application area by drawing inferences from a knowledge base developed from human expertise,人間の専門知識から開発された知識ベースから推論を導き出すことによって、特定の分野または応用分野の問題を専門的に解決できるコンピューター システム
computer that integrates analog computer components and digital computer components by interconnection of digital-to-analog converters and analog-to-digital converters,デジタル/アナログコンバーターとアナログ/デジタルコンバーターを相互接続することにより、アナログコンピューターコンポーネントとデジタルコンピューターコンポーネントを統合したコンピューター
"computer that is controlled by internally stored programs and that is capable of using common storage for all or part of a program and also for all or part of the data necessary for the execution of the programs; executing user written or user-designated programs; performing user-designated manipulation of digitally represented discret data, including arithmetic operations and logic operations; and executing programs that modify themselves during their execution",内部に格納されたプログラムによって制御され、プログラムの全部または一部、およびプログラムの実行に必要なデータの全部または一部に共通の記憶域を使用できるコンピュータ。ユーザーが作成したプログラムまたはユーザーが指定したプログラムを実行する。算術演算や論理演算を含む、デジタル表現された離散データのユーザー指定の操作を実行します。実行中に自身を変更するプログラムの実行
computer used to develop software intended for another computer,別のコンピュータ向けのソフトウェアを開発するために使用されるコンピュータ
computer used to emulate another computer,別のコンピュータをエミュレートするために使用されるコンピュータ
"computer whose operations are analogous to the behavior of another system and that accepts, processes, and produces analog data",動作が別のシステムの動作に類似しており、アナログ データを受け入れ、処理し、生成するコンピュータ
computer word that contains information specifying the current status of a computer program,コンピュータプログラムの現在の状態を特定する情報を含むコンピュータワード
computer-based tool used by a developer or maintainer organization for creating and evolving dynamic system,開発者または保守者組織が動的システムを作成および進化させるために使用するコンピュータベースのツール
computer-generated list that identifies the location or size of all or selected parts of memory-resident code o data,メモリ常駐コードまたはデータのすべてまたは選択された部分の位置またはサイズを特定するコンピュータ生成のリスト
computing (software) application (existing or to be created) about which descriptive information is being developed in a computing system tool or a Computer-Aided Software Engineering (CASE) tool,コンピューティング システム ツールまたはコンピュータ支援ソフトウェア エンジニアリング (CASE) ツールで記述情報が開発されているコンピューティング (ソフトウェア) アプリケーション (既存または作成予定)
computing system (existing or to be created) about which descriptive information is being developed in a computing system or CASE tool,コンピューティング システムまたは CASE ツールで開発されている記述情報に関するコンピューティング システム (既存または作成予定)
concept of operations,運営の概念
"concept space, i.e., an area in which a concept has an agreed to meaning and one or more agreed-to names that are used for the concept",概念空間、つまり、概念が合意された意味と、その概念に使用される 1 つ以上の合意された名前を持つ領域
"concept that access to the names, meanings, and values of the responsibilities of a class is entirely separated from access to their realization",クラスの責任の名前、意味、および値へのアクセスが、その実現へのアクセスから完全に分離されているという概念
"concept, such as the abstract idea, image, underlying theme, or subject matter, that one wishes to measure using process assessments",プロセス評価を使用して測定したい、抽象的なアイデア、イメージ、根底にあるテーマ、主題などの概念
"conceptual framework that can be applied to the organizational test process, the test management process, or the dynamic test process to facilitate testing",テストを容易にするために、組織のテスト プロセス、テスト管理プロセス、または動的テスト プロセスに適用できる概念的なフレームワーク
conceptual interface between the software being measured and its functional users,測定対象のソフトウェアとその機能ユーザーの間の概念的なインターフェイス
conceptual interface between the software under study and its users,研究対象のソフトウェアとそのユーザーの間の概念的なインターフェイス
concrete or abstract thing of interest,興味のある具体的または抽象的なもの
concrete representation of a model in some notation,何らかの表記法によるモデルの具体的な表現
"Concretely, a set of model pages that include at least an A-0 context diagram and an A0 decomposition diagram, a glossary or specific glossary pages, one or more text pages to accompany each diagram, and FEO pages and model pages of other types as needed.",具体的には、少なくとも A-0 コンテキスト図と A0 分解図、用語集または特定の用語集ページ、各図に付随する 1 つ以上のテキスト ページ、および必要に応じて FEO ページと他のタイプのモデル ページを含むモデル ページのセット。
concurrent object with its own thread of control,独自の制御スレッドを持つ同時オブジェクト
concurrent task that hides the characteristics of and interfaces to an external I/O device,外部 I/O デバイスの特性を隠し、外部 I/O デバイスとインターフェイスする同時タスク
condition in which one fault prevents the detection of another,ある障害によって別の障害が検出されなくなる状態
"condition or capability that must be met or possessed by a system, system component, product, or service to satisfy an agreement, standard, specification, or other formally imposed documents",契約、標準、仕様、またはその他の正式に課された文書を満たすために、システム、システムコンポーネント、製品、またはサービスが満たさなければならない、または所有しなければならない条件または機能。
"condition or mode of existence that a system, component, or simulation can be in",システム、コンポーネント、またはシミュレーションが存在し得る状態または存在様式
"condition that characterizes the behavior of a function, subfunction or element at a point in time",ある時点での関数、サブ関数、または要素の動作を特徴付ける条件
"condition that deviates from expectations, based on requirements specifications, design documents, user documents, or standards, or from someone's perceptions or experiences",要件仕様、設計文書、ユーザー文書、標準に基づいた、または誰かの認識や経験に基づいた、期待から逸脱した状態
condition that is guaranteed to be true after a successful property request,プロパティリクエストが成功した後に真であることが保証される条件
condition that is required to be true before making a property request,プロパティリクエストを行う前に true である必要がある条件
condition that occurs when a predetermined amount of time elapses without the occurrence of an expected event2. to experience the condition in (1),予期したイベントが発生しないまま、所定の時間が経過したときに発生する状態2。 (1)の状態を経験する
condition that triggers some stakeholder action,何らかの利害関係者の行動を引き起こす条件
condition when the attributes that describe the foreign keys are the same attributes (and attribute values) as those describing the associated candidate key,外部キーを記述する属性が、関連する候補キーを記述する属性 (および属性値) と同じである場合の条件
"conditional jump to an exception or interrupt handling routine, often automatically activated by hardware, with the location from which the jump occurred recorded",例外または割り込み処理ルーチンへの条件付きジャンプ。多くの場合、ハードウェアによって自動的にアクティブ化され、ジャンプが発生した位置が記録されます。
conditions and procedures under which the measurement value is obtained,測定値を取得する条件と手順
conditions under which the testing activities are considered complete,テスト活動が完了したとみなされる条件
"conditions, not under the immediate control of the team, that influence, constrain or direct the project, program or portfolio",チームの直接の制御下にない、プロジェクト、プログラム、またはポートフォリオに影響を与え、制約し、または指示する条件
conduct benchmarking activity,ベンチマーク活動を実施する
"Configuration baselines, plus approved changes from those baselines, constitute the current configuration information.",構成ベースラインと、それらのベースラインからの承認された変更が、現在の構成情報を構成します。
configuration board,構成ボード
configuration control board,構成制御ボード
"configuration information formally designated at a specific time during the life of a product, product component, service, or service component",製品、製品コンポーネント、サービス、またはサービス コンポーネントの存続期間中の特定の時点で正式に指定された構成情報
configuration item,構成アイテム
"Configuration items can vary widely in complexity, size and type, ranging from an entire system including all hardware, software and documentation, to a single module or a minor hardware component.",構成アイテムは、すべてのハードウェア、ソフトウェア、ドキュメントを含むシステム全体から、単一のモジュールまたはマイナーなハードウェア コンポーネントに至るまで、複雑さ、サイズ、タイプが大きく異なります。
configuration management,構成管理
configuration management database,構成管理データベース
configuration management plan,構成管理計画
configuration management system,構成管理システム
"configuration of basic engineering objects forming a single unit for the purposes of deactivation, checkpointing, reactivation, recovery and migration",非アクティブ化、チェックポイント設定、再アクティブ化、リカバリ、移行を目的とした単一ユニットを形成する基本的なエンジニアリング オブジェクトの構成
"configuration of connections between electronic components, typically using metallic paths etched on a non conducting substrate (board)",電子コンポーネント間の接続の構成。通常は非導電性基板 (ボード) 上にエッチングされた金属パスを使用します。
configuration of engineering objects forming a single unit for the purpose of encapsulation of processing and storage,処理と保存をカプセル化する目的で単一のユニットを形成するエンジニアリング オブジェクトの構成
"configuration of engineering objects forming a single unit for the purpose of location in space, and which embodies a set of processing, storage and communication functions",空間内の位置を特定する目的で単一のユニットを形成し、一連の処理、保存、および通信機能を具体化するエンジニアリングオブジェクトの構成。
configuration of hardware and software in which the software operates,ソフトウェアが動作するハードウェアおよびソフトウェアの構成
configuration of objects formed to meet an objective,目的を満たすために形成されたオブジェクトの構成
"configuration of stubs, binders, protocol objects and interceptors providing a binding between a set of interfaces to basic engineering objects, through which interaction can occur",スタブ、バインダー、プロトコル オブジェクト、およびインターセプターの構成。一連のインターフェイスと基本的なエンジニアリング オブジェクト間のバインディングを提供し、それを通じて相互作用が発生します。
configuration status accounting,構成ステータスのアカウンティング
confirmation by examination that requirements (individually and as a set) are well formed,要件（個別およびセットとして）が適切に形成されていることを検査によって確認する
confirmation by examination that requirements (individually and as a set) define the right system as intended by the stakeholders,要件（個別およびセット）が利害関係者の意図どおりに適切なシステムを定義していることを検査によって確認する
"confirmation, through the provision of objective evidence, that specified requirements have been fulfilled",客観的証拠の提供による、指定された要件が満たされていることの確認
"confirmation, through the provision of objective evidence, that the requirements for a specific intended use or application have been fulfilled",客観的な証拠の提供による、特定の使用目的または用途の要件が満たされていることの確認
"connection between a superclass and one of its more specific, immediate subclasses",スーパークラスと、そのより具体的な直接のサブクラスの 1 つとの間の接続
connection for bidirectional serial data communication,双方向シリアルデータ通信用接続
connection to serve multiple serial channels,複数のシリアルチャネルを提供するための接続
"connector from the thin side of an integrated circuit package which extends out, down, and then out horizontally to allow it to be connected within a device",デバイス内で接続できるように、集積回路パッケージの薄い側から外側、下、そして水平方向に伸びるコネクタ。
consequence associated with a benefit or gain or avoiding an adverse consequence,利益や利益、あるいは悪影響の回避に伴う結果
consequence that results in a specified level of loss,指定されたレベルの損失をもたらす結果
consideration of the relative differences between alternatives,選択肢間の相対的な違いの考慮
consistent time span used to compare the cost of alternatives,代替品のコストを比較するために使用される一貫した期間
"constant, variable, or expression that is used to pass values between software modules",ソフトウェア モジュール間で値を渡すために使用される定数、変数、または式
"constant, variable, or expression used in a call to a software module to specify data or program elements to be passed to that module",ソフトウェア モジュールへの呼び出しで使用され、そのモジュールに渡されるデータまたはプログラム要素を指定する定数、変数、または式
constellation of organizations that have business relationships with one another,相互にビジネス関係を持つ組織の集合体
constraint between two related entities indicating that no instance of one can exist without being related to an instance of the other,2 つの関連するエンティティ間の制約。一方のインスタンスは他方のインスタンスに関連付けられずに存在できないことを示します。
constraint on a system specification,システム仕様上の制約
"constraint on a system specification foreseen at design time, but whose detail is determined subsequent to the original design, and capable of being modified from time to time in order to manage the system in changing circumstances",設計時に予見されるシステム仕様に対する制約。ただし、その詳細は元の設計の後に決定され、変化する状況でシステムを管理するために随時変更できるもの
constraint on the number of entity instances that are related to the subject entity through a relationship,関係を通じて対象エンティティに関連付けられるエンティティ インスタンスの数に対する制約
"constraint relationships between a variant and a variation point, between two variants, and between two variation points",バリアントと変動点の間、2 つのバリアント間、および 2 つの変動点間の制約関係
constraint stating that an instance of one entity cannot exist unless an instance of another related entity also exists,あるエンティティのインスタンスは、別の関連エンティティのインスタンスも存在しない限り存在できないことを示す制約
constraint stating that no two distinct instances of a class agree on the values of all the properties that are named in the uniqueness constraint,クラスの 2 つの異なるインスタンスが一意性制約で指定されたすべてのプロパティの値に一致しないことを示す制約
constraint that involves two or more relationship paths to the same ancestor class and states either that a descendent instance must be related to the same ancestor instance through each path or that it must be related to a different ancestor instance through each path,同じ祖先クラスへの 2 つ以上の関係パスが関係し、子孫インスタンスが各パスを通じて同じ祖先インスタンスに関連する必要があるか、または各パスを通じて異なる祖先インスタンスに関連する必要があるかを示す制約。
"constraint that is specific to a particular model, rather than being inherent in some modeling construct",何らかのモデリング構造に固有のものではなく、特定のモデルに固有の制約
constraint that limits the number of instances that can be associated with each other in a relationship,関係内で相互に関連付けることができるインスタンスの数を制限する制約
constraint that limits the number of members in a collection,コレクション内のメンバーの数を制限する制約
constraint that must be true when a use case has ended3. predicate that a specification requires to be true immediately after the occurrence of an action,ユースケースが終了したときに true でなければならない制約 3.仕様がアクションの発生直後に真である必要があるという述語
constraint that must be true when a use case is invoked,ユースケースが呼び出されるときに true でなければならない制約
constraint that specifies the set of all acceptable instance values for a value class,値クラスの許容可能なすべてのインスタンス値のセットを指定する制約
constraint that specifies the set of all acceptable instance values for a value class where the instance values are constrained by a lower and/or upper boundary,インスタンス値が下限および/または上限によって制約される、値クラスの許容可能なすべてのインスタンス値のセットを指定する制約
construct that consists of a number of unidimensional constructs,多数の一次元構成要素から構成される構成要素
construct that is formed from its observed measures in the relationship between a construct and its measures,構成要素とその尺度の間の関係において、観察された尺度から形成される構成要素
construct that is viewed as the cause of measures in the relationship between a construct and its measures,構成概念とその対策の関係において、対策の原因とみなされる構成概念
constructing and issuing a request whose signature is possibly not known until run-time,実行時まで署名が不明である可能性のあるリクエストを構築して発行する
construction,工事
"consumer, client, end-user, retailer, receiver or product or service from an internal process, an organization within the same company as the developing organization (e.g., System Management), a company or entity external to the developing company, a higher -level project, or some combination of thes",消費者、クライアント、エンドユーザー、小売業者、内部プロセスからの受信者または製品またはサービス、開発組織と同じ社内の組織（システム管理など）、開発会社の外部の企業または団体、より高いレベルのプロジェクト、またはそれらの組み合わせ
consumption against a software entitlement measured as defined by the terms and conditions of that entitlement,ソフトウェア使用権に対する使用量は、その使用権の契約条件で定義されているように測定されます。
"container for a declared set of computational component types that has a management interface at which it can be requested to create a computational component of one of the types and add it to the container's content, delete a computational component from the container, list the computational components it currently contains, and list the computational factories it provides",宣言された計算コンポーネント タイプのセットのコンテナ。タイプの 1 つの計算コンポーネントを作成してコンテナのコンテンツに追加したり、コンテナから計算コンポーネントを削除したり、現在含まれている計算コンポーネントを一覧表示したり、コンテナが提供する計算コンポーネントを一覧表示したりすることを要求できる管理インターフェイスを備えています。
container-managed transaction,コンテナ管理のトランザクション
Containers provide the run-time execution environment for CORBA component implementations,コンテナは、CORBA コンポーネント実装のランタイム実行環境を提供します。
contains current status and location information,現在のステータスと位置情報が含まれています
"Content management for user documentation means management of help topics, explanations of concepts, troubleshooting procedures, compliance statements, and variables such as the names and host platforms of software products, with metadata tags that are applied to format output.",ユーザー ドキュメントのコンテンツ管理とは、ヘルプ トピック、概念の説明、トラブルシューティング手順、コンプライアンス ステートメント、およびソフトウェア製品の名前やホスト プラットフォームなどの変数を、フォーマット出力に適用されるメタデータ タグを使用して管理することを意味します。
content of data item,データ項目の内容
"content provider, system manager, administrator, security manager, maintainer, installer",コンテンツプロバイダー、システムマネージャー、管理者、セキュリティマネージャー、メンテナー、インストーラー
content that is preserved as a record and not expected to change,記録として保存され、変更されることが予想されないコンテンツ
"Contents typically include memos, plans, technical reports, and related items.",通常、コンテンツにはメモ、計画、技術レポート、および関連項目が含まれます。
"Contents typically include the requirements, design, technical reports, code listings, test plans, test results, problem reports, schedules, and notes for the units.",通常、コンテンツには、要件、設計、技術レポート、コード リスト、テスト計画、テスト結果、問題レポート、スケジュール、ユニットのメモが含まれます。
"Context completeness can be specified or measured either as the degree to which a product can be used by specified users to achieve specified goals with effectiveness, efficiency, freedom from risk and satisfaction in all the intended contexts of use, or by the presence of product properties that support use in all the intended contexts of use.",コンテキストの完全性は、指定されたユーザーが製品を使用して、有効性、効率性、リスクの回避、および意図されたすべての使用状況での満足度を伴って指定された目標を達成できる度合いとして、または意図されたすべての使用状況での使用をサポートする製品特性の存在によって指定または測定できます。
Context of use includes direct use or use supported by assistive technologies [SOURCE: ISO 9241-11:1998],使用のコンテキストには、直接使用または支援技術によってサポートされる使用が含まれます [出典: ISO 9241-11:1998]
Context of use is relevant to both quality in use and some product quality (sub)characteristics (where it is referred to as specified conditions).,使用のコンテキストは、使用中の品質と一部の製品品質 (サブ) 特性 (指定された条件と呼ばれる) の両方に関連します。
continued provision of services and material necessary for the use and improvement of an implemented system,導入されたシステムの使用と改善に必要なサービスとマテリアルの継続的な提供
continuing professional development,継続的な専門能力開発
"continuous process for systematically identifying, analyzing, treating, and monitoring risk throughout the life cycle of a product or service",製品またはサービスのライフサイクル全体を通じてリスクを体系的に特定、分析、処理、監視するための継続的なプロセス
continuously upgrading a system to enable it to cope with current and future changes,現在および将来の変化に対応できるようにシステムを継続的にアップグレードする
"contract between an object and its environment, including Quality of Service constraints, usage and management constraints",サービス品質の制約、使用および管理の制約を含む、オブジェクトとその環境の間の契約
contract data requirements list,契約データ要件リスト
contract in which the acquirer reimburses the supplier's allowable costs for performing the contract work and also pays a fee,取得者が契約作業を実行するためにサプライヤーに許容されるコストを払い戻し、手数料も支払う契約。
contract work breakdown structure,契約作業の内訳構造
contractual context resulting from a given establishing behavior,特定の確立された行動から生じる契約上の文脈
"control and protection of software and related assets within an organization, and control and protection of information about related assets which are needed in order to control and protect software assets.",組織内のソフトウェアおよび関連資産の管理と保護、およびソフトウェア資産の管理と保護に必要な関連資産に関する情報の管理と保護。
"control flow diagram consisting of a rectangle that is subdivided to show sequential steps, if-then-els conditions, repetition, and case conditions",一連のステップ、if-then-els 条件、繰り返し、およびケース条件を示すために細分化された長方形で構成される制御フロー図
"control flow diagram in which suitably annotated geometrical figures are used to represent operations, data, or equipment, and arrows are used to indicate the sequential flow from one to another",適切に注釈が付けられた幾何学的図形が操作、データ、または機器を表すために使用され、矢印が一方から他方への一連の流れを示すために使用される制御フロー図
control of electrical signals with various cycle and duty ratios,さまざまな周期とデューティ比で電気信号を制御
control of task activation by means of signals,信号によるタスク起動の制御
"control of units of information with their metadata, to allow selective reuse in documents or information items with variable structures and formats",情報の単位をメタデータで制御し、さまざまな構造と形式を持つドキュメントまたは情報アイテムで選択的に再利用できるようにする
controlled and coordinated sequence of actions wherein software development passes from the organization performing initial software development to the organization performing software maintenance,ソフトウェア開発が初期ソフトウェア開発を実行する組織からソフトウェア保守を実行する組織に移行する、制御され調整された一連のアクション
"controlled collection of SCIs to aid in development, operation and maintenance",開発、運用、保守を支援するための SCI の管理された収集
"controlled collection of software and related documentation designed to aid in software development, use, or maintenance",ソフトウェアの開発、使用、保守を支援するために設計されたソフトウェアおよび関連文書の管理されたコレクション
controller area network,コントローラエリアネットワーク
conventions for a type of modeling,モデリングの種類の規則
"conventions, principles and practices for the description of architectures established within a specific domain of application or community of stakeholders",アプリケーションの特定のドメインまたは利害関係者のコミュニティ内で確立されたアーキテクチャを記述するための慣例、原則、実践
conversation between the user and the application needed to execute a transaction,トランザクションを実行するために必要なユーザーとアプリケーション間の会話
Conversion Code Sets,変換コードセット
Conversion functionality exists only during the development or enhancement of an application.,変換機能は、アプリケーションの開発または拡張中にのみ存在します。
"conversion of processes or equipment to automatic operation, or the results of the conversion",プロセスまたは装置の自動運転への変換、または変換の結果
"converting a program from FORTRAN to Ada, converting a program that runs on one computer to run on another",プログラムを FORTRAN から Ada に変換し、あるコンピュータで実行されるプログラムを別のコンピュータで実行できるように変換します。
cooperative exchange of requests among classes and instances in order to achieve some goal,何らかの目標を達成するために、クラスとインスタンス間で協力してリクエストを交換すること
coordinated activities of an organization to realize value from assets,資産から価値を実現するための組織の調整された活動
coordinated activities to direct and control an organization with regard to quality,品質に関して組織を指揮し、管理するための調整された活動
coordinated activities to direct and control an organization with regard to software quality,ソフトウェアの品質に関して組織を指揮し、管理するための調整された活動
coordinated activities to direct and control the configuration,構成を指示および制御するための調整されたアクティビティ
Coordinated Universal Time,協定世界時
"copy of the software definitive master version, for the purposes of installation onto other hardware, which resides, for example, on a server or on physical media such as CDs",他のハードウェアへのインストールを目的とした、ソフトウェアの最終マスター バージョンのコピー。たとえば、サーバー上や CD などの物理メディア上に存在します。
copying a software product from one medium to another,ソフトウェア製品をある媒体から別の媒体にコピーする
CORBA Component Model,CORBAコンポーネントモデル
"CORBA component with behavior, no state, and no identity",動作あり、状態なし、ID なしの CORBA コンポーネント
"CORBA component with behavior, transient state, and identity that is not persistent",動作、一時的な状態、および永続的ではない ID を持つ CORBA コンポーネント
"CORBA component with persistent state, identity which is architecturally visible to clients through a primary key, and behavior, which can be transactional",永続的な状態を備えた CORBA コンポーネント、主キーを介してクライアントにアーキテクチャ的に認識できる ID、およびトランザクションとなる可能性のある動作
"CORBA component with persistent state, which is not visible to the client, persistent identity, and behavior, which can be transactional",クライアントには見えない永続的な状態、永続的な ID、およびトランザクションとなる可能性のある動作を備えた CORBA コンポーネント
core architecture that captures the high-level design of a software and systems product line including the architectural structure and texture (e.g. common rules and constraints) that constrains all member products within a software and systems product line,ソフトウェアおよびシステム製品ライン内のすべてのメンバー製品を制約するアーキテクチャ構造とテクスチャ (共通ルールや制約など) を含む、ソフトウェアおよびシステム製品ラインのハイレベルな設計をキャプチャするコア アーキテクチャ。
"correction of defects that have resulted from errors in external design, internal design, or code",外部設計、内部設計、またはコードのエラーに起因する欠陥の修正
correspondence in the form of messages transmitted over a computer network,コンピュータネットワークを介して送信されるメッセージの形での通信
COSMIC function point,COSMICファンクションポイント
cost accounting method that allocates overhead costs based on specific production activities rather than allocating from a single overhead pool,単一の間接費プールから割り当てるのではなく、特定の生産活動に基づいて間接費を割り当てる原価計算方法
cost analysis requirements description,コスト分析要件の説明
cost of quality,品質のコスト
cost performance index,コストパフォーマンス指標
cost plus award fee,費用プラス特典料金
cost plus fixed fee,コストプラス固定料金
cost plus incentive fee,コストとインセンティブ料金を加えたもの
cost plus percentage of cost,コストにコストの割合を加えたもの
cost that is irrecoverable by future actions,将来の行動では回収できないコスト
cost that is not dependent on the rate of production,生産速度に依存しないコスト
cost variance,コスト差異
cost-plus-f,コストプラスファ
"cost, such as the cost of material, which is directly dependent on the rate of production",生産速度に直接依存する材料費などのコスト
costs associated with using an asset as well as costs of keeping it in a usable condition,資産の使用に関連するコストと、それを使用可能な状態に維持するためのコスト
COTS software product designed and sold for end users to carry out identified functions; the software and its associated documentation are packaged for sale as a unit,特定の機能を実行するためにエンドユーザー向けに設計および販売される COTS ソフトウェア製品。ソフトウェアとその関連ドキュメントは、ユニットとして販売用にパッケージ化されています。
"COTS software product includes the product description (including all cover information, data sheet, web site information, etc.), the user documentation (necessary to install and use the software), the software contained on a computer sensible media (disk, CD-ROM, internet downloadable, etc.). Software is mainly composed of programs and data. This definition applies also to product descriptions, user documentation and software which are produced and supported as separate manufactured goods, but for which typical commercial fees and licensing considerations do not apply.",COTS ソフトウェア製品には、製品説明 (すべてのカバー情報、データ シート、Web サイト情報などを含む)、ユーザー ドキュメント (ソフトウェアのインストールおよび使用に必要)、コンピュータ可読メディア (ディスク、CD-ROM、インターネットでダウンロード可能なものなど) に含まれるソフトウェアが含まれます。ソフトウェアは主にプログラムとデータで構成されています。この定義は、別個の製品として作成およびサポートされる製品説明、ユーザー ドキュメント、およびソフトウェアにも適用されますが、通常の商用料金やライセンスに関する考慮事項は適用されません。
count of source statements that were created specifically for the software product,ソフトウェア製品専用に作成されたソース ステートメントの数
count that measures a project that realizes modifications to an existing application,既存のアプリケーションの変更を実現するプロジェクトを測定する数
Counting Practices International Standard,計数慣行の国際標準
course of action taken in response to a risk factor,危険因子に応じて取られる一連の行動
course of action that removes a risk factor from further consideration,さらなる検討からリスク要因を取り除く一連の行動
course of developmental changes through which a system passes from its conception to the termination of its use,システムがその構想から使用終了までに通過する発展的変化の過程
"create, read, update, delete",作成、読み取り、更新、削除
creating a checkpoint,チェックポイントの作成
creation of a national or specific regional version of a product,製品の国または特定の地域バージョンの作成
"crime committed through the use, modification, or destruction of hardware, software, or data",ハードウェア、ソフトウェア、またはデータの使用、変更、または破壊によって犯された犯罪
criteria that a system or component must meet in order to pass a given test,システムまたはコンポーネントが特定のテストに合格するために満たさなければならない基準
"criteria that a system or component must satisfy in order to be accepted by a user, customer, or other authorized entity",システムまたはコンポーネントがユーザー、顧客、またはその他の認可されたエンティティによって受け入れられるために満たさなければならない基準
criteria used to (temporarily) stop all or a portion of the testing activities,テスト活動のすべてまたは一部を（一時的に）停止するために使用される基準
critical application item,重要なアプリケーション項目
critical design review,クリティカルな設計レビュー
critical path method,クリティカルパス方式
critical program information,重要なプログラム情報
"Critical quality characteristics commonly include those related to health, safety, security, assurance, reliability, availability and supportability.",重要な品質特性には通常、健康、安全、セキュリティ、保証、信頼性、可用性、およびサポート性に関連する特性が含まれます。
"critical state of affairs in which a decisive, probably undesirable outcome is impending",おそらく望ましくない決定的な結果が差し迫っている危機的な状況
critical success factor,重要な成功要因
cumulative flow diagram,累積フロー図
"current approved or conditionally approved technical documentation defining a configuration item during the production, operation, maintenance, and logistic support phases of its life cycle",ライフサイクルの生産、運用、保守、ロジスティックサポートの段階で構成アイテムを定義する、現在承認されている、または条件付きで承認された技術文書
"current approved technical documentation for a configuration item as set forth in specifications, drawings, associated lists, and documents referenced therein",仕様、図面、関連リスト、およびその中で参照されている文書に記載されている、構成アイテムに関する現在承認されている技術文書
current project risk information relating to an individual risk,個々のリスクに関連する現在のプロジェクトのリスク情報
"customer liaison, project cost accounting, project management",顧客対応、プロジェクト原価計算、プロジェクト管理
"customer-facing support group for centralized resolution of incidents, change requests, and complaints concerning a service",サービスに関するインシデント、変更リクエスト、苦情を一元的に解決するための顧客対応サポート グループ
"Customer, Invoice (classes), Name, Age (attributes), High-Level Class Model number 17 (a model), System Requirements Description (a document), Coding Cycle number 2, Coding Cycle number 3 (tasks)",顧客、請求書 (クラス)、名前、年齢 (属性)、上位クラス モデル番号 17 (モデル)、システム要件の説明 (文書)、コーディング サイクル番号 2、コーディング サイクル番号 3 (タスク)
"Cyclomatic complexity has the minimum value of one, but each increment represents an additional path. The value of zero is not possible.",循環的複雑さの最小値は 1 ですが、増分ごとに追加のパスを表します。値をゼロにすることはできません。
data buffer register,データバッファレジスタ
data communication path in a computer or system,コンピュータまたはシステム内のデータ通信パス
data contained in the address field of a computer instruction,コンピュータ命令のアドレスフィールドに含まれるデータ
data created as a result of processing that involves steps other than or in addition to direct retrieval and validation of information from data functions,データ関数からの情報の直接的な取得と検証以外の、またはそれに加えて行われるステップを伴う処理の結果として作成されたデータ
"data created or selected to satisfy the input requirements for executing one or more test cases, which can be defined in the test plan, test case, or test procedure",1 つ以上のテスト ケースを実行するための入力要件を満たすために作成または選択されたデータ。テスト計画、テスト ケース、またはテスト手順で定義できます。
"data definition and subsequent computation data use, where the data use uses the value defined in the data definition",データ定義とその後の計算データの使用。データの使用ではデータ定義で定義された値が使用されます。
"data definition and subsequent data use, where the data use uses the value defined in the data definition",データ定義とその後のデータ使用。データ使用ではデータ定義で定義された値が使用されます。
"data definition and subsequent predicate data use, where the data use uses the value defined in the data definition",データ定義とその後の述語のデータ使用。データ使用ではデータ定義で定義された値が使用されます。
"data definition and subsequent predicate or computational data use, where the data use uses the value defined in the data definition",データ定義とその後の述語または計算データの使用。データの使用ではデータ定義で定義された値が使用されます。
data element type,データ要素のタイプ
data encoded on a diskette,フロッピーディスク上にエンコードされたデータ
data entered into an information processing system or any of its parts for storage or processing,保存または処理のために情報処理システムまたはその一部に入力されるデータ
data flow diagram,データフロー図
"data flow, data structure, or other diagram in which entities are depicted with circles (bubbles) and relationships are represented by links drawn between the circles",データ フロー、データ構造、またはエンティティが円 (バブル) で描かれ、関係が円の間に描かれたリンクで表されるその他の図
data function read or maintained by a transactional function,トランザクション関数によって読み取られるか維持されるデータ関数
data held by an organization that describes the entities that are both independent and fundamental for an enterprise that it needs to reference in order to perform its transaction,組織が保持するデータ。取引を実行するために参照する必要がある、企業にとって独立的かつ基本的なエンティティを記述します。
"data in the form of characters, symbols, words, phrases, paragraphs, sentences, tables, or other character arrangements, intended to convey a meaning, and whose interpretation is essentially based upon the reader's knowledge of some natural language or artificial language",意味を伝えることを目的とした、文字、記号、単語、語句、段落、文、表、またはその他の文字配列の形式のデータであり、その解釈は本質的に何らかの自然言語または人工言語に関する読者の知識に基づいています。
data item associated with a place and chosen from the place's type,場所に関連付けられ、場所のタイプから選択されたデータ項目
Data item is a physical object 'container' of data values.,データ項目は、データ値の物理オブジェクト「コンテナ」です。
data item that specifies the location of another data item,別のデータ項目の場所を指定するデータ項目
data item whose value can change during program execution,プログラム実行中に値が変化する可能性があるデータ項目
data medium originally consisting of a flat circular plate that is rotated in order to read or write data on one or both sides,データ媒体はもともと平らな円形のプレートで構成されており、片面または両面でデータを読み書きするために回転させられます。
data movement that moves a data group from a functional user across the boundary into the functional process where it is required,データ移動。データ グループを機能ユーザーから境界を越えて必要な機能プロセスに移動すること
data movement that moves a data group lying inside the functional process to persistent storage,機能プロセス内にあるデータ グループを永続ストレージに移動するデータ移動
data movement type that moves a data group from persistent storage within reach of the functional process which requires it,データ移動タイプ。データ グループを必要とする機能プロセスの範囲内にある永続ストレージからデータ グループを移動します。
data name that is reserved for a specific constant in a programming language,プログラミング言語の特定の定数用に予約されているデータ名
"data obtained from a survey carried out among the national bodies, data on work in other international organizations or data on the ""state of the art"" in relation to standards of national bodies on a particular subject",国家機関間で実施された調査から得られたデータ、他の国際機関での活動に関するデータ、または特定の主題に関する国家機関の基準に関する「最先端」のデータ
data processing,データ処理
data processing nodes and their interconnections for the purpose of data communication,データ通信を目的としたデータ処理ノードとその相互接続
"data processing operations on text, such as entering, editing, merging, retrieving, storing, displaying, or printing",テキストのデータ処理操作 (入力、編集、結合、取得、保存、表示、印刷など)
data processing system realizing a set of emulated users,エミュレートされたユーザーのセットを実現するデータ処理システム
data processing system that is ready to use when installed and supplied to the user in a ready-to-run condition possibly customized to a specific user or application,インストールされ、すぐに実行できる状態でユーザーに提供されると、すぐに使用できるデータ処理システム。特定のユーザーまたはアプリケーションに合わせてカスタマイズされる可能性があります。
"Data quality refers to data itself, such as data domain values and possible restrictions.",データ品質とは、データ ドメインの値や考えられる制限など、データ自体を指します。
data received from an external source,外部ソースから受信したデータ
"data storage entity or other record, or interface record to another software or system to which data is written in a BFC",データ ストレージ エンティティまたはその他のレコード、またはデータが BFC に書き込まれる別のソフトウェアまたはシステムへのインターフェイス レコード
"data storage entity or record, or interface record from another software or system containing data retrieved in a BFC",データ ストレージ エンティティまたはレコード、または BFC で取得されたデータを含む別のソフトウェアまたはシステムからのインターフェイス レコード
data store that contains the evaluation of the information products and the measurement process as well as any lessons learned during the measurement process,情報製品の評価と測定プロセス、および測定プロセス中に学んだ教訓を含むデータ ストア
data supporting the existence or verity of something.,何かの存在または真実性を裏付けるデータ。
data that arrives at specific time intervals,特定の時間間隔で到着するデータ
data that can be accessed by any routine within the module in which it is declared but not by routines in other modules,データが宣言されているモジュール内のルーチンからはアクセスできるが、他のモジュールのルーチンからはアクセスできないデータ
data that can be accessed by only one module or set of nested modules in a computer program,コンピューター プログラム内の 1 つのモジュールまたはネストされたモジュールのセットのみがアクセスできるデータ
data that can be accessed by two or more non-nested modules of computer program without being explicitly passed as parameters between the modules,モジュール間でパラメーターとして明示的に渡されることなく、コンピュータ プログラムの 2 つ以上の入れ子になっていないモジュールからアクセスできるデータ
data that can be accessed only within the routine in which it is declared,宣言されているルーチン内でのみアクセスできるデータ
data that can be derived,導き出せるデータ
data that defines an internal state of the test unit and is used to establish that state or compare with existing states.,テストユニットの内部状態を定義し、その状態を確立したり、既存の状態と比較したりするために使用されるデータ。
data that describe other data,他のデータを記述するデータ
"data that influences an elementary process by specifying what, when or how data is to be processed",データをいつ、何を、どのように処理するかを指定することによって基本プロセスに影響を与えるデータ
"data that select an operating mode, direct the sequential flow of a program, or otherwise directly influence the operation of software",動作モードを選択したり、プログラムの一連の流れを指示したり、ソフトウェアの動作に直接影響を与えるデータ
data that turns on or off one or more processes of an application or that influences the operation of a transaction,アプリケーションの 1 つ以上のプロセスをオンまたはオフにするデータ、またはトランザクションの動作に影響を与えるデータ
data transfer controller,データ転送コントローラ
data transmitted to an external destination,外部宛先に送信されるデータ
data type each of whose members is composed of multiple data items,各メンバーが複数のデータ項目で構成されるデータ型
"data type for which only the properties of the data and the operations to be performed on the data are specified, without concern for how the data will be represented or how the operations will be implemented",データの表現方法や操作の実装方法には関係なく、データのプロパティとデータに対して実行される操作のみが指定されるデータ型。
data type whose members and operations are taken from those of another data type according to some specified rule,指定されたルールに従って、メンバーと操作が別のデータ型のメンバーと操作から取得されるデータ型
data type whose members can assume any of a set of distinct values,メンバーが一連の個別の値のいずれかを想定できるデータ型
"data type whose members can assume only integer values and can be operated on only by integer arithmetic operations, such as addition, subtraction, and multiplication",メンバーが整数値のみを取ることができ、加算、減算、乗算などの整数算術演算によってのみ演算できるデータ型。
"data type whose members can assume only logical values (usually TRUE and FALSE) and can be operated on only by logical operators, such as and, OR, and NOT",メンバーが論理値 (通常は TRUE と FALSE) のみを取ることができ、and、OR、NOT などの論理演算子によってのみ演算できるデータ型。
"data type whose members can assume real numbers as values and can be operated on by real number arithmetic operations, such as addition, subtraction, multiplication, division, and square root",メンバーが値として実数を想定でき、加算、減算、乗算、除算、平方根などの実数算術演算によって演算できるデータ型。
"data type whose members can assume the values of specified characters and can be operated on by character operators, such as concatenation",メンバーが指定された文字の値を想定し、連結などの文字演算子で操作できるデータ型。
data type whose structure and possible values are defined but are not revealed to the user of the type,構造と取り得る値は定義されているが、その型のユーザーには公開されていないデータ型
"data type, each of whose members consists of a single, nondecomposable data item",データ型。その各メンバーは単一の分解不可能なデータ項目で構成されます。
data use associated with the decision outcome of the predicate portion of a decision statement,意思決定ステートメントの述語部分の意思決定結果に関連するデータの使用
data used to adapt a program to a given installation site or to given conditions in its operational environment,プログラムを特定の設置場所または動作環境の特定の条件に適合させるために使用されるデータ
"data value that corresponds to a minimum or maximum input, internal, or output value specified for a system or component",システムまたはコンポーネントに指定された最小または最大の入力値、内部値、または出力値に対応するデータ値
Data-Life-Cycle,データのライフサイクル
"data, document, module, unit",データ、ドキュメント、モジュール、ユニット
database containing all the relevant details of each configuration item and details of the important relationships between them,各構成アイテムのすべての関連詳細とそれらの間の重要な関係の詳細を含むデータベース
Database Management System,データベース管理システム
database that contains inference rules and information about human experience and expertise in a domain,推論ルールと、ドメインにおける人間の経験と専門知識に関する情報を含むデータベース
"date after which changes to the software are reflected in the next, rather than the current, software release or issue of the documentation",ソフトウェアへの変更が現在のソフトウェア リリースではなく次のソフトウェア リリースまたはドキュメントの発行に反映される日
"Deactivation and reactivation are often used to maintain the persistence of an object when a system is unable to provide it with processing, storage and communication functions continuously.",非アクティブ化と再アクティブ化は、システムがオブジェクトに処理、保存、および通信機能を継続的に提供できない場合に、オブジェクトの永続性を維持するためによく使用されます。
"debugging technique in which a history of program execution is recorded and then replayed under the user's control, in either the forward or backward direction",プログラムの実行履歴を記録し、ユーザーの制御下で順方向または逆方向に再生するデバッグ手法
"debugging technique in which a single computer instruction, or part of an instruction, is executed in response to an external signal",外部信号に応答して単一のコンピューター命令、または命令の一部を実行するデバッグ手法
"decision aid used for organizing, selecting, communicating, and evaluating the required quality attributes for a software system",ソフトウェア システムに必要な品質属性を整理、選択、伝達、評価するために使用される意思決定支援ツール
decision attribute (criterion) that cannot be expressed in terms of money,お金では表せない決断の属性（基準）
decision review,意思決定レビュー
decision rules used to determine whether a software item or a software feature passes or fails a test,ソフトウェア項目またはソフトウェア機能がテストに合格するか不合格になるかを決定するために使用される決定ルール
"decision rules used to determine whether a test item, or feature of a test item, has passed or failed after testing",テスト後にテスト項目またはテスト項目の機能が合格か不合格かを判断するために使用される決定ルール
decision table where all the conditions and actions are completely described without reference to the rules,ルールを参照することなく、すべての条件とアクションが完全に記述された意思決定表
"decision table where any set of conditions will be satisfied by one, and only one, rule",任意の条件セットが 1 つだけのルールによって満たされるデシジョン テーブル
decision table where at least one set of conditions will be satisfied by more than one rule,少なくとも 1 セットの条件が複数のルールによって満たされるデシジョン テーブル
decision table where for all combinations of condition entries there exists a satisfying rule,条件エントリのすべての組み合わせに対して、満足するルールが存在するデシジョン テーブル
decision table where the conditions and actions are generally described but are incomplete,条件とアクションが一般的に説明されているが不完全な意思決定表
decision table whose stub consists of rows in which limited and extended entries are written,制限されたエントリと拡張されたエントリが書き込まれる行で構成されるスタブを持つデシジョン テーブル
decision technique in which attribute values are converted into a common scale where they can be added together to make a composite score for each alternative,属性値を共通のスケールに変換し、それらを加算して各選択肢の複合スコアを作成する決定手法
decision technique that discards any alternative with an attribute value outside an acceptable range,許容範囲外の属性値を持つ代替案を破棄する決定手法
decision technique that looks for an alternative that is at least as good in every attribute and better in at least one attribute,すべての属性において少なくとも同等で、少なくとも 1 つの属性においてより優れた代替案を探す意思決定手法
decision technique that prioritizes the decision attributes,意思決定属性を優先する意思決定手法
decision that considers more than just one criterion,複数の基準を考慮した決定
decision-making actions that select from various requirements and alternative solutions on the basis of net benefit to the stakeholders,ステークホルダーへの純利益に基づいて、さまざまな要件と代替ソリューションから選択する意思決定行動
"decisions made by the largest block in a group, even if a majority is not achieved",過半数に達していない場合でも、グループ内の最大のブロックによって決定が行われます。
decisions made regarding the external purchase or internal manufacture of a product,製品の外部購入または内部製造に関する決定
declaration of the meaning and the signature for a property or constraint,プロパティまたは制約の意味と署名の宣言
declarative specification language that is used to express the realization of responsibilities and to state queries,責任の実現を表現し、クエリを記述するために使用される宣言型仕様言語
decomposition diagram invoked by a calling box and identified by a page reference attached to a call arrow,呼び出しボックスによって呼び出され、呼び出し矢印に添付されたページ参照によって識別される分解図
decomposition diagram related to a specific box by a hierarchically consecutive sequence of one or more child/parent relationships,1 つ以上の子/親関係の階層的に連続したシーケンスによる特定のボックスに関連する分解図
decomposition diagram related to a specific box by exactly one child/parent relationship,1 つの子/親関係による特定のボックスに関連する分解図
decomposition of a quality factor or quality subfactor to its technical components,品質要素または品質サブ要素を技術要素に分解する
decomposition of a system of interest into a set of interacting systems and system elements,対象システムを相互作用するシステムとシステム要素のセットに分解する
decomposition; the separation of the whole into its parts,分解;全体を部分に分けること
defect in a hardware device or component5. defect in a system or a representation of a system that if executed/activated could potentially result in an error,ハードウェアデバイスまたはコンポーネントの欠陥5.システムまたはシステムの表現に欠陥があり、実行/アクティブ化するとエラーが発生する可能性があります。
"defined body of work to be performed, including its required input information and output information",必要な入力情報と出力情報を含む、実行される定義済みの作業本体
defined category of Base Functional Component,基本機能コンポーネントの定義されたカテゴリ
defined group of BFC types,BFC タイプの定義済みグループ
defined measurement method and the measurement scale,定められた測定方法と測定スケール
"defined objective or characteristic action of a system or component2. software module that performs a specific action, is invoked by the appearance of its name in an expression, receives input values, and returns a single value",システムまたはコンポーネントの定義された目的または特徴的なアクション2。特定のアクションを実行し、式内にその名前が出現することによって呼び出され、入力値を受け取り、単一の値を返すソフトウェア モジュール
"defined set of characteristics and of relationships between them, which provides a framework for specifying quality requirements and evaluating quality",一連の特性とそれらの間の関係を定義し、品質要件を指定し、品質を評価するためのフレームワークを提供します。
defined set of characteristics which provides a framework for specifying data quality requirements and evaluating data quality,データ品質要件を指定し、データ品質を評価するためのフレームワークを提供する、定義された一連の特性
"defining, achieving, and maintaining confidentiality, integrity, availability, non-repudiation, accountability, authenticity, and reliability of a system",システムの機密性、完全性、可用性、否認防止、説明責任、信頼性、信頼性を定義、達成、維持する
Definition Language,定義言語
definition of a characteristic of a meta-entity or meta-relationship,メタエンティティまたはメタ関係の特性の定義
definition of a characteristic of a meta-meta-entity or meta-meta-relationship,メタ-メタ-エンティティまたはメタ-メタ-関係の特性の定義
definition of a family of systems in terms of a pattern of structural organization,構造組織のパターンに関するシステムファミリーの定義
definition of a type of data object that occurs in CDIF metamodels,CDIF メタモデルで発生するデータ オブジェクトのタイプの定義
definition of a type of data object that occurs in CDIF models,CDIF モデルで発生するデータ オブジェクトのタイプの定義
definition of how the elements of a syntax are represented using an identified character set,識別された文字セットを使用して構文の要素を表現する方法の定義
"definition of the behavior and structure of meta-entities, meta-relationships, meta-attributes, or subject ar",メタエンティティ、メタ関係、メタ属性、または主題の動作と構造の定義
"definition of the boundaries of the assessment, provided as part of the assessment input, encompassing the boundaries of the organizational unit for the assessment, the processes to be included, the quality level for each process to be assessed, and the context within which the processes operate",評価の境界の定義。評価の入力の一部として提供され、評価の組織単位の境界、含まれるプロセス、評価される各プロセスの品質レベル、プロセスが動作するコンテキストが含まれます。
definition of the format of information in a CDIF transfer,CDIF転送における情報フォーマットの定義
"definition of the parameters of a given operation, including their number order, data types, and passing mode; the results if any; and the possible outcomes (normal vs. exceptional) that might occur",特定の操作のパラメータの定義 (番号の順序、データ型、受け渡しモードなど)。結果がある場合はその結果。および発生する可能性のある結果 (通常の場合と例外的な場合)
definition of the specific meta-objects that can be instantiated in the model section of a CDIF transfer,CDIF 転送のモデル セクションでインスタンス化できる特定のメタオブジェクトの定義
definition that provides the information needed to create an object and to allow the object to participate in providing an appropriate set of services,オブジェクトを作成し、オブジェクトが適切なサービスのセットの提供に参加できるようにするために必要な情報を提供する定義
"definition, coordination, and control of the characteristics of a product during its development cycle",開発サイクル中の製品の特性の定義、調整、および制御
definitions of concepts and rules for the specification of an ODP system from the <viewpoint> viewpoint,<viewpoint>の観点から見たODPシステム仕様の概念とルールの定義
definitive software library,決定的なソフトウェアライブラリ
degree of effectiveness and efficiency with which a product or system can be modified by the intended maintainers,対象の保守者が製品またはシステムを変更できる有効性と効率の程度
degree of effectiveness and efficiency with which a product or system can be successfully installed or uninstalled in a specified environment,製品またはシステムを指定された環境で正常にインストールまたはアンインストールできる有効性と効率の程度。
"degree of effectiveness and efficiency with which a system, product, or component can be transferred from one hardware, software or other operational or usage environment to another",システム、製品、またはコンポーネントを、あるハードウェア、ソフトウェア、またはその他の運用環境または使用環境から別の環境に移行できる有効性と効率の程度。
"degree of effectiveness and efficiency with which it is possible to assess the impact on a product or system of an intended change to one or more of its parts, or to diagnose a product for deficiencies or causes of failures, or to identify parts to be modified",1 つ以上の部品に対する意図した変更が製品またはシステムに及ぼす影響を評価したり、製品の欠陥や故障の原因を診断したり、変更する部品を特定したりすることができる有効性と効率の程度。
"degree of effectiveness and efficiency with which test criteria can be established for a system, product, or component and tests can be performed to determine whether those criteria have been met",システム、製品、またはコンポーネントのテスト基準を確立し、それらの基準が満たされているかどうかを判断するためにテストを実行できる有効性と効率の程度。
degree of effort required to correct software defects and to cope with user complaints,ソフトウェアの欠陥を修正し、ユーザーからの苦情に対処するために必要な労力の程度
degree of effort required to improve or modify software functions' efficiency,ソフトウェア機能の効率を改善または変更するために必要な労力の程度
"degree of exactness or discrimination with which a quantity is stated2. Within the quality management system, precision is a measure of exactness",数量が記載される正確さまたは区別の程度2.品質管理システム内では、精度は正確さの尺度です
"degree of impact that a requirement, module, error, fault, failure, or other item has on the development or operation of a system [IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1].",要件、モジュール、エラー、障害、障害、またはその他の項目がシステムの開発または運用に与える影響の程度 [IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation、3.1]。
degree of the share or claim a stakeholder has in the system of interest or a portion of the system of interest,利害関係者が対象システムまたは対象システムの一部で持つシェアまたは請求の程度
"degree of uniformity, standardization, and freedom from contradiction among the documents or parts of a system or component",均一性、標準化の度合い、ドキュメント間、またはシステムやコンポーネントの部分間の矛盾がないこと
degree required for the software product quality characteristics and subcharacteristics to fulfill the expected use criticality of the software product,ソフトウェア製品の予想される使用上の重要性を満たすために、ソフトウェア製品の品質特性とサブ特性に必要な学位
"degree to which a product can perform its required functions efficiently while sharing a common environment and resources with other products, without detrimental impact on any other product",他の製品に悪影響を与えることなく、他の製品と共通の環境やリソースを共有しながら、製品が必要な機能を効率的に実行できる度合い。
degree to which a product can replace another specified software product for the same purpose in the same environment,ある製品が、同じ環境で同じ目的のために別の指定されたソフトウェア製品を置き換えることができる程度
degree to which a product or system can be used by people with the widest range of characteristics and capabilities to achieve a specified goal in a specified context of use,指定された使用状況で指定された目標を達成するために、最も幅広い特性と能力を持つ人々が製品またはシステムを使用できる度合い
"degree to which a product or system can be used by specific users to meet their needs to achieve specific goals with effectiveness, efficiency, freedom from risk and satisfaction in specific contexts of use",特定の使用状況において、有効性、効率性、リスクからの解放、満足感を伴って特定の目標を達成するというニーズを満たすために、特定のユーザーが製品またはシステムを使用できる度合い。
"degree to which a product or system can be used by specified users to achieve specified goals of learning to use the product or system with effectiveness, efficiency, freedom from risk and satisfaction in a specified context of use",指定された使用状況において、製品またはシステムを効果的、効率的に、リスクから解放され、満足して使用する方法を学習するという指定された目標を達成するために、指定されたユーザーが製品またはシステムを使用できる程度。
"degree to which a product or system can be used by specified users to achieve specified goals with effectiveness, efficiency and satisfaction in a specified context of use",指定された使用状況において、指定されたユーザーが製品またはシステムを使用して、有効性、効率性、満足度を伴って指定された目標を達成できる度合い
"degree to which a product or system can be used with effectiveness, efficiency, freedom from risk and satisfaction in all the specified contexts of use",製品またはシステムが、指定されたすべての使用状況において有効性、効率性、リスクのない状態、および満足度を持って使用できる度合い
"degree to which a product or system can be used with effectiveness, efficiency, freedom from risk and satisfaction in both specified contexts of use and in contexts beyond those initially explicitly identified",製品またはシステムが、特定の使用状況と、最初に明示的に特定された状況を超えた状況の両方で、有効性、効率性、リスクのない状態、および満足感を持って使用できる度合い
"degree to which a product or system can be used with effectiveness, efficiency, freedom from risk and satisfaction in contexts beyond those initially specified in the requirements",製品またはシステムが、最初に要件で指定されたものを超えた状況において、有効性、効率性、リスクからの解放、および満足感を持って使用できる程度
"degree to which a product or system can effectively and efficiently be adapted for different or evolving hardware, software or other operational or usage environments",製品またはシステムが、異なるまたは進化するハードウェア、ソフトウェア、またはその他の運用環境または使用環境に効果的かつ効率的に適応できる度合い
degree to which a product or system continues to fulfill its mission by providing essential services in a timely manner in spite of the presence of attacks,攻撃の存在にもかかわらず、製品またはシステムが必要なサービスをタイムリーに提供することでその使命を果たし続ける度合い
degree to which a product or system ensures that data are accessible only to those authorized to have access,製品またはシステムが、アクセスを許可されたユーザーのみがデータにアクセスできることを保証する程度
degree to which a product or system has attributes that make it easy to operate and control,製品やシステムが操作や制御を容易にする属性をどの程度備えているか
degree to which a product or system is resistant to attack,製品またはシステムの攻撃に対する耐性の程度
"degree to which a product or system mitigates the potential risk to economic status, human life, health, or the environment.",製品またはシステムが経済的地位、人命、健康、または環境に対する潜在的なリスクを軽減する度合い。
"degree to which a product or system mitigates the potential risk to financial status, efficient operation, commercial property, reputation, or other resources in the intended contexts of use",製品またはシステムが、意図された使用状況における財務状況、効率的な運用、商業財産、評判、またはその他のリソースに対する潜在的なリスクを軽減する度合い
degree to which a product or system mitigates the potential risk to people in the intended contexts of use,製品またはシステムが、意図された使用状況において人々に対する潜在的なリスクを軽減する程度
degree to which a product or system mitigates the potential risk to property or the environment in the intended contexts of use,製品またはシステムが、意図された使用状況において資産または環境に対する潜在的なリスクを軽減する度合い
degree to which a product or system protects information and data so that persons or other products or systems have the degree of data access appropriate to their types and levels of authorization,製品またはシステムが情報とデータを保護する度合い。これにより、個人または他の製品またはシステムが、その承認の種類とレベルに応じたデータ アクセスの程度を得ることができます。
degree to which a product or system provides functions that meet stated and implied needs when used under specified conditions,製品またはシステムが、指定された条件下で使用された場合に、明示的および黙示的なニーズを満たす機能を提供する度合い
degree to which a product or system provides the correct results with the needed degree of precision,製品またはシステムが必要な精度で正しい結果を提供する程度
"degree to which a product, system or component can exchange information with other products, systems or components, or perform its required functions, while sharing the same hardware or software environment",同じハードウェアまたはソフトウェア環境を共有しながら、製品、システム、またはコンポーネントが他の製品、システム、またはコンポーネントと情報を交換したり、必要な機能を実行したりできる程度
"degree to which a relationship can be established between two or more products of the development process, especially products having a predecessor-successor or master-subordinate relationship to one another",開発プロセスの 2 つ以上の製品、特に相互に先行者と後継者または主従関係を持つ製品間で関係を確立できる程度。
degree to which a software product meets established requirements,ソフトウェア製品が確立された要件をどの程度満たしているか
degree to which a software product satisfies stated and implied needs when used under specified conditions,指定された条件下で使用された場合に、ソフトウェア製品が明示的および黙示的なニーズをどの程度満たすか
"degree to which a system or component accomplishes its designated functions within given constraints, such as speed, accuracy, or memory usage2. extent to which the execution of an application in the production environment achieves its purpose in terms of speed of input, transfer, processing, storage and output (the response speed of an application observed by an end user)",システムまたはコンポーネントが、速度、精度、メモリ使用量などの所定の制約内で、指定された機能を達成する程度2。実稼働環境でのアプリケーションの実行が、入力、転送、処理、保存、出力の速度の観点からその目的を達成する程度 (エンドユーザーから見たアプリケーションの応答速度)
degree to which a system or component can function correctly in the presence of invalid inputs or stressful environmental conditions,無効な入力またはストレスの多い環境条件の存在下でシステムまたはコンポーネントが正しく機能できる程度
degree to which a system or component contains enough information to explain its objectives and properties,システムまたはコンポーネントに、その目的と特性を説明するのに十分な情報がどの程度含まれているか
degree to which a system or component facilitates the establishment of test criteria and the performance of tests to determine whether those criteria have been met,システムまたはコンポーネントがテスト基準の確立と、それらの基準が満たされているかどうかを判断するためのテストの実行を容易にする程度
degree to which a system or component has a design and implementation that is straightforward and easy to understand,システムまたはコンポーネントの設計と実装が単純で理解しやすい程度
degree to which a system or component has a design or implementation that is difficult to understand and verify,システムまたはコンポーネントの設計または実装が、理解および検証がどの程度困難であるか
"degree to which a system or component is free from faults in its specification, design, and implementation",システムまたはコンポーネントの仕様、設計、および実装に欠陥がない度合い
degree to which a system or component is operational and accessible when required for use,システムまたはコンポーネントが動作可能で、使用に必要なときにアクセスできる程度
degree to which a system or component performs a broad range of functions,システムまたはコンポーネントが広範囲の機能を実行する度合い
degree to which a system or component performs its designated functions with minimum consumption of available storage,システムまたはコンポーネントが、利用可能なストレージの消費を最小限に抑えながら、指定された機能を実行する度合い
degree to which a system or component performs its designated functions with minimum consumption of resources,システムまたはコンポーネントがリソースの消費を最小限に抑えながら指定された機能を実行する度合い
degree to which a system or component performs its designated functions with minimum consumption of time,システムまたはコンポーネントが最小限の時間で指定された機能を実行する度合い
degree to which a system or computer program is composed of discrete components such that a change to one component has minimal impact on other components,1 つのコンポーネントへの変更が他のコンポーネントに最小限の影響を与えるように、システムまたはコンピュータ プログラムが個別のコンポーネントで構成されている度合い
degree to which a system protects users against making errors,システムがユーザーをエラーから保護する度合い
"degree to which a system, product or component meets needs for reliability under normal operation",システム、製品、またはコンポーネントが通常の動作において信頼性のニーズをどの程度満たしているか
"degree to which a system, product or component operates as intended despite the presence of hardware or software faults",ハードウェアまたはソフトウェアの障害が存在するにもかかわらず、システム、製品、またはコンポーネントが意図したとおりに動作する程度
"degree to which a system, product or component performs specified functions under specified conditions for a specified period of time",システム、製品、またはコンポーネントが、指定された期間、指定された条件下で指定された機能を実行する度合い
"degree to which a system, product, or component prevents unauthorized access to, or modification of, computer programs or data",システム、製品、またはコンポーネントが、コンピュータ プログラムまたはデータへの不正アクセスまたは変更を防止する程度
degree to which a system's design or code is difficult to understand because of numerous components or relationships among components,多数のコンポーネントまたはコンポーネント間の関係により、システムの設計またはコードを理解することがどの程度困難であるか
degree to which a transaction can access object state concurrently with other transactions,トランザクションが他のトランザクションと同時にオブジェクトの状態にアクセスできる程度
degree to which a user interface enables pleasing and satisfying interaction for the user,ユーザーインターフェイスがユーザーにとって楽しく満足のいくインタラクションを可能にする度合い
"degree to which a user is satisfied with perceived achievement of pragmatic goals, including the results of use and the consequences of use",使用の結果と使用の結果を含む、実際的な目標の達成感に対するユーザーの満足度
degree to which a user obtains pleasure from fulfilling personal needs,ユーザーが個人的なニーズを満たすことで喜びを得る度合い
degree to which a user or other stakeholder has confidence that a product or system will behave as intended,ユーザーまたは他の利害関係者が、製品またはシステムが意図したとおりに動作するという確信の度合い
"degree to which actions or events can be proven to have taken place, so that the events or actions cannot be repudiated later",行為や出来事が後で否認されないように、行為や出来事が起こったことを証明できる程度
"degree to which an asset can be used in more than one system, or in building other assets",資産が複数のシステムまたは他の資産の構築で使用できる程度
degree to which an object or an object's services provide agreed or expected functionality during a defined time period under specified conditions,オブジェクトまたはオブジェクトのサービスが、指定された条件下で、定義された期間中に合意されたまたは期待される機能を提供する度合い
degree to which each element in a software development product establishes its reason for existing,ソフトウェア開発製品の各要素がその存在理由をどの程度確立しているか
degree to which failures can affect object state changes due to completed transactions,完了したトランザクションによるオブジェクトの状態変化に障害が影響を与える可能性の程度
degree to which IT infrastructure management can attain and keep an application in its operational state,IT インフラストラクチャ管理がアプリケーションをどの程度稼働状態に維持できるか
degree to which object state changes resulting from failed transactions are cancelled,トランザクションの失敗によるオブジェクトの状態変化がキャンセルされる度合い
degree to which software complies or must comply with a set of stakeholder-selected software and/or software-based system characteristics defined to reflect the importance of the software to its stakeholders,利害関係者にとってのソフトウェアの重要性を反映するために定義された、利害関係者が選択した一連のソフトウェアおよび/またはソフトウェアベースのシステム特性にソフトウェアが準拠する、または準拠する必要がある度合い。
"degree to which software, documentation, or other items meet specified requirements",ソフトウェア、ドキュメント、またはその他のアイテムが指定された要件をどの程度満たしているか
"degree to which software, documentation, or other items meet user needs and expectations, whether specified or not",ソフトウェア、ドキュメント、またはその他のアイテムが、指定されているかどうかにかかわらず、ユーザーのニーズや期待にどの程度応えているか
degree to which the actions of an entity can be traced uniquely to the entity,エンティティのアクションをそのエンティティに一意に追跡できる度合い
"degree to which the amounts and types of resources used by a product or system, when performing its functions, meet requirements",製品またはシステムがその機能を実行する際に使用するリソースの量と種類が要件をどの程度満たしているか
degree to which the characteristics of data satisfy stated and implied needs when used under specified conditions,指定された条件下で使用された場合に、データの特性が明示的および暗黙的なニーズをどの程度満たすか
degree to which the evaluation covers the specified software product quality requirements,評価が指定されたソフトウェア製品の品質要件をどの程度カバーしているか
degree to which the functions facilitate the accomplishment of specified tasks and objectives,機能が指定されたタスクや目的の達成を促進する度合い
degree to which the identity of a subject or resource can be proved to be the one claimed,主題またはリソースの身元が、主張されているものであると証明できる程度
degree to which the maximum limits of a product or system parameter meet requirements,製品またはシステムパラメータの最大制限が要件をどの程度満たしているか
degree to which the product satisfies stated and implied needs when used under specified conditions,指定された条件下で使用した場合に、製品が明示的および黙示的なニーズをどの程度満たすか
"degree to which the requirements, design, or plans for a system or component can be implemented under existing constraints",システムまたはコンポーネントの要件、設計、または計画が既存の制約の下でどの程度実装できるか
"degree to which the response and processing times and throughput rates of a product or system, when performing its functions, meet requirements",製品またはシステムの機能実行時の応答時間、処理時間、およびスループット レートが要件をどの程度満たしているか
degree to which the set of functions covers all the specified tasks and user objectives,一連の機能が指定されたすべてのタスクとユーザーの目的をどの程度カバーしているか
"degree to which the system satisfies the stated and implied needs of its various stakeholders, and thus provides value",システムがさまざまな利害関係者の明示的および暗黙的なニーズを満たし、それによって価値を提供する度合い
degree to which the user is satisfied with physical comfort,ユーザーの身体的快適さの満足度
"degree to which two or more systems, products or components can exchange information and use the information that has been exchanged",2 つ以上のシステム、製品、またはコンポーネントが情報を交換し、交換された情報を使用できる程度
degree to which user needs are satisfied when a product or system is used in a specified context of use,製品またはシステムが特定の使用状況で使用されるときに、ユーザーのニーズがどの程度満たされるか
degree to which users can recognize whether a product or system is appropriate for their needs,ユーザーが製品やシステムが自分のニーズに適しているかどうかを認識できる度合い
"degree to which, in the event of an interruption or a failure, a product or system can recover the data directly affected and re-establish the desired state of the system",中断または障害が発生した場合に、製品またはシステムが直接影響を受けたデータを回復し、システムの望ましい状態を再確立できる程度。
"degree, expressed as a percentage, to which specified test coverage items have been exercised by a test case or test cases",指定されたテスト カバレッジ項目がテスト ケースによって実行されている度合い (パーセンテージで表現)
delay between a computer system's receipt of an interrupt request and its handling of the request,コンピュータシステムが割り込み要求を受信して​​から要求を処理するまでの遅延
deliverable-oriented hierarchical decomposition of the work to be executed by the project team to accomplish the project objectives and create the required deliverables,プロジェクトの目標を達成し、必要な成果物を作成するためにプロジェクト チームが実行する作業の成果物指向の階層的分解。
deliverables that are result of executing quality control process to determine correctness,正確さを判断するための品質管理プロセスの実行結果として得られる成果物
delivered version of an application which includes all or part of an application,アプリケーションの全部または一部を含むアプリケーションの配信バージョン
demilitarization,非武装化
"demonstrated ability to apply knowledge and skills, and relevant personal attributes, as defined in the certification scheme",認定スキームで定義されている、知識とスキル、および関連する個人的属性を適用する実証された能力
"demonstration that specified requirements relating to a product, process, system, person or body are fulfilled",製品、プロセス、システム、人、または身体に関する指定された要件が満たされていることを実証すること
denotation of a specific instance of a value class,値クラスの特定のインスタンスの表記
"denoted by L1 (level 1) to L4 (level 4) cache, where the first level is the fastest and smallest memory size for immediate access, and the highest level is slowest, but the largest memory size",L1 (レベル 1) から L4 (レベル 4) キャッシュで示されます。最初のレベルは即時アクセスの最速かつ最小のメモリ サイズであり、最高レベルは最も低速ですが最大のメモリ サイズです。
Department of Defense architecture framework,国防総省のアーキテクチャフレームワーク
departure described in (1),(1)に記載の出発
departure from a specified requirement,指定された要件からの逸脱
"Dependability characteristics include availability and its inherent or external influencing factors, such as availability, reliability (including fault tolerance and recoverability), security (including confidentiality and integrity), maintainability, durability, and maintenance support. Wear or aging does not occur in software. Limitations in reliability are due to faults in requirements, design, and implementation, or due to contextual changes.",ディペンダビリティ特性には、可用性、信頼性 (耐障害性と回復可能性を含む)、セキュリティ (機密性と完全性を含む)、保守性、耐久性、保守サポートなど、可用性とその固有または外部の影響要因が含まれます。ソフトウェアには磨耗や経年劣化が発生しません。信頼性の制限は、要件、設計、実装における欠陥、または状況の変化が原因で発生します。
"Depending on the life cycle model used, test sub-processes are also typically called test phases, test levels, test stages or test tasks.",使用されるライフサイクル モデルに応じて、テスト サブプロセスは通常、テスト フェーズ、テスト レベル、テスト ステージ、またはテスト タスクとも呼ばれます。
"Depending on the size and complexity of a project, can be a group of people, a single person or a function",プロジェクトの規模と複雑さに応じて、グループ、個人、または機能のいずれかになります。
"Depending on the specific terms and conditions, usage can include accessing, copying, distributing, installing and executing software.",特定の利用規約に応じて、使用にはソフトウェアへのアクセス、コピー、配布、インストール、実行が含まれる場合があります。
deployment package,展開パッケージ
depth or level of detail at which data is collected,データが収集される深さまたは詳細レベル
derivation of a system concept through the application of analysis.,分析を応用してシステムコンセプトを導き出す。
derived from bootstrap,ブートストラップから派生した
derived from the acronym SPOOL for Simultaneous Peripheral Output On Line,Simultaneous Peripheral Output On Line の頭字語 SPOOL に由来
"derived measure that gives an indication of some attribute associated with how well, how quickly, how effectively, or how efficiently a project is carried out",プロジェクトがどの程度うまく、どのくらい迅速に、どのくらい効果的に、またはどのように効率的に実行されるかに関連する何らかの属性を示す導出された尺度
derived measure that is defined as a measurement function of two or more values of quality measure elements,品質尺度要素の 2 つ以上の値の測定関数として定義される派生尺度
derived relationship between two elements that are groups of other elements that represents all individual relationships between the grouped elements of the two groups,他の要素のグループである 2 つの要素間の派生関係。2 つのグループのグループ化された要素間のすべての個別の関係を表す。
Derived requirements can arise during analysis and design of components of the product or service.,派生要件は、製品またはサービスのコンポーネントの分析および設計中に発生する可能性があります。
"described in terms that only allow a single interpretation, aided, if necessary, by a definition",必要に応じて定義を援用し、単一の解釈のみを許容する用語で説明される
"describes the procurement item in sufficient detail to allow prospective sellers to determine if they are capable of providing the products, services, or results",将来の販売者が製品、サービス、または結果を提供できるかどうかを判断できるように、調達品目を十分に詳細に説明する
"description of a contingency to be considered in the representation of a problem, or a reference to other procedures to be considered as part of the condition",問題の表現において考慮される不測の事態の説明、または状態の一部として考慮される他の手順への参照
description of a partial solution (such as a component or design document) or knowledge (such as requirements database or test procedures) that engineers use to build or modify software products,エンジニアがソフトウェア製品を構築または変更するために使用する部分的なソリューション (コンポーネントや設計文書など) または知識 (要件データベースやテスト手順など) の説明
description of a set of possible operations that a client is allowed to request of an object,クライアントがオブジェクトに対して要求できる一連の操作の説明
"description of an imagined sequence of events that includes the interaction of the product or service with its environment and users, as well as interaction among its product or service components",製品またはサービスとその環境およびユーザーとの相互作用、およびその製品またはサービスのコンポーネント間の相互作用を含む、想像上の一連のイベントの説明
description of an operation to be taken in the formulation of a solution,解決策を定式化する際に実行される操作の説明
"description of essential functional, performance, and design requirements and constraints at a common boundary between two or more system elements2. document that specifies the interface characteristics of an existing or planned system or component",2 つ以上のシステム要素間の共通の境界における重要な機能、パフォーマンス、設計要件と制約の説明。既存または計画中のシステムまたはコンポーネントのインターフェース特性を指定する文書
description of how a specified purpose and set of outcomes can be achieved by employing the activities and tasks of existing processes,既存のプロセスのアクティビティとタスクを利用して、指定された目的と一連の結果をどのように達成できるかについての説明
description of how a task responds to each of its message or event inputs,タスクが各メッセージまたはイベント入力にどのように応答するかの説明
description of how domain assets are to be used to develop member products in a product line,製品ラインのメンバー製品を開発するためにドメイン資産を使用する方法の説明
description of how the elements and resources of the risk management process will be implemented within an organization or project,リスク管理プロセスの要素とリソースが組織またはプロジェクト内でどのように実装されるかについての説明
description of the architecture and design of interfaces between system and components,システムとコンポーネント間のインターフェイスのアーキテクチャと設計の説明
description of the behavioral requirements of a system and its interaction with a user,システムの動作要件とユーザーとの対話の説明
description of the concurrent tasks in a system or subsystem in terms of their interfaces and interconnections,システムまたはサブシステム内の同時タスクを、それらのインターフェイスと相互接続の観点から説明する
"description of the detailed design at a specific point in time, for production, fielding/deployment, and operations and support",生産、配備/展開、運用とサポートのための、特定の時点での詳細設計の説明
description of the necessary properties of the test environment,テスト環境に必要なプロパティの説明
description of the problem and the essence of its solution to enable the solution to be reused in different settings,問題とその解決策の本質を説明し、その解決策をさまざまな設定で再利用できるようにする
description of the set of concepts and notations used to define a metamodel,メタモデルを定義するために使用される一連の概念と表記法の説明
description of the set of concepts and notations used to define a model,モデルを定義するために使用される一連の概念と表記法の説明
description of the set of user needs for the software,ソフトウェアに対するユーザーの一連のニーズの説明
"description of the system's performance (functional, interoperability, and interface characteristics) and the verification required to demonstrate the achievement of those specified characteristics",システムのパフォーマンス (機能、相互運用性、インターフェイス特性) の説明と、それらの指定された特性の達成を実証するために必要な検証
description of the test execution conditions (i.e. test procedure),テスト実行条件（テスト手順など）の説明
description of the user requirements with respect to the execution times of tasks of a specific task type,特定のタスクタイプのタスクの実行時間に関するユーザー要件の説明
description or pattern that can be evaluated or performed multiple times to cause the issuing of requests,リクエストの発行を引き起こすために複数回評価または実行できる説明またはパターン
"design (specification, coding) fault that results from a human error during system design and that might result in a design failure",設計 (仕様、コーディング) システム設計中の人為的エラーから生じ、設計の失敗につながる可能性がある欠陥
design approach in which a system's functionality is decomposed from high-level concepts into lower-level piece,システムの機能を上位レベルの概念から下位レベルの部分に分解する設計アプローチ
design approach in which low-level pieces of a system are combined into an overall design.,システムの下位レベルの部分を組み合わせて全体の設計を行う設計アプローチ。
design attributes or distinguishing features that pertain to a measurable description of a product or process,製品またはプロセスの測定可能な説明に関連するデザインの属性または特徴
design attributes or distinguishing features that pertain to a measurable description of a product or service,製品またはサービスの測定可能な説明に関連するデザインの属性または特徴
design decomposition of the software item,ソフトウェア項目の設計分解
design methodology used for business applications by basing the design on the logical data structures of the program specification,プログラム仕様の論理データ構造に基づいて設計することにより、ビジネス アプリケーションに使用される設計方法論
"design or programming language in which sequences of statements, called blocks, are defined, usually with begin and end delimiters, and variables or labels defined in one block are not recognized outside that block",ブロックと呼ばれるステートメントのシーケンスが通常開始区切り文字と終了区切り文字で定義され、1 つのブロック内で定義された変数やラベルがそのブロックの外では認識されない設計またはプログラミング言語
"Design provides the detailed implementation-level physical structure, behavior, temporal relationships, and other attributes of system elements. It is information, including specification of system elements and their relationships, that is sufficiently complete to support a compliant implementation of the architecture.",設計では、実装レベルの詳細な物理構造、動作、時間的関係、およびシステム要素のその他の属性が提供されます。これは、システム要素とそれらの関係の仕様を含む、アーキテクチャの準拠した実装をサポートするのに十分な完全な情報です。
"design specifications, requirements specifications, system specifications",設計仕様、要求仕様、システム仕様
"design, testing, or configuration management",設計、テスト、または構成管理
designated grouping of test cases.,指定されたテスト ケースのグループ化。
designation given to a property whose value is determined by computation,値が計算によって決定されるプロパティに与えられる名称
designation given to an operation argument that identifies an instance to which a request can be sent that will change the state of the instance,インスタンスの状態を変更するリクエストの送信先となるインスタンスを識別する操作引数に与えられる指定。
designation given to an operation argument that will always have a value at the invocation of the operation,操作の呼び出し時に常に値を持つ操作引数に与えられる指定
designation of the coverage and detail of a view,ビューの範囲と詳細の指定
designation that a property of a class must be overridden in its subclasses,クラスのプロパティをそのサブクラスでオーバーライドする必要があるという指定
designing a software system that is easy to maintain,保守が容易なソフトウェア システムを設計する
"designing, writing, modifying, and testing of programs",プログラムの設計、作成、変更、テスト
"detailed description of test objectives to be achieved and the means and schedule for achieving them, organized to coordinate testing activities for some test item or set of test items",達成すべきテスト目標と、それらを達成するための手段とスケジュールの詳細な説明。一部のテスト項目または一連のテスト項目のテスト活動を調整するために編成されています。
detailed description of variability models being used across the member products within a product line,製品ライン内のメンバー製品全体で使用されている変動モデルの詳細な説明
detailed design review2. double data rate,詳細な設計レビュー2. 2倍のデータレート
"detailed formulation, in document form, which provides a definitive description of a system for the purpose of developing or validating the system",システムの開発または検証を目的として、システムの最終的な説明を提供する文書形式の詳細な定式化。
"detailed instructions for the setup, execution, and evaluation of results for a given test case",特定のテスト ケースのセットアップ、実行、結果の評価に関する詳細な手順
Details of representation of the various terminal symbols and data types in the syntax's grammar are provided.,構文の文法におけるさまざまな終端記号とデータ型の表現の詳細が提供されます。
determination of a potential problem's (a risk factor's) underlying cause or causes.,潜在的な問題 (リスク要因) の根本的な原因の特定。
"determination of product- or service-specific performance and functional characteristics based on analyses o customer needs, expectations, and constraints; operational concept; projected utilization environments for people, products, services, and processes; and measures of effectiveness",顧客のニーズ、期待、制約などの分析に基づいた、製品またはサービス固有のパフォーマンスおよび機能特性の決定。運用コンセプト。人、製品、サービス、プロセスの予測される利用環境。および有効性の尺度
determination of the extent to which the organization's standard processes contribute to the achievement of its business goals and help the organization focus on the need for continuous process improvement,組織の標準プロセスがビジネス目標の達成にどの程度貢献しているかを判断し、組織が継続的なプロセス改善の必要性に集中できるようにする
determining what existing software will do and how it is constructed (to make intelligent changes),既存のソフトウェアが何を行うか、またどのように構築されるかを決定する (インテリジェントな変更を行うため)
developed prior to its current use in an acquisition or development process,買収または開発プロセスで現在使用される前に開発されたもの
developer with commit privileges,コミット権限を持つ開発者
developer's copy of a branch,ブランチの開発者用コピー
Developers apply methodologies via enactment.,開発者は制定を通じて方法論を適用します。
Developers translate the user view into software to provide a solution.,開発者はユーザーの視点をソフトウェアに変換してソリューションを提供します。
developing relationships with persons who can assist in the achievement of objectives and responsibilities,目標と責任の達成を支援できる人々との関係を築く
development test,開発テスト
developmental test and evaluation,発達検査と評価
"deviation from the main development line for a configuration item, which allows different persons to work on the same item at the same time",構成アイテムのメイン開発ラインからの逸脱。これにより、異なる担当者が同じアイテムに同時に作業できるようになります。
"device intended to be used to make measurements, alone or in conjunction with supplementary device(s)",単独または補助装置と組み合わせて、測定を行うために使用することを目的とした装置
device or computer chip that interfaces with a peripheral device,周辺機器と接続するデバイスまたはコンピュータチップ
"device or storage area used to store data temporarily to compensate for differences in rates of data flow, time of occurrence of events, or amounts of data that can be handled by the devices or processes involved in the transfer or use of the data",データの転送または使用に関与するデバイスまたはプロセスによって処理できるデータ フローの速度、イベントの発生時間、またはデータ量の違いを補償するために、データを一時的に保存するために使用されるデバイスまたはストレージ領域
device or variable that can be set to a prescribed state based on the results of a process or the occurrence of a specified condition,プロセスの結果または指定された条件の発生に基づいて、所定の状態に設定できるデバイスまたは変数
device that does not generate an interrupt on completion of an input or output operation,入力または出力操作の完了時に割り込みを生成しないデバイス
device that is controlled by and can communicate with a particular computer,特定のコンピュータによって制御され、特定のコンピュータと通信できるデバイス
"device that is suitable for performing arithmetic operations, but that requires human intervention to alter its stored program, if any, and to initiate each operation or sequence of operations",算術演算の実行には適しているが、格納されているプログラムがある場合にはそれを変更し、各演算または一連の演算を開始するには人間の介入が必要な装置
device that measures or records specified events or characteristics of a computer system,コンピュータシステムの指定されたイベントまたは特性を測定または記録する装置
"device that performs or assists in the performance of user or organization process tasks that support, directly or indirectly, the achievement of production goals",生産目標の達成を直接的または間接的にサポートするユーザーまたは組織のプロセスタスクを実行または支援するデバイス
device used to present data to the intended user of a system,システムの対象ユーザーにデータを提示するために使用されるデバイス
"device, computer program, or system that accepts the same inputs and produces the same outputs as a given system",特定のシステムと同じ入力を受け入れ、同じ出力を生成するデバイス、コンピューター プログラム、またはシステム
"device, computer program, or system that behaves or operates like a given system when provided a set of controlled inputs",一連の制御された入力が提供されると、特定のシステムのように動作または動作するデバイス、コンピューター プログラム、またはシステム
devices or instructions installed or inserted into hardware or software to monitor the operation of a system or component,システムまたはコンポーネントの動作を監視するためにハードウェアまたはソフトウェアにインストールまたは挿入されるデバイスまたは命令
"Diagonal microinstructions fall, in size and functionality, between horizontal microinstructions and vertical microinstructions. The designation 'diagonal' refers to this compromise rather than to any physical characteristic of the microinstruction.",斜めのマイクロ命令は、サイズと機能の点で、水平マイクロ命令と垂直マイクロ命令の中間に位置します。 「対角線」という指定は、マイクロ命令の物理的特性ではなく、この妥協点を指します。
"diagram depicting a network of concurrent tasks and their interfaces in the form of asynchronous and synchronous message communication, event synchronization, and access to passive information-hiding object",同時タスクのネットワークと、非同期および同期のメッセージ通信、イベント同期、および受動的情報隠蔽オブジェクトへのアクセスの形式でのそのインターフェイスを示す図
diagram feature reference in which dot notation joins an ICOM code to a diagram reference,ドット表記法で ICOM コードをダイアグラム リファレンスに結合するダイアグラム フィーチャー リファレンス
"Diagram features include boxes, arrow segments, arrow labels, ICOM codes, ICOM labels, model notes, and reader notes.",図の機能には、ボックス、矢印セグメント、矢印ラベル、ICOM コード、ICOM ラベル、モデル ノート、およびリーダー ノートが含まれます。
"diagram of a software system or module, consisting of a rectangle on the left listing inputs, a rectangle in the center listing processing steps, a rectangle on the right listing outputs, and arrows connecting inputs to processing steps and processing steps to outputs",ソフトウェア システムまたはモジュールの図。入力をリストする左側の四角形、処理ステップをリストする中央の四角形、出力をリストする右側の四角形、および入力と処理ステップおよび処理ステップと出力を接続する矢印で構成されます。
diagram of a system in which the principal parts or functions are represented by blocks connected by lines that show the relationships of the blocks,主要な部分または機能が、ブロックの関係を示す線で接続されたブロックによって表されるシステムの図
"diagram of a system, computer, or device in which the principal parts are represented by suitably annotated geometrical figures to show both the functions of the parts and their functional relationships",システム、コンピュータ、または装置の図であり、主要な部品が、部品の機能とその機能的関係の両方を示すために、適切に注釈が付けられた幾何学的図形によって表されています。
diagram or other representation consisting of a finite set of nodes and internode connections called edges or arcs,ノードとエッジまたはアークと呼ばれるノード間接続の有限セットで構成される図またはその他の表現
diagram showing the time-ordered execution sequence of a group of task,タスクのグループの時間順の実行シーケンスを示す図
diagram that contains a parent box,親ボックスを含む図
diagram that contains an ancestral box,祖先ボックスを含む図
"diagram that depicts a set of data elements, their attributes, and the logical relationships among them",一連のデータ要素、その属性、およびそれらの間の論理関係を示す図
diagram that depicts all of the documents for a given system and shows their relationships to one another,特定のシステムのすべてのドキュメントを示し、それらの相互関係を示す図
"diagram that depicts data sources, data sinks, data storage, and processes performed on data as nodes, and logical flow of data as links between the nodes",データ ソース、データ シンク、データ ストレージ、データに対して実行されるプロセスをノードとして、データの論理フローをノード間のリンクとして表す図
diagram that depicts the set of all possible sequences in which operations can be performed during the execution of a system or program,システムまたはプログラムの実行中に操作を実行できるすべての可能なシーケンスのセットを示す図
diagram that depicts the specifications for a given system and shows their relationships to one another.,特定のシステムの仕様を示し、それらの相互関係を示す図。
"diagram that depicts the states that a system or component can assume, and shows the events or circumstances that cause or result from a change from one state to another",システムまたはコンポーネントが取り得る状態を示し、ある状態から別の状態への変化を引き起こす、またはその結果生じるイベントや状況を示す図
diagram that details its parent box,親ボックスの詳細を示す図
diagram that has no descendent diagrams,子孫ダイアグラムを持たないダイアグラム
"diagram that identifies modules, activities, or other entities in a system or computer program and shows how larger or more general entities break down into smaller, more specific entities",システムまたはコンピュータ プログラム内のモジュール、アクティビティ、またはその他のエンティティを識別し、より大きなまたはより一般的なエンティティがより小さなより具体的なエンティティにどのように分解されるかを示す図
diagram that identifies the modules in a system or computer program and shows which modules call one another,システムまたはコンピュータ プログラム内のモジュールを識別し、どのモジュールが相互に呼び出しているかを示す図
diagram that identifies the sequence of tasks required to process an external event,外部イベントの処理に必要な一連のタスクを示す図
"diagram that presents the context of the top-level function of an IDEF0 model, whose diagram number is a-n where 0#n#9",IDEF0 モデルの最上位関数のコンテキストを表す図。図番号は a ～ n (0#n#9)
diagram that represents the variation of a variable in comparison with that of one or more other variables,1 つまたは複数の他の変数と比較した変数の変動を表す図
diagram that shows the relationship between two or more computer programs,2 つ以上のコンピューター プログラム間の関係を示す図
diagram that shows where programs and data are stored in a computer's memory,プログラムとデータがコンピュータのメモリのどこに保存されているかを示す図
diagrams that correspond to the nodes of the hierarchical graph structure of an IDEF0 model,IDEF0 モデルの階層グラフ構造のノードに対応する図
"difference between a computed, observed, or measured value or condition and the true, specified, or theoretically correct value or condition",計算された、観察された、または測定された値または状態と、真の、指定された、または理論的に正しい値または状態との間の差異
difference between the loaded origin and the assembled origin of a computer program,コンピュータプログラムのロード元とアセンブル元の違い
difference between the required (or desired) level of performance and the actual performance,必要な（または望ましい）パフォーマンスのレベルと実際のパフォーマンスの差
difference between two versions,2 つのバージョンの違い
Differences between successive versions can then be readily applied to the locally modified import.,連続したバージョン間の相違点は、ローカルで変更されたインポートに容易に適用できます。
different layers of definition (or abstraction) used in defining the CDIF family of standards,CDIF 規格ファミリーの定義に使用されるさまざまな定義層 (または抽象化)
"Different risk thresholds can be defined for each risk, risk category or combination of risks, based on differing risk criteria.",異なるリスク基準に基づいて、リスク、リスク カテゴリ、またはリスクの組み合わせごとに異なるリスクしきい値を定義できます。
"difficulty or uncertainty experienced by one or more persons, resulting from an unsatisfactory encounter with a system in use",使用中のシステムに満足できない結果として、1 人または複数の人が経験する困難または不確実性
"difficulty, uncertainty, or otherwise realized and undesirable event, set of events, condition, or situation that requires investigation and corrective action",調査と是正措置を必要とする困難、不確実性、またはその他の方法で実現された望ましくない出来事、一連の出来事、状態、または状況
digital computer that is functionally intermediate between a microcomputer and a mainframe,機能的にマイクロコンピュータとメインフレームの中間となるデジタルコンピュータ
"digital computer whose processing unit consists of one or more microprocessors, and includes storage and input output facilities",処理装置が 1 つ以上のマイクロプロセッサで構成され、記憶装置と入出力機能を備えたデジタル コンピュータ
digital signal processing,デジタル信号処理
digital signal processor,デジタル信号プロセッサ
digital versatile disc,デジタル多用途ディスク
digital video disc,デジタルビデオディスク
direct memory access,ダイレクトメモリアクセス
direct memory access controller,ダイレクトメモリアクセスコントローラ
"directed edge of a net which can connect a place to a transition or a transition to a place, normally represented by an arrow",場所と遷移、または場所と遷移を接続できるネットの有向エッジ。通常は矢印で表されます。
"directed graph comprising a set of nodes of two different kinds, called places and transitions, and their interconnection by directed edges, called arcs, such that only places can be connected to transitions, and transitions to places, but never transitions to transitions, nor places to places",場所と遷移と呼ばれる 2 つの異なる種類のノードのセットと、アークと呼ばれる有向エッジによるそれらの相互接続で構成される有向グラフ。場所のみが遷移に、および遷移から場所に接続できますが、遷移から遷移、または場所から場所には接続できません。
"directed graph of nodes and edges, where the nodes correspond to reachable markings, and the edges correspond to transition occurrences",ノードとエッジの有向グラフ。ノードは到達可能なマーキングに対応し、エッジは遷移の発生に対応します。
"directed graph used for describing and scheduling events, activities, and their relationships in project control",プロジェクト管理におけるイベント、アクティビティ、およびそれらの関係を記述およびスケジュールするために使用される有向グラフ
"directed graph where each vertex denotes a naming context, and where each edge denotes an association between a name appearing in the source naming context and the target naming context",有向グラフ。各頂点は名前付けコンテキストを表し、各辺はソース名前付けコンテキストに表示される名前とターゲット名前付けコンテキストの間の関連付けを表します。
"directed line that originates at a box side, arrow junction (branch or join), or diagram boundary and terminates at the next box side, arrow junction (branch or join), or diagram boundary that occurs in the path of the line",ボックスの辺、矢印の接合部 (分岐または結合)、または図の境界から始まり、次のボックスの辺、矢印の接合部 (分岐または結合)、または線のパス内に発生する図の境界で終わる有向線。
"directed line, composed of one or more connected arrow segments in a single diagram from a single source (box or diagram boundary) to a single use (box or diagram boundary)",有向線。単一のソース (ボックスまたは図の境界) から単一の使用 (ボックスまたは図の境界) までの、単一の図内の 1 つまたは複数の接続された矢印セグメントで構成されます。
"direction, control, and coordination of work performed to develop a product or perform a service",製品の開発またはサービスの実行のために実行される作業の指示、制御、および調整
Directory Information Base,ディレクトリ情報ベース
Directory Information Tree,ディレクトリ情報ツリー
Directory System Agent,ディレクトリ システム エージェント
Directory User Agent,ディレクトリユーザーエージェント
"discernible association among two or more logical entities, such as requirements, system elements, verifications, or tasks",要件、システム要素、検証、タスクなど、2 つ以上の論理エンティティ間の認識可能な関連性
"discernible association between a requirement and related requirements, implementations, and verifications",要件と、関連する要件、実装、および検証との間の認識可能な関連性
"discipline applying technical and administrative direction and surveillance to: identify and document the functional and physical characteristics of a configuration item, control changes to those characteristics, record and report change processing and implementation status, and verify compliance with specified requirements",構成アイテムの機能的および物理的特性の特定と文書化、それらの特性への変更の管理、変更処理と実装ステータスの記録と報告、指定された要件への準拠の検証を行うために、技術的および管理的な指示と監視を適用する規律。
"discipline of identifying the components of a continually evolving system to control changes to those components and maintaining integrity and traceability throughout the life cycle2. a subsystem of the overall project management system. It is a collection of formal documented procedures used to apply technical and administrative direction and surveillance to: identify and document the functional and physical characteristics of a product, result, service, or component; control any changes to such characteristics; record and report each change and its implementation status; and support the audit of the products, results, or components to verify conformance to requirements. It includes the documentation, tracking systems, and defined approval levels necessary for authorizing and controlling changes",継続的に進化するシステムのコンポーネントを特定して、それらのコンポーネントへの変更を制御し、ライフサイクル全体にわたって整合性とトレーサビリティを維持するという規律2。プロジェクト管理システム全体のサブシステム。これは、次の目的で技術的および管理上の指示と監視を適用するために使用される、正式に文書化された手順の集合です。製品、結果、サービス、またはコンポーネントの機能的および物理的特性を特定して文書化します。そのような特性の変更を制御する。各変更とその実装状況を記録および報告する。また、要件への適合性を検証するために、製品、結果、またはコンポーネントの監査をサポートします。これには、変更の承認と制御に必要な文書化、追跡システム、定義された承認レベルが含まれます。
"disciplined approach to software design that adheres to specified rules based on principles such as modularity, top-down design, and stepwise refinement of data, system structures, and processing steps",モジュール性、トップダウン設計、データ、システム構造、処理ステップの段階的改良などの原則に基づいて、指定されたルールに従うソフトウェア設計への規律あるアプローチ。
disciplined evaluation of an organizational unit's processes against a process assessment model,プロセス評価モデルに対する組織単位のプロセスの規律ある評価
"disciplined processes and systems that plan for, acquire, and provide stewardship for business and technical data, consistent with data requirements, throughout the data lifecycle",データのライフサイクル全体を通じて、データ要件に沿ってビジネス データと技術データの管理を計画、取得、提供する規律あるプロセスとシステム
discrete data type whose members can assume values that are explicitly defined by the programmer,メンバーがプログラマによって明示的に定義された値を想定できる離散データ型
"discrete, bounded thing with an intrinsic, immutable, and unique identity",本質的、不変、ユニークなアイデンティティを持つ、個別で境界のあるもの
disk which stores binary data in the form of pits which interrupt the reflection of light from a laser,レーザーからの光の反射を遮断するピットの形でバイナリデータを保存するディスク
"display of some aspect of a computer program's execution state, usually the contents of internal storage or registers",コンピュータプログラムの実行状態のある側面の表示、通常は内部ストレージまたはレジスタの内容
display of the contents of a file or device,ファイルまたはデバイスの内容の表示
"display of the contents of all or part of a computer's internal storage, usually in binary, octal, or hexadecimal form",コンピュータの内部ストレージのすべてまたは一部の内容を、通常は 2 進数、8 進数、または 16 進数形式で表示すること
"displayed listing of incomplete tasks or user stories not yet being worked or completed. This listing can be grouped by function, with the estimated priority and expected date to start, finish, or dispose of the items",未完了のタスクや、まだ作業中または完了していないユーザー ストーリーのリストを表示します。このリストは、推定優先順位と項目の開始、終了、または処分の予定日を含めて、機能ごとにグループ化できます。
"Disposition is made by a designated change authority traditionally given the name ""Change/Configuration Control Board"". This authority can approve a proposed change, thus converting it to an approved modification, or can disapprove a proposed change, or can defer a decision.",処分は、伝統的に「変更/構成管理委員会」という名前が付けられている、指定された変更権限によって行われます。この権限は、提案された変更を承認して承認済みの変更に変換したり、提案された変更を不承認したり、決定を延期したりすることができます。
disposition of one or more proposed changes authorizing change to any SCIs,SCI への変更を承認する 1 つ以上の提案された変更の処理
distinct components that a multidimensional construct encompasses,多次元構造が包含する個別のコンポーネント
distinct named interface provided by the component for client interaction,クライアントとの対話のためにコンポーネントによって提供される個別の名前付きインターフェース
"distinct scope, within which common characteristics are exhibited, common rules observed, and over which a distribution transparency is preserved",明確な範囲。その範囲内では共通の特性が示され、共通のルールが観察され、分布の透明性が維持されます。
"distinguishable architectural unit with individual identity, boundary, and behavior that is observable through interactions with other such units [IEEE 1175.4-2008 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying System Behavior] 3.29]",他の同様のユニットとの相互作用を通じて観察可能な、個々のアイデンティティ、境界、および動作を備えた区別可能なアーキテクチャ ユニット [IEEE 1175.4-2008 IEEE Standard for CASE Tool Interconnections - Reference Model for Specting System Behavior] 3.29]
Distinguished Name,識別名
distinguishing characteristic of a system item,システムアイテムの際立った特徴
Distributed Computing Environment.,分散コンピューティング環境。
distributed processing designed to conform to ODP standards,ODP規格に準拠するように設計された分散処理
distribution transparency which masks coordination of activities amongst a configuration of objects to achieve consistency,一貫性を達成するためにオブジェクトの構成間のアクティビティの調整をマスクする配布の透明性
distribution transparency which masks differences in data representation and invocation mechanisms to enable interworking between objects,データ表現と呼び出しメカニズムの違いをマスクしてオブジェクト間の相互作用を可能にする分散の透明性
"distribution transparency which masks from an object, the ability of a system to change the location of that object",オブジェクトをマスクする分布の透明性、そのオブジェクトの位置を変更するシステムの機能
distribution transparency which masks relocation of an interface from other interfaces bound to it,インターフェースにバインドされている他のインターフェースからのインターフェースの再配置をマスクする分散透過性
distribution transparency which masks the use of a group of mutually behaviorally compatible objects to support an interface,インターフェイスをサポートするために相互に動作的に互換性のあるオブジェクトのグループの使用をマスクする配布の透明性
distribution transparency which masks the use of information about location in space when identifying and binding to interfaces,インターフェースを識別してバインドする際に、空間内の位置に関する情報の使用をマスクする分布の透明性
"distribution transparency which masks, from an object, the deactivation and reactivation of other objects (or itself)",他のオブジェクト (またはそれ自体) の非アクティブ化と再アクティブ化をオブジェクトからマスクする配布の透明性
"distribution transparency which masks, from an object, the failure and possible recovery of other objects (or itself), to enable fault tolerance",フォールト トレランスを可能にするために、他のオブジェクト (またはそれ自体) の障害と回復の可能性をオブジェクトからマスクする分散透過性
"Disturbances are limited to external faults or events, rather than introduced internal faults that would require modifying the application or OS code.",障害は、アプリケーションや OS コードの変更が必要となるような内部障害ではなく、外部障害やイベントに限定されます。
"diverse entities such as funding, personnel, facilities, capital equipment, tools, and utilities such as power, water, fuel and communication infrastructures",資金、人員、設備、資本設備、ツール、電力、水道、燃料、通信インフラなどのユーティリティなどの多様なエンティティ
"dividing action, where the enabled chains must (subject to failure) eventually join each other, i.e., the enabled chains cannot join other chains and they cannot terminate separately.",分割アクション。有効なチェーンは最終的に (失敗する可能性があります) 互いに結合する必要があります。つまり、有効なチェーンは他のチェーンに結合できず、個別に終了することもできません。
"dividing action, where the enabled chains will not join",分割アクション。有効なチェーンは結合されません。
document attached to a product for providing complementary information in order to assist understanding and to avoid inappropriate usage of the product,製品の理解を助け、不適切な使用を避けるために補足情報を提供するために製品に添付される文書
document containing any combination of requirements or regulations to be met by a ready to use software product (RUSP),すぐに使用できるソフトウェア製品 (RUSP) が満たすべき要件または規制の任意の組み合わせを含む文書
"document describing the scope, approach, resources, and schedule of intended testing activities",対象となるテスト活動の範囲、アプローチ、リソース、スケジュールを説明する文書
document describing the status of each test data requirement,各テストデータ要件のステータスを説明する文書
document for providing descriptions of the process and outcomes of the benchmarking activity,ベンチマーク活動のプロセスと結果を説明するための文書
document identifying test items,試験項目を特定する文書
document of the results of an instance of benchmarking,ベンチマークのインスタンスの結果の文書
document published by ISO or IEC containing collected data of a different kind from that normally published as an International Standard or Technical Specification,ISO または IEC によって発行され、通常国際規格または技術仕様として発行されるものとは異なる種類の収集データを含む文書
"document published by ISO or IEC giving rules, orientation, advice or recommendations relating to international standardization",ISO または IEC によって発行され、国際標準化に関する規則、方向性、アドバイス、または推奨事項を規定する文書
document reporting on any event that occurs during the testing process which requires investigation,調査が必要なテストプロセス中に発生したイベントについて報告する文書
"document setting out the specific maintainability practices, resources and sequence of activities relevant to software",ソフトウェアに関連する特定の保守性の実践、リソース、および一連のアクティビティを説明する文書
"document setting out the specific maintenance practices, resources, and sequence of activities relevant to maintaining a software product",ソフトウェア製品の保守に関連する特定の保守手順、リソース、および一連の活動を説明する文書
"document specifying a sequence of actions for the execution of a test2. document specifying one or more test procedures, which are collections of test cases to be executed for a particular objective",test2 を実行するための一連のアクションを指定する文書。特定の目的のために実行されるテスト ケースの集合である 1 つ以上のテスト手順を指定する文書
"document specifying inputs, predicted results, and a set of execution conditions for a test item",テスト項目の入力、予測結果、および一連の実行条件を指定する文書
document specifying the features to be tested and their corresponding test conditions,テストする機能とそれに対応するテスト条件を指定する文書
"document specifying the qualifications, experience and training needs of project staff",プロジェクトスタッフの資格、経験、トレーニングの必要性を明記した文書
"document stating properties of software, with the main purpose of helping potential acquirers in the evaluation of the suitability for themselves of the software before purchasing it",ソフトウェアの特性を記載した文書。主な目的は、潜在的な取得者がソフトウェアを購入する前にソフトウェアの適合性を評価できるようにすることです。
document stating results achieved or providing evidence of activities performed,達成された結果を記載する文書、または実行された活動の証拠を提供する文書
document that accompanies and identifies a given version of a system or component,システムまたはコンポーネントの特定のバージョンに付随し、それを識別する文書
document that describes a use case,ユースケースを説明したドキュメント
"document that describes how a specific agreement will be administered to monitor delivery of required documentation and performance of the statement of work, to evaluate performance, and to control changes",必要な文書の提供と作業明細書のパフォーマンスを監視し、パフォーマンスを評価し、変更を管理するために、特定の契約がどのように管理されるかを説明する文書
"document that describes how to use a functional unit, and that can include description of the rights and responsibilities of the user, the owner, and the supplier of the unit",機能単位の使用方法を説明し、ユーザー、所有者、および単位の供給者の権利と責任の説明を含む文書。
document that describes the characteristics of a planned or existing product for consideration by potential customers or users,潜在的な顧客やユーザーが検討できるように、計画されている製品または既存の製品の特徴を説明する文書
document that describes the conduct and results of the evaluation carried out for a Ready to Use software product (RUSP),Ready to Use ソフトウェア製品 (RUSP) に対して実行された評価の実施と結果を説明する文書
document that describes the conduct and results of the testing carried out for a system or component,システムまたはコンポーネントに対して実行されたテストの実施と結果を説明する文書
document that describes the content and format of the permanent or semi-permanent data necessary for the software to carry out its functions,ソフトウェアがその機能を実行するために必要な永続的または半永続的なデータの内容と形式を説明する文書
document that describes the design of a system or component,システムまたはコンポーネントの設計を説明する文書
document that describes the exact detailed configuration of a computer program,コンピュータプログラムの正確な詳細な構成を説明する文書
document that describes the status of each environment requirement,各環境要件のステータスを説明する文書
document that describes the structure and functions of a program in sufficient detail to permit programming and to facilitate maintenance,プログラミングを可能にし、メンテナンスを容易にするために、プログラムの構造と機能を十分に詳細に説明した文書
document that describes the structure of XML information,XML情報の構造を記述した文書
document that describes the technical and management approach to be followed for a project,プロジェクトで従うべき技術的および管理的アプローチを説明する文書
document that describes the technical and management approach to be followed to test a system or component,システムまたはコンポーネントをテストするために従うべき技術的および管理的アプローチを説明した文書
"document that expresses the generic requirements for the testing to be performed on all the projects run within the organization, providing detail on how the testing is to be performed",組織内で実行されるすべてのプロジェクトに対して実行されるテストの一般的な要件を表現し、テストの実行方法の詳細を示す文書
document that presents evaluation results and other information relevant to an evaluation,評価結果および評価に関連するその他の情報を示す文書
document that presents the information necessary to employ a system or component to obtain desired results,システムまたはコンポーネントを使用して望ましい結果を得るために必要な情報を示す文書
"document that presents the information necessary to execute diagnostic procedures for a system or component, identify malfunctions, and remedy those malfunctions",システムまたはコンポーネントの診断手順を実行し、誤動作を特定し、それらの誤動作を修復するために必要な情報を示す文書
"document that provides information about testing for an organization, i.e. information that is not project-specifi",組織のテストに関する情報、つまりプロジェクト固有ではない情報を提供する文書
document that provides the information necessary to develop or modify software for a given computer system,特定のコンピュータ システム用のソフトウェアを開発または変更するために必要な情報を提供する文書
document that provides the information necessary to initiate and operate a system or component,システムまたはコンポーネントを開始および操作するために必要な情報を提供する文書
"document that provides the information necessary to install a system or component, set initial parameters, and prepare the system or component for operational use",システムまたはコンポーネントのインストール、初期パラメータの設定、およびシステムまたはコンポーネントの運用準備に必要な情報を提供する文書
document that provides the information necessary to maintain a program,プログラムを保守するために必要な情報を提供する文書
document that provides the information necessary to service and maintain an operational system or component throughout its life cycle,運用中のシステムまたはコンポーネントをそのライフサイクル全体にわたって保守および保守するために必要な情報を提供する文書
document that records details of the execution of one or more test procedures,1 つ以上のテスト手順の実行の詳細を記録する文書
"document that records project status, usually showing tasks completed against total number of tasks",プロジェクトのステータスを記録する文書。通常はタスクの総数に対して完了したタスクが表示されます。
document that specifies the design that production copies of a system or component must implement,システムまたはコンポーネントの製品コピーが実装する必要がある設計を指定する文書
document that specifies the functions that a system or component must perform,システムまたはコンポーネントが実行する必要がある機能を指定する文書
document that specifies the performance characteristics that a system or component must possess,システムまたはコンポーネントが備えなければならないパフォーマンス特性を指定する文書
document that specifies the requirements for a system or component,システムまたはコンポーネントの要件を指定する文書
document type definition,ドキュメントタイプの定義
"document used by the acquirer that includes the needs and expectations, the scope, objectives and deliverables",買収者が使用する、ニーズと期待、範囲、目的、成果物を含む文書
document used by the acquirer to describe and specify the tasks to be performed under the contract,契約に基づいて実行されるタスクを説明および指定するために取得者が使用する文書
"document used in configuration management, describing the development status of a configuration item based on the results of configuration audits and design reviews",構成管理で使用される文書。構成監査と設計レビューの結果に基づいて、構成アイテムの開発状況を説明します。
"document used in configuration management, providing an accounting of the configuration items that make up a product",構成管理で使用される文書。製品を構成する構成アイテムの説明を提供します。
document used to identify and describe problems detected in a product,製品で検出された問題を特定し説明するために使用される文書
"Document usually consists of various formats (e.g. textual descriptions, numeric values, statistical charts and tables), and is exchanged via various media (e.g. electronic documents, electronic data set, printed documents, and embedded data within specific computer software).",文書は通常、さまざまな形式 (テキストによる説明、数値、統計チャートや表など) で構成され、さまざまな媒体 (電子文書、電子データセット、印刷文書、特定のコンピューター ソフトウェア内の埋め込みデータなど) を介して交換されます。
"document, established by consensus and approved by a recognized body, that provides, for common and repeated use, rules, guidelines or characteristics for activities or their results, aimed at the achievement of the optimum degree of order in a given context",コンセンサスによって確立され、認められた機関によって承認された文書。特定の状況において最適な程度の秩序を達成することを目的として、活動またはその結果に関する規則、ガイドラインまたは特性を共通かつ繰り返し使用するために提供する。
"document, spreadsheet, or other automated tool used to identify related items in documentation and software, such as requirements with associated tests [ISO/IEC/IEEE 29119-1:2013 Software and systems engineering — Software testing — Part 1: Concepts and definitions, 4.90",関連するテストの要件など、ドキュメントやソフトウェアの関連項目を特定するために使用される文書、スプレッドシート、またはその他の自動ツール [ISO/IEC/IEEE 29119-1:2013 ソフトウェアおよびシステム エンジニアリング — ソフトウェア テスト — パート 1: 概念と定義、4.90]
"documentation describing plans for, or results of, the testing of a system or component",システムまたはコンポーネントのテストの計画または結果を説明する文書
"documentation for users of a system, including a system description and procedures for using the system to obtain desired results",システムの説明やシステムを使用して望ましい結果を得る手順など、システムのユーザー向けの文書
documentation of a set of one or more test cases,1 つ以上のテスト ケースのセットの文書化
"documentation of the essential requirements (functions, performance, design constraints, and attributes) of the software and its external interfaces",ソフトウェアとその外部インターフェイスの必須要件 (機能、パフォーマンス、設計制約、属性) の文書化
"documentation of the occurrence, nature, and status of an incident",インシデントの発生、性質、ステータスの文書化
"documentation specifying inputs, predicted results, and a set of execution conditions for a test item",テスト項目の入力、予測結果、および一連の実行条件を指定する文書
"documentation specifying the details of the test approach for a system, software, or hardware feature or combination of features and identifying the associated tests",システム、ソフトウェア、ハードウェアの機能、または機能の組み合わせに対するテスト手法の詳細を指定し、関連するテストを特定する文書
documentation that can be used independently of the software,ソフトウェアとは独立して使用できるドキュメント
documentation that describes the architecture and design interfaces between system and components,システムとコンポーネント間のアーキテクチャと設計インターフェイスを説明するドキュメント
"documentation that is either provided in printed form, or provided in electronic form for the customer or user to print",印刷形式で提供されるか、顧客またはユーザーが印刷できるように電子形式で提供されるドキュメント
documentation that is intended to be read on the computer screen by the user while using the software,ソフトウェアの使用中にユーザーがコンピュータ画面上で読むことを目的としたドキュメント
"documentation that results from system design defining the organization, essential characteristics and the hardware and software requirements of the system",システムの組織、重要な特性、ハードウェアとソフトウェアの要件を定義するシステム設計から得られる文書
"documentation that sets forth the functional, interface, performance, and design constraint requirements for the test unit.",テストユニットの機能、インターフェイス、パフォーマンス、および設計上の制約要件を説明する文書。
documentation that specifies a sequence of actions for the execution of a test,テストを実行するための一連のアクションを指定するドキュメント
documentation that specifies requirements for interfaces between or among systems and components,システムとコンポーネント間のインターフェースの要件を指定する文書
"documentation, scripts, inputs, expected results, files, databases, environment, and any additional software or utilities used in the course of testing",ドキュメント、スクリプト、入力、期待される結果、ファイル、データベース、環境、およびテスト中に使用される追加のソフトウェアまたはユーティリティ
documented agreement between the service provider and customer that identifies services and service targets,サービスとサービス対象を特定する、サービスプロバイダーと顧客の間の文書化された合意
documented expression of a set of activities performed to achieve a given purpose,与えられた目的を達成するために実行される一連の活動を文書化して表現したもの
"documented formal hierarchical tabulation of the physical assemblies, subassemblies, and components needed to fabricate a product",製品の製造に必要な物理アセンブリ、サブアセンブリ、およびコンポーネントの文書化された正式な階層表
documented objective evidence of all activities performed and of all results achieved within the evaluation process,実行されたすべての活動および評価プロセス内で達成されたすべての結果の文書化された客観的証拠
"documented set of characteristics of a program's work products that if satisfied, forms a sufficient basis for judging each product's content to be acceptable to support a successful review or audit",プログラムの作業成果物の一連の文書化された特性。これが満たされていれば、レビューや監査の成功をサポートするために各成果物の内容が許容可能であると判断するための十分な基礎を形成します。
documented set of mandatory requirements for a system,システムの必須要件を文書化したセット
documented software size measurement method submitted for conformity evaluation,適合性評価のために提出された文書化されたソフトウェア サイズ測定方法
"documents and data on prior projects including project files, records, correspondence, closed contracts, and closed projects",プロジェクト ファイル、記録、通信、終了した契約、終了したプロジェクトなど、以前のプロジェクトに関する文書とデータ
"Documents include both paper and electronic documents. The documentation can be in any form or type of medium. Documents, except for records, state the intent to be achieved.",ドキュメントには、紙のドキュメントと電子ドキュメントの両方が含まれます。ドキュメントは、あらゆる形式または種類の媒体にすることができます。記録を除く文書には、達成すべき意図が記載されています。
"documents, requirements specifications, test cases, source code, installation information, and read-me files",ドキュメント、要件仕様、テスト ケース、ソース コード、インストール情報、および Read-me ファイル
does not include acquisition of consumable supplies or of items to be included in finished products for sale,消耗品や販売用の完成品に含まれる品目の取得は含まれません。
"doesn't really mean doing nothing at all. Instead, it means putting the money into readily available investments that give a predetermined rate of return (bonds, interest bearing accounts, put into a more profitable part of the organization)",実際には何もしないという意味ではありません。代わりに、あらかじめ決められた収益率が得られる、すぐに利用できる投資（債券、有利子口座、組織のより収益性の高い部分に投資される）に資金を投入することを意味します。
"doing what has been asked or ordered, as required by rule or law",規則または法律の要求に従って、求められたことまたは命令されたことを行うこと
"domain features, domain models, domain requirements specification, domain architecture, domain components, domain test cases, domain process description",ドメイン機能、ドメイン モデル、ドメイン要件仕様、ドメイン アーキテクチャ、ドメイン コンポーネント、ドメイン テスト ケース、ドメイン プロセスの説明
domain in which the members are obliged to follow a security policy established and administered by a security authority,メンバーがセキュリティ当局によって確立および管理されるセキュリティ ポリシーに従うことが義務付けられているドメイン
Domain Name Service,ドメインネームサービス
"domain responsible for all of the tasks and activities aimed at managing, maintaining, and renewing the IT infrastructure of the information system, including the operation of the information system",情報システムの運用を含む、情報システムの IT インフラストラクチャの管理、保守、更新を目的としたすべてのタスクと活動を担当するドメイン
"domain responsible for all of the tasks and activities that are aimed at managing, supporting, maintaining, and renewing existing applications and related data structures",既存のアプリケーションと関連データ構造の管理、サポート、保守、更新を目的としたすべてのタスクとアクティビティを担当するドメイン
domain responsible for all of the tasks and activities that are aimed at supporting the end users in the use of the application and at acting as the customer of the IT organizations,アプリケーションの使用においてエンド ユーザーをサポートし、IT 組織の顧客として機能することを目的としたすべてのタスクとアクティビティを担当するドメイン
domain which is a subset of a given domain,特定のドメインのサブセットであるドメイン
"double data rate 3, which transfers data 2 to the third power (8 times) faster than DDR",ダブルデータレート 3。データ 2 の 3 乗 (8 倍) を DDR よりも高速に転送します。
double data rate 4; data transfer is 2 to the 4th power = 16 times that of a SDRAM,ダブルデータレート4;データ転送量は 2 の 4 乗 = SDRAM の 16 倍です
double data rate synchronous dynamic random access memory unit with higher performance because it transfers data 2 to the third power (8) times (8 consecutive words) in one internal clock cycle.,1 内部クロック サイクルでデータ 2 の 3 乗 (8) 回 (連続 8 ワード) を転送するため、より高性能なダブル データ レートのシンクロナス ダイナミック ランダム アクセス メモリ ユニットです。
"double data rate synchronous dynamic random access memory unit with higher performance than DDR SDRAM, because the device transfers data four times (four consecutive words) in one internal clock cycle.",デバイスは 1 内部クロック サイクルで 4 回 (連続 4 ワード) データを転送するため、DDR SDRAM よりも高いパフォーマンスを備えたダブル データ レートの同期ダイナミック ランダム アクセス メモリ ユニットです。
"double data rate synchronous dynamic random access memory unit with higher performance, because it transfers data at the rate of 2 to the 4th power (16) times (16 consecutive words) in one internal clock cycle",1 内部クロック サイクルで 2 の 4 乗 (16) 倍 (16 連続ワード) のレートでデータを転送するため、より高性能なダブル データ レートの同期ダイナミック ランダム アクセス メモリ ユニット
double data rate x 2 (twice as fast as DDR),ダブルデータレート x 2 (DDR の 2 倍の速度)
DRAM with memory access driven by a clock that is synchronized with the processor's memory bus clock,プロセッサのメモリ バス クロックと同期したクロックによってメモリ アクセスが駆動される DRAM
dual entity that is a class and an object at the same time,クラスであると同時にオブジェクトである二重エンティティ
dual inline package,デュアルインラインパッケージ
"Due to technology upgrades, some archival pages cannot be readily rendered unless they are upgraded along with active pages",テクノロジーのアップグレードにより、一部のアーカイブ ページは、アクティブなページと一緒にアップグレードしない限り、すぐにレンダリングできません。
"dummy characters, words, or records used to fill out a fixed-length block of dat",データの固定長ブロックを埋めるために使用されるダミーの文字、単語、またはレコード
"dummy routines or files, test case generators, software monitors, stubs",ダミーのルーチンまたはファイル、テスト ケース ジェネレーター、ソフトウェア モニター、スタブ
dump of designated storage location areas only,指定された保管場所エリアのみのダンプ
dump that is produced before or after the execution of a computer program,コンピュータプログラムの実行前または実行後に生成されるダンプ
dump that is produced during the execution of a computer program,コンピュータプログラムの実行中に生成されるダンプ
dump that is produced upon abnormal termination of a computer program,コンピュータプログラムの異常終了時に生成されるダンプ
"duplicate copy of a master site maintained on a different host typically to provide redundancy, higher performance, or local access",通常、冗長性、パフォーマンスの向上、またはローカル アクセスを提供するために、別のホスト上に維持されるマスター サイトの複製コピー
"During the execution of an endeavor, developers create a number of endeavor elements, such as tasks, models, classes, documents.",エンデバーの実行中に、開発者はタスク、モデル、クラス、ドキュメントなどの多数のエンデバー要素を作成します。
"During this period, developers will commit code they have been working on but are discouraged from starting on new elements. If a freeze lasts for a long time, a slush might be introduced to ease its passing by allowing in some extra elements.",この期間中、開発者は作業中のコードをコミットしますが、新しい要素に着手することは控えられます。フリーズが長時間続く場合は、いくつかの追加要素を許可することでフリーズの通過を容易にするためにスラッシュが導入される場合があります。
"dynamic analysis technique that relies on observation of system or component behavior during execution, without need for post-execution analysis, to detect errors, violations of development standards, and other problem",実行後の分析を必要とせず、実行中のシステムまたはコンポーネントの動作の観察に依存して、エラー、開発標準違反、その他の問題を検出する動的分析手法
"dynamic analysis, dynamic binding",動的解析、動的バインディング
dynamic dump of the contents of one or more specified storage areas,1 つ以上の指定されたストレージ領域の内容の動的ダンプ
dynamic invocation interface,動的呼び出しインターフェース
dynamic random access memory,ダイナミックランダムアクセスメモリ
dynamic random access memory unit with an automatic refresh circuit on the unit,ユニット上に自動リフレッシュ回路を備えたダイナミック ランダム アクセス メモリ ユニット
dynamic schema and an invariant schema defining transactions and their dependencies,トランザクションとその依存関係を定義する動的スキーマと不変スキーマ
dynamic test process for establishing and maintaining a required test environment,必要なテスト環境を確立および維持するための動的テスト プロセス
"dynamic test process for executing test procedures created in the test design and implementation process in the prepared test environment, and recording the results",準備されたテスト環境でテスト設計および実装プロセスで作成されたテスト手順を実行し、結果を記録する動的テスト プロセス
dynamic test process for reporting to the relevant stakeholder's issues requiring further action that were identified during the test execution process,テスト実行プロセス中に特定された追加のアクションが必要な関連する利害関係者の問題を報告するための動的テスト プロセス
dynamic testing in which the tester's actions are not prescribed by written instructions in a test case,テスターのアクションがテスト ケース内の書面による指示によって規定されていない動的テスト
dynamic testing in which the tester's actions are prescribed by written instructions in a test case,テストケース内の書面による指示によってテスターのアクションが規定される動的テスト
dynamic testing in which the tests are derived from an examination of the structure of the test item,テスト項目の構造の検査からテストが派生する動的テスト
"dynamic verification that a program provides expected behaviors on a finite set of test cases, suitably selected from the usually infinite executions domain",通常は無限の実行領域から適切に選択された有限セットのテスト ケースで、プログラムが期待される動作を提供することを動的に検証する
"Each activity consists of tasks. The life cycle processes can overlap one another. For V&V purposes, no process is concluded until its development products are verified and validated according to the defined tasks in the validation and verification plan.",各アクティビティはタスクで構成されます。ライフサイクル プロセスは互いに重複する可能性があります。 V&V の目的では、検証および検証計画で定義されたタスクに従って開発製品が検証および検証されるまで、プロセスは終了しません。
"Each diagram is a single unit of an IDEF0 model that presents the top-level function that is the subject of the model (the A-0 context diagram), presents the context of the subject function (other context diagrams), or presents the details of a box (decomposition diagrams).",各図は、IDEF0 モデルの単一ユニットであり、モデルの主題である最上位関数 (A-0 コンテキスト図)、主題関数のコンテキスト (他のコンテキスト図)、またはボックスの詳細 (分解図) を示します。
Each factor has a degree of influence (DI) between 1 and 5.,各要因の影響度 (DI) は 1 ～ 5 です。
Each included data element describes a complementary aspect of the same object of interest. A data group is characterized by its persistence.,含まれる各データ要素は、同じ対象オブジェクトの補完的な側面を記述します。データ グループは、その永続性によって特徴付けられます。
"Each instance of a subclass is an instance of each superclass. A subclass typically specifies additional, different responsibilities to those of its superclasses or overrides superclass responsibilities to provide a different realization.",サブクラスの各インスタンスは、各スーパークラスのインスタンスです。サブクラスは通常、スーパークラスの責任に対して追加の異なる責任を指定するか、スーパークラスの責任をオーバーライドして別の実現を提供します。
Each instance of an entity can be specifically identified by the value of the attribute(s) participating in its primary key [key style],エンティティの各インスタンスは、主キー [キー スタイル] に含まれる属性の値によって明確に識別できます。
Each level builds on the capability of the level below.,各レベルは、その下のレベルの機能に基づいて構築されます。
Each procedure part consists of one or more operations to be performed or can be null.,各プロシージャ部分は、実行される 1 つ以上の操作で構成されます。または null にすることもできます。
Each segment encapsulates independent state and is capable of being independently activated. Each segment provides at least one facet.,各セグメントは独立した状態をカプセル化しており、独立してアクティブ化することができます。各セグメントは少なくとも 1 つのファセットを提供します。
"Each specification defines the functional characteristics that are allocated from those of the higher-level configuration item, establishes the tests required to demonstrate achievement of its allocated functional characteristics, delineates necessary interface requirements with other associated configuration items, and establishes design constraints, if any.",各仕様は、上位レベルの構成アイテムの機能特性から割り当てられる機能特性を定義し、割り当てられた機能特性の達成を実証するために必要なテストを確立し、他の関連する構成アイテムとの必要なインターフェイス要件を概説し、設計上の制約がある場合はそれを確立します。
"Each use can include all or part of the product and can involve its modification. This term can be applied to any software or system product (for example, requirements or architectures), not just to software or system itself.",それぞれの使用には、製品のすべてまたは一部が含まれる場合があり、その変更が含まれる場合があります。この用語は、ソフトウェアやシステム自体だけでなく、あらゆるソフトウェアやシステム製品 (要件やアーキテクチャなど) に適用できます。
early finish date,早い終了日
early start date,早い開始日
earned value,獲得価値
earned value management,獲得価値管理
"ease with which a hardware system or component can be retained in, or restored to, a state in which it can perform its required functions",ハードウェア システムまたはコンポーネントを、必要な機能を実行できる状態に維持または復元することが容易になります。
"ease with which a software system or component can be modified to change or add capabilities, correct faults or defects, improve performance or other attributes, or adapt to a changed environment",ソフトウェア システムまたはコンポーネントを変更して、機能を変更または追加したり、障害や欠陥を修正したり、パフォーマンスやその他の属性を改善したり、変化した環境に適応したりする容易さ
ease with which a system can be changed without introducing defects2. degree to which a product or system can be effectively and efficiently modified without introducing defects or degrading existing product quality,欠陥を導入することなくシステムを変更できる容易さ2.欠陥を導入したり、既存の製品の品質を低下させたりすることなく、製品またはシステムを効果的かつ効率的に変更できる程度
ease with which a system can be comprehended at both the system-organizational and detailed-statement level,システムの組織レベルと詳細な記述レベルの両方でシステムを理解することの容易さ
ease with which a system or component can be modified for use in applications or environments other than those for which it was specifically designed,システムまたはコンポーネントを、特別に設計されたもの以外のアプリケーションまたは環境で使用するために変更する容易さ
ease with which a system or component can be modified to increase its storage or functional capacity,システムまたはコンポーネントを変更してストレージまたは機能容量を増やすことが容易になること
ease with which a system or component can be transferred from one hardware or software environment to another,システムまたはコンポーネントをあるハードウェアまたはソフトウェア環境から別の環境に簡単に移行できる
"ease with which a system's source code can be read and understood, especially at the detailed, statement level",システムのソースコード、特に詳細なステートメントレベルでの読みやすさと理解のしやすさ
edge of a diagram in a diagram page,図ページ内の図の端
"effect (change or non-change), usually associated with an event or condition or with the system and usually allowed, facilitated, caused, prevented, changed, or contributed to by the event, condition, or system",効果（変化または非変化）。通常はイベントまたは条件、またはシステムに関連付けられており、通常はイベント、条件、またはシステムによって許可、促進、引き起こされ、防止、変更、または寄与されます。
effect of uncertainty on objectives,不確実性が目標に及ぼす影響
"Effective use rights take into account any contracts and all applicable licenses, including full licenses, upgrade licenses, and maintenance agreements.",有効な使用権には、フル ライセンス、アップグレード ライセンス、保守契約を含む、あらゆる契約および該当するすべてのライセンスが考慮されます。
"effort to develop software products, expressed in units of staff-hour",ソフトウェア製品の開発にかかる労力（スタッフ時間単位で表す）
either of the digits 0 or 1 when used in the binary numeration system,二進法で使用される場合は、数字 0 または 1 のいずれか
elapsed time between the application of a stimulus to an input interface and the appearance of the response at an output interface,入力インターフェースへの刺激の適用と出力インターフェースでの応答の出現の間の経過時間
elapsed time between the end of a prompt or message generated by an interactive system and the beginning of a human user's response,対話型システムによって生成されたプロンプトまたはメッセージの終わりから人間のユーザーの応答が始まるまでの経過時間
elapsed time between the end of an inquiry or command to an interactive computer system and the beginning of the system's response,対話型コンピュータ システムへの問い合わせまたはコマンドの終了からシステムの応答の開始までの経過時間
elapsed time between the submission of a job to a batch processing system and the return of completed output,バッチ処理システムにジョブを送信してから完了した出力が返されるまでの経過時間
electric erasable programmable read only memory,電気的に消去可能なプログラマブル読み取り専用メモリ
electromagnetic compatibility,電磁適合性
electromagnetic interference,電磁干渉
"electronic circuit on a microcomputer that produces a periodic electronic signal, often used for a device clock",周期的な電子信号を生成するマイクロコンピューター上の電子回路。デバイスのクロックによく使用されます。
electronic circuit with one or two stable states,1 つまたは 2 つの安定状態を持つ電子回路
electronic data interchange,電子データ交換
electronic design automation,電子設計の自動化
electronic or printed body of material that provides information to users of software,ソフトウェアのユーザーに情報を提供する電子または印刷物本体
electronic publishing using a microcomputer,マイコンを使った電子出版
"electronic unit that triggers a reset of an embedded system or other corrective action if the main program, due to some fault condition, fails to periodically signal it",何らかの障害状態によりメインプログラムが定期的に信号を送信できなかった場合に、組み込みシステムのリセットやその他の修正措置をトリガーする電子ユニット
electronic unit to produce uniform timed signals,均一なタイミング信号を生成する電子ユニット
electronic unit used for serial communications that translates data between parallel and serial forms,データをパラレル形式とシリアル形式の間で変換するシリアル通信に使用される電子ユニット
"element in a specification defined in order to allow incorporation of future constraints, together with rules determining the allowed form of acceptable constraints and the circumstances in which such constraints can be applied",将来の制約を組み込むことを可能にするために定義された仕様内の要素。許容可能な制約の許容形式とそのような制約が適用できる状況を決定するルールとともに定義される。
element of a data processing system needed to perform required operations,必要な操作を実行するために必要なデータ処理システムの要素
"element of a design view that is structurally, functionally, or otherwise distinct from other elements, or plays a different role relative to other design entities",構造的、機能的、またはその他の点で他の要素とは異なる、または他のデザイン エンティティに対して異なる役割を果たすデザイン ビューの要素
"element of a design view that names a characteristic or property of a design entity, design relationship, or design constraint",デザイン エンティティ、デザイン関係、またはデザイン制約の特性またはプロパティを指定するデザイン ビューの要素
element of a design view that names a connection or correspondence between design entities,デザイン エンティティ間の接続または対応を指定するデザイン ビューの要素
"element of a design view that names and specifies a rule or restriction on a design entity, design attribute, or design relationship",デザイン エンティティ、デザイン属性、またはデザイン関係に名前を付けてルールまたは制限を指定するデザイン ビューの要素
element of a diagram,図の要素
element of a meta-model from which model elements are instantiated,モデル要素のインスタンス化元となるメタモデルの要素
element of a step that a user performs during a procedure,ユーザーが手順中に実行するステップの要素
"element of computer resource allocation, consisting of assigning storage areas to specific jobs and performing related procedures, such as transfer of data between main and auxiliary storage, to support the assignments made",コンピュータリソース割り当ての要素。ストレージ領域を特定のジョブに割り当て、行われた割り当てをサポートするために主ストレージと補助ストレージ間のデータ転送などの関連手順を実行することで構成されます。
element of computer storage that can hold a group of bits as in (1),(1) のようなビットのグループを保持できるコンピュータ記憶装置の要素
element of computer storage that can hold a sequence of bits or characters as in (1),(1) のようなビットまたは文字のシーケンスを保持できるコンピューター記憶域の要素
element of configuration management that consists of the recording and reporting of information needed to manage a configuration effectively,構成を効果的に管理するために必要な情報の記録と報告からなる構成管理の要素。
"element of configuration management, consisting of selecting the configuration items for a system and recording their functional and physical characteristics in technical documentation",構成管理の要素。システムの構成アイテムを選択し、それらの機能的および物理的特性を技術文書に記録することで構成されます。
"element of configuration management, consisting of the evaluation, coordination, approval or disapproval, and implementation of changes to configuration items after formal establishment of their configuration identification",構成管理の要素。構成識別が正式に確立された後の、構成アイテムに対する変更の評価、調整、承認または不承認、および実装で構成されます。
element of work performed during the implementation of a process,プロセスの実装中に実行される作業の要素
element that can be present in a tag,タグ内に存在できる要素
element that defines and prescribes what a software or system is composed of,ソフトウェアまたはシステムが何で構成されているかを定義および規定する要素
element that is not required to be present in a tag but is strongly encouraged to be included by a tag creator,タグ内に存在する必要はないが、タグ作成者によって含めることが強く推奨される要素
element that is required to be present in a tag in order to claim conformance with a standard,標準への準拠を主張するためにタグ内に存在する必要がある要素
"element that, alone or in combination, has the intrinsic potential to give rise to risk",単独または組み合わせて、リスクを引き起こす本質的な潜在力を持つ要素
element within a tag that provides additional information beyond that documented explicitly in the standard,標準で明示的に文書化されているものを超える追加情報を提供するタグ内の要素
"elementary component of a set of functional user requirements, comprising a unique, cohesive and independently executable set of data movements",一連の機能的ユーザー要件の基本コンポーネントであり、独自で一貫性があり、独立して実行可能なデータ移動のセットで構成されます。
elementary process that processes data or control information sent from outside the boundary,境界外から送信されたデータや制御情報を処理する基本プロセス
elementary process that provides functionality to the user to process data,データを処理するための機能をユーザーに提供する基本プロセス
elementary process that sends data or control information outside the application's boundary and includes additional processing logic beyond that of an external inquiry,アプリケーションの境界の外にデータまたは制御情報を送信し、外部問い合わせを超える追加の処理ロジックを含む基本プロセス
elementary process that sends data or control information outside the boundary,境界の外にデータまたは制御情報を送信する基本プロセス
elementary unit of requirements and specifications defined and used for measurement purposes,測定目的で定義および使用される要件と仕様の基本単位
elements in the body of an HTML document providing administrative and/or navigational facilities for the user or administrator,ユーザーまたは管理者に管理機能やナビゲーション機能を提供する HTML ドキュメント本文の要素
"Elements include simulators, code analyzers, test case generators, path analyzers, and elements used in the software engineering environment",要素には、シミュレータ、コード アナライザ、テスト ケース ジェネレータ、パス アナライザ、およびソフトウェア エンジニアリング環境で使用される要素が含まれます。
embedded in an MCU,MCUに組み込まれている
"embedded, context-sensitive information that is displayed when invoked by user action",ユーザーアクションによって呼び出されたときに表示される、埋め込まれたコンテキスト依存情報
embedding one construct inside another,ある構造を別の構造の中に埋め込む
Emergency maintenance is a part of corrective maintenance.,緊急メンテナンスは事後メンテナンスの一部です。
Emulated users submit only these types of tasks to the SUT.,エミュレートされたユーザーは、これらのタイプのタスクのみを SUT に送信します。
encapsulation of data and services that manipulate that data,データとそのデータを操作するサービスのカプセル化
encoded logic of the software product,ソフトウェア製品のエンコードされたロジック
"end users, end user organizations, supporters, developers, producers, trainers, maintainers, disposers, acquirers, supplier organizations and regulatory bodies, interested parties, decision-maker",エンドユーザー、エンドユーザー組織、サポーター、開発者、プロデューサー、トレーナー、保守者、処分者、取得者、サプライヤー組織および規制機関、利害関係者、意思決定者
endeavor with defined start and finish criteria undertaken to create a product or service in accordance with specified resources and requirements,指定されたリソースと要件に従って製品またはサービスを作成するために、定義された開始基準と終了基準に基づいて努力する
energy-saving operational state for a microcontroller unit (MCU,マイクロコントローラーユニット（MCU）の省エネ動作状態
engineering and manufacturing development,エンジニアリングおよび製造開発
engineering change proposal,エンジニアリング変更提案
engineering change request,エンジニアリング変更リクエスト
engineering data requirements agreement plan,エンジニアリングデータ要件の合意計画
engineering discipline that measures the performance of computer systems and investigates methods by which that performance can be improved,コンピュータ システムのパフォーマンスを測定し、そのパフォーマンスを向上させる方法を研究する工学分野
"engineering object in a channel, placed at a boundary between <x> domains",チャネル内のエンジニアリング オブジェクト。<x> ドメイン間の境界に配置されます。
"engineering object in a channel, which communicates with other protocol objects in the same channel to achieve interaction between basic engineering objects (possibly in different clusters, possibly in different capsules, possibly in different nodes)",チャネル内のエンジニアリング オブジェクト。同じチャネル内の他のプロトコル オブジェクトと通信して、基本的なエンジニアリング オブジェクト (場合によっては異なるクラスター、場合によっては異なるカプセル、場合によっては異なるノード) 間の相互作用を実現します。
"engineering object in a channel, which interprets the interactions conveyed by the channel, and performs any necessary transformation or monitoring based on this interpretation",チャネル内のエンジニアリング オブジェクト。チャネルによって伝えられるインタラクションを解釈し、この解釈に基づいて必要な変換やモニタリングを実行します。
"engineering object in a channel, which maintains a distributed binding between interacting basic engineering objects",チャネル内のエンジニアリング オブジェクト。対話する基本的なエンジニアリング オブジェクト間の分散バインディングを維持します。
engineering object that requires the support of a distributed infrastructure,分散インフラストラクチャのサポートを必要とするエンジニアリング オブジェクト
"engineering object which coordinates processing, storage and communications functions for use by other engineering objects within the node to which it belongs",属するノード内の他のエンジニアリング オブジェクトが使用する処理、ストレージ、および通信機能を調整するエンジニアリング オブジェクト
engineering object which manages the basic engineering objects in a cluster,クラスタ内の基本的なエンジニアリング オブジェクトを管理するエンジニアリング オブジェクト
engineering object which manages the engineering objects in a capsule,カプセル内のエンジニアリングオブジェクトを管理するエンジニアリングオブジェクト
engineering parameter that provides critical performance requirements to satisfy a measure of effectiveness (MOE),有効性の尺度（MOE）を満たすための重要な性能要件を提供するエンジニアリングパラメータ
English-like statements used for lo level program design,下位レベルのプログラム設計に使用される英語のようなステートメント
"English, German",英語、ドイツ語
ensemble of software and hardware that allows a user to interact with a computer system,ユーザーがコンピュータ システムと対話できるようにするソフトウェアとハ​​ードウェアのアンサンブル
Ent that is referenced by later Ents,後の Ent によって参照される Ent
Ent which has an <entType> of Supplemental,<entType> が Supplemental である Ent
Enterprise Java Beans,エンタープライズ Java Beans
"enterprise object modeling a natural person or any other entity considered to have some of the rights, powers and duties of a natural person",自然人、または自然人の権利、権限、義務の一部を持つと考えられるその他のエンティティをモデル化したエンタープライズ オブジェクト
enterprise object that is able to fill an action role,アクションの役割を果たすことができるエンタープライズ オブジェクト
"enterprise objects representing natural persons, legal entities, governments and their parts, and other associations or groups of natural persons",自然人、法人、政府およびその一部、および自然人のその他の団体またはグループを表す企業オブジェクト
enterprise which employs fewer than 250 persons,従業員数が250人未満の企業
"enterprises which employ fewer than 250 persons and which have an annual turnover not exceeding 50 million euro, and/or an annual balance sheet total not exceeding 43 million euro)","従業員数が 250 名未満で、年間売上高が 5,000 万ユーロを超えない企業、および/または年間貸借対照表の合計が 4,300 万ユーロを超えない企業)"
entire cost to acquire an asset,資産を取得するための全コスト
"entitlement of additional rights (such as additional functionality, upgrade or support) for a previously granted software entitlement",以前に付与されたソフトウェア資格に対する追加の権利 (追加機能、アップグレード、サポートなど) の資格
entitlement schema (Ent) which encapsulates basic information about an entitlement,資格に関する基本情報をカプセル化する資格スキーマ (Ent)
Entitlements can be consolidated to simplify understanding of the current position or as the result of a licensor negotiation. The entitlement schema enables the recording of entitlement consolidations.,現在の立場を理解しやすくするために、またはライセンサーとの交渉の結果として、権利を統合することができます。資格スキーマにより、資格の統合の記録が可能になります。
"entity (enterprise, organization, department or project) having up to 25 people",最大 25 人が所属するエンティティ (企業、組織、部門、またはプロジェクト)
entity at a given level of abstraction that cannot be subdivided at that level of abstraction,特定の抽象レベルで、その抽象レベルでは細分化できないエンティティ
entity for which each instance can be uniquely identified without determining its relationship to another entity,別のエンティティとの関係を判断することなく、各インスタンスを一意に識別できるエンティティ
entity for which the unique identification of an instance depends upon its relationship to another entity,インスタンスの一意の識別が別のエンティティとの関係に依存するエンティティ
entity in a specific relationship whose instances can be related to a number of instances of another entity (child entity),特定の関係にあるエンティティ。そのインスタンスは、別のエンティティ (子エンティティ) の多数のインスタンスに関連付けることができます。
entity in a specific relationship whose instances can be related to zero or one instance of the other entity (parent entity),特定の関係にあるエンティティ。そのインスタンスは、他のエンティティ (親エンティティ) の 0 つまたは 1 つのインスタンスに関連付けることができます。
entity issuing certificates of qualification in conformance with ISO/IEC 24773:2008,ISO/IEC 24773:2008 に準拠した資格証明書を発行する団体
"entity of hardware or software, or both, capable of accomplishing a specified purpose",指定された目的を達成できるハードウェアまたはソフトウェア、またはその両方の実体
entity of the user interface that is presented to the user by the software,ソフトウェアによってユーザーに表示されるユーザー インターフェイスのエンティティ
entity that can adversely act on property-of-interest,利益財産に悪影響を与える可能性のある事業体
"entity that exists in a three-dimensional form and, by association, implies similar properties or behavior to software functions",3 次元形式で存在し、関連性によってソフトウェア機能と同様の特性または動作を暗示するエンティティ
entity that initially creates a tag,最初にタグを作成するエンティティ
entity that initially creates an Ent,最初に Ent を作成するエンティティ
entity that is possibly an actual parameter in a request,リクエスト内の実際のパラメータである可能性があるエンティティ
entity that is ready for use,使用する準備ができているエンティティ
entity that packages or bundles software created by others,他人が作成したソフトウェアをパッケージ化またはバンドルするエンティティ
entity that performs the operations of a system,システムの操作を実行するエンティティ
entity that uses an entitlement of a software package,ソフトウェアパッケージの権利を使用するエンティティ
entity type that contains attributes which further describe a many-to-many relationship between two other entity types,他の 2 つのエンティティ タイプ間の多対多の関係をさらに記述する属性を含むエンティティ タイプ
entity type that further describes one or more attributes of another entity type,別のエンティティ タイプの 1 つ以上の属性をさらに説明するエンティティ タイプ
entity used to represent a relationship between other entities,他のエンティティ間の関係を表すために使用されるエンティティ
entity whose instances are classified into one or more subtypes or subclassifications (category entities),インスタンスが 1 つ以上のサブタイプまたは下位分類に分類されるエンティティ (カテゴリ エンティティ)
entity whose instances represent a subtype or subclassification of another entity (generic entity),インスタンスが別のエンティティのサブタイプまたはサブ分類を表すエンティティ (汎用エンティティ)
"entity with discrete structure, such as an assembly or software module, within a system considered at a particular level of analysis",特定の分析レベルで考慮されるシステム内の、アセンブリやソフトウェア モジュールなどの個別の構造を持つエンティティ
entity within a configuration that satisfies an end use function and that can be uniquely identified at a given reference point,最終用途機能を満たし、特定の参照点で一意に識別できる構成内のエンティティ
entity-relationship diagram,エンティティ関係図
Entity-Relationship-Attribute modeling,エンティティ-関係-属性モデリング
"environment containing the hardware, instrumentation, simulators, software tools, and other support elements needed to conduct a test",テストの実施に必要なハードウェア、計測器、シミュレータ、ソフトウェア ツール、その他のサポート要素を含む環境
environment in which a solution or set of solutions resides,ソリューションまたはソリューションのセットが存在する環境
environment specific inter-ORB protocol,環境固有の ORB 間プロトコル
environment that facilitates unit testing,単体テストを容易にする環境
"environment that provides automated system context services and software-specific services for the engineering of software systems and related domains, such as project management and process management",ソフトウェア システムおよび関連ドメイン (プロジェクト管理やプロセス管理など) のエンジニアリングに、自動化されたシステム コンテキスト サービスとソフトウェア固有のサービスを提供する環境
"environment, safety, and occupational health",環境、安全、労働衛生
erasable programmable read only memory,消去可能、プログラム可能な読み取り専用メモリ
erroneous state of the system,システムの誤った状態
error carried forward from a previous step in a sequential process,シーケンシャルプロセスの前のステップから繰り越されたエラー
error resulting from a misunderstanding of the relationship of symbols or groups of symbols to their meanings in a given language,特定の言語における記号または記号のグループとその意味との関係の誤解から生じる誤り
error that is dependent on the time-varying nature of an inpu,入力の時間変化の性質に依存するエラー
error that is independent of the time-varying nature of an inpu,入力の時間変化の性質に依存しないエラー
"error that occurs once, or at unpredictable intervals",1 回または予測できない間隔で発生するエラー
error that results in the complete inability of a system or component to function,システムまたはコンポーネントが完全に機能しなくなるエラー
"error, failure, fault, time, time interval, date, number of non-commentary source code statements, edges, and nodes",エラー、失敗、障害、時間、時間間隔、日付、非コメントのソース コード ステートメントの数、エッジ、およびノー​​ド
especially construction activities.,特に建設活動。
Established requirements are accepted by the project to form the basis of product development.,確立された要件はプロジェクトによって受け入れられ、製品開発の基礎が形成されます。
establishing a sequence of activities according to a selected software life cycle model (SLCM).,選択したソフトウェア ライフ サイクル モデル (SLCM) に従って一連のアクティビティを確立します。
"establishing behavior between two or more interfaces, and hence between their supporting objects",2 つ以上のインターフェース間、つまりそれらをサポートするオブジェクト間の動作を確立する
establishing connections and relationships with other people from same or other organizations,同じ組織または他の組織の他の人々とのつながりや関係を確立する
establishment and maintenance of baselines and the identification and control of changes to baselines that make it possible to return to the previous baseline,ベースラインの確立と維持、および以前のベースラインに戻ることを可能にするベースラインへの変更の特定と制御
"establishment of something by law, ruling, or other authoritative acts",法律、判決、またはその他の権威ある行為によって何かを制定すること
estimate at completion,完成時の見積もり
estimate of the cost of a product or service used to evaluate the reasonableness of a supplier's proposed price,サプライヤーの提案価格の妥当性を評価するために使用される製品またはサービスのコストの見積もり
estimate of the longest activity duration that takes into account all of the known variables that could affect performance,パフォーマンスに影響を与える可能性がある既知の変数をすべて考慮した、最長のアクティビティ継続時間の推定値
estimate of the most probable activity duration that takes into account all of the known variables that could affect performance,パフォーマンスに影響を与える可能性がある既知の変数をすべて考慮した、最も可能性の高いアクティビティ継続時間の推定値
estimate of the shortest activity duration that takes into account all of the known variables that could affect performance,パフォーマンスに影響を与える可能性がある既知の変数をすべて考慮した、最短のアクティビティ継続時間の推定値
"estimate or prediction of conditions and events in the project's future based on information and knowledge available at the time of the forecast. The information is based on the project's past performance and expected future performance, and includes information that could impact the project in the future, such as estimate at completion and estimate to complete",予測時点で入手可能な情報と知識に基づいて、プロジェクトの将来の状況と出来事を推定または予測すること。この情報は、プロジェクトの過去の実績と予想される将来の実績に基づいており、完了時の見積もりや完了までの見積もりなど、将来のプロジェクトに影響を与える可能性のある情報が含まれます。
estimate or prediction of conditions and events in the project's future based on information and knowledge available at the time the schedule is calculated,スケジュールの計算時に入手可能な情報と知識に基づいて、プロジェクトの将来の状況と出来事を推定または予測すること
estimate to complete,完成までの見積もり
estimated outcome that is as likely to be exceeded as not,超過する可能性が高いと予想される結果、超過しない可能性が高い
estimated risk before applying risk reduction measures,リスク低減措置を適用する前の推定リスク
estimating technique in which an algorithm is used to calculate cost or duration based on historical data and project parameters,アルゴリズムを使用して履歴データとプロジェクトのパラメーターに基づいてコストまたは期間を計算する見積もり手法
"et of one or more IDEF1X views, often represented as view diagrams that depict the underlying semantics of the views, along with definitions of the concepts used in the views",1 つ以上の IDEF1X ビュー。多くの場合、ビューの基礎となるセマンティクスとビューで使用される概念の定義を示すビュー図として表されます。
evaluation based on the considered judgment of evaluators who examine the usability-related aspects of an interface with respect to specified criteria,指定された基準に関してインターフェースのユーザビリティ関連の側面を検査する評価者の熟慮された判断に基づく評価
"evaluation based on the judgment of one or more evaluators who examine or use a system to identify potential usability problems, including deviations from established criteria",確立された基準からの逸脱を含む潜在的なユーザビリティ上の問題を特定するためにシステムを検査または使用する 1 人以上の評価者の判断に基づく評価
evaluation module,評価モジュール
"evaluation of a design to determine correctness with respect to stated requirements, conformance to design standards, system efficiency, and other criteria",規定された要件、設計標準への適合性、システム効率、その他の基準に対する正確さを判断するための設計の評価
"evaluation of alternatives, based on criteria and systematic analysis, to select the best alternative for attaining determined objectives",決定された目的を達成するために最適な代替案を選択するための、基準と体系的な分析に基づく代替案の評価
"evaluation that involves representative users performing tasks with the system to enable identification of usability problems or measurements of efficiency, effectiveness, user satisfaction, or other user experiences",ユーザビリティの問題を特定したり、効率、有効性、ユーザー満足度、その他のユーザー エクスペリエンスを測定したりできるようにするために、システムを使用してタスクを実行する代表的なユーザーを含む評価
event (something that happens) that causes a functional user of the piece of software to initiate (trigger) one or more functional processes,ソフトウェアの機能ユーザーに 1 つまたは複数の機能プロセスを開始 (トリガー) させるイベント (何かが起こる)
"event from an external object, typically an interrupt from an external I/O device",外部オブジェクトからのイベント、通常は外部 I/O デバイスからの割り込み
event notification initiated by an object operating in a managed role,管理対象ロールで動作するオブジェクトによって開始されるイベント通知
event occurring during the execution of a software test that requires investigation.,ソフトウェア テストの実行中に発生し、調査が必要なイベント。
event sink,イベントシンク
"event source that can be connected to an arbitrary number of event sinks, which subscribe to the publisher event source",任意の数のイベント シンクに接続できるイベント ソース。パブリッシャー イベント ソースをサブスクライブします。
event source that can be connected to at most one consumer,最大 1 つのコンシューマに接続できるイベント ソース
event that causes suspension of normal program execution,通常のプログラム実行の一時停止を引き起こすイベント
"Every branch is identified by a tag. Often, a branch identifies the file versions that have been or will be released as a product release. It can denote unbundling of arrow meaning, i.e., the separation of object types from an object type set. Also refers to an arrow segment into which a root arrow segment has been divided.",すべてのブランチはタグによって識別されます。多くの場合、ブランチは、製品リリースとしてリリースされた、またはリリースされる予定のファイル バージョンを識別します。これは、矢印の意味の分離、つまりオブジェクト タイプのセットからのオブジェクト タイプの分離を示す場合があります。根元の矢印セグメントを分割した矢印セグメントも指す。
"evolution of a system, product, service, project or other human-made entity from conception through retiremen",システム、製品、サービス、プロジェクト、またはその他の人為的な存在の、構想から退職者に至るまでの進化
"examination and alteration of software to reconstitute it in a new form, including the subsequent implementation of the new form",新しい形式で再構成するためのソフトウェアの検査および変更 (その後の新しい形式の実装を含む)
"examination and documentation of the effectiveness of risk responses in dealing with identified risks and their root causes, as well as the effectiveness of the risk management process",特定されたリスクとその根本原因に対処する際のリスク対応の有効性、およびリスク管理プロセスの有効性の調査と文書化
"examination of a defined function to identify all the subfunctions necessary to accomplish that function, to identify functional relationships and interfaces (internal and external) and capture these in a functional architecture, to flow down upper-level performance requirements and to assign these requirements to lower-leve subfunctions",定義済みの機能を検査して、その機能を達成するために必要なすべてのサブ機能を特定し、機能関係とインターフェイス (内部および外部) を特定して機能アーキテクチャに取り込み、上位レベルのパフォーマンス要件をフローダウンして、これらの要件を下位レベルのサブ機能に割り当てます。
examination of the status of the activities of a supplier and of their results by the acquirer or a third party,買収者または第三者による供給者の活動状況およびその結果の調査
"Examples of an explanatory report are data element definitions, data demographics, data source information which are attached to benchmarking repositories or benchmarks. Examples of the product are benchmarking repository, benchmark(s), or software tools to support benchmarking activities.",説明レポートの例としては、データ要素定義、データ人口統計、ベンチマーク リポジトリまたはベンチマークに添付されるデータ ソース情報などがあります。製品の例としては、ベンチマーク リポジトリ、ベンチマーク、ベンチマーク活動をサポートするソフトウェア ツールなどがあります。
exception that occurs when a program attempts to use or access data incorrectly,プログラムがデータを不正に使用またはアクセスしようとしたときに発生する例外
exception that occurs when a program attempts to write into a protected area in storage,プログラムがストレージ内の保護領域に書き込もうとしたときに発生する例外
exception that occurs when a program calculates an address outside the bounds of the storage available to it,プログラムが利用可能なストレージの範囲外のアドレスを計算したときに発生する例外
exception that occurs when a program encounters an invalid operation code,プログラムが無効なオペレーション コードに遭遇したときに発生する例外
exception that occurs when the result of an arithmetic operation exceeds the size of the storage location designated to receive it,算術演算の結果が、それを受け取るために指定された記憶場所のサイズを超えたときに発生する例外
exception that occurs when the result of an arithmetic operation is too small a fraction to be represented by the storage location designated to receive it,算術演算の結果が、それを受け取るために指定された記憶場所で表現するには小さすぎる分数である場合に発生する例外
exchange of information between a user and an interactive system via the user interface to complete the intended task,意図したタスクを完了するために、ユーザー インターフェイスを介してユーザーと対話型システムの間で情報を交換すること
exchange of pages between main storage and auxiliary storage,主記憶装置と補助記憶装置の間でのページの交換
"exchange of the contents of two storage areas, usually an area of main storage with an area of auxiliary storage",2 つの記憶域 (通常は主記憶域と補助記憶域) の内容を交換すること。
exclusive permission to edit a file,ファイルを編集するための排他的権限
"exclusive right granted to the owner of an original work of authorship, which is fixed in any tangible medium of expression, to reproduce, publish, perform, and/or sell the work",あらゆる有形の表現媒体に固定されたオリジナルの著作物の所有者に与えられ、その著作物を複製、出版、上演、および/または販売する独占的権利
executable statement where the value of a variable is accessed,変数の値にアクセスする実行可能ステートメント
executable unit managed by an operating system scheduler,オペレーティング システムのスケジューラによって管理される実行可能ユニット
"execution of a high-priority process while lower priority processes await the availability of computer resources, or the execution of processes that require user interaction",優先度の高いプロセスを実行する一方で、優先度の低いプロセスはコンピュータ リソースが利用可能になるのを待つ、またはユーザーの操作が必要なプロセスの実行
"execution of a low-priority process while higher priority processes are not using computer resources, or the execution of processes that do not require user interaction",優先度の高いプロセスがコンピュータ リソースを使用していないときに優先度の低いプロセスを実行する、またはユーザーの介入を必要としないプロセスを実行する
execution trace that records only branch or jump instructions,分岐またはジャンプ命令のみを記録する実行トレース
"executive-level document that describes the purpose, goals, principles and scope of testing within an organizatio",組織内でのテストの目的、目標、原則、範囲を説明する幹部レベルの文書
executor consisting of a single artifact,単一のアーティファクトで構成されるエグゼキュータ
existence dependency between the stimulus of a behavior and the various responses that are caused to occur,行動の刺激とそれによって引き起こされるさまざまな反応の間の存在依存性
existence of a single trait or construct underlying a set of measures,一連の尺度の基礎となる単一の特性または構造の存在
existing source statement that is reused or deleted,再利用または削除された既存のソース ステートメント
"expectation that a system does not, under defined conditions, lead to a state in which human life, health, property, or the environment is endangered",定義された条件下では、システムが人間の生命、健康、財産、環境が危険にさらされる状態にならないという期待
expectations regarding acceptable behavior by project team members,プロジェクト チームのメンバーによる許容可能な行動に関する期待
expected monetary value,期待される金銭的価値
expected or observed duration required to return a malfunctioning system or component to normal operations,故障したシステムまたはコンポーネントを通常の動作に戻すのに必要な予想または観察された期間
explanatory message accompanying a commit,コミットに伴う説明メッセージ
explicit and direct restriction regarding the choice of design ideas,設計アイデアの選択に関する明示的かつ直接的な制限
"explicit and immutable version identifier (name or number) inserted into each configuration item, including each individual release, that can be used to identify the exact version of the configuration item in any instance or repository",各リリースを含む各構成アイテムに挿入される明示的で不変のバージョン識別子 (名前または番号)。インスタンスまたはリポジトリ内の構成アイテムの正確なバージョンを識別するために使用できます。
explicit definition for product line variability,製品ラインのばらつきの明示的な定義
"Exploratory testing hunts for hidden properties (including hidden behaviors) that, while quite possibly benign by themselves, could interfere with other properties of the software under test, and so constitute a risk that the software will fail.",探索的テストでは、それ自体は無害である可能性が非常に高いものの、テスト対象のソフトウェアの他のプロパティに干渉する可能性があり、ソフトウェアが失敗するリスクとなる隠れたプロパティ (隠れた動作を含む) を探します。
exposure to loss (financial or otherwise) that an organization is willing to tolerate from a risk,組織がリスクから許容できる損失（金銭的またはその他）への曝露
"Expressed in terms of the foreign key, an entity is said to be dependent if any foreign key is wholly contained in its primary key.",外部キーの観点から表現すると、外部キーがその主キーに完全に含まれている場合、エンティティは依存していると言われます。
"expression comprising constants, variables and operators built from a signature and a set of sorted variables",シグネチャとソートされた一連の変数から構築された定数、変数、演算子で構成される式
expression in one diagram that unambiguously identifies an arrow segment in another diagram,別の図の矢印セグメントを明確に識別する、ある図の式
"expression in the content of a normative document, that takes the form of a statement, an instruction, a recommendation or a requirement",声明、指示、推奨、または要件の形式をとる、規範文書の内容における表現
expression of an object playing a part in a relationship,関係において役割を果たすオブジェクトの表現
expression of perceived need from individual or group that benefits from a system during its utilization,システムの利用中にシステムから恩恵を受ける個人またはグループの認識されたニーズの表明
expression that can be input to a computer system to initiate an action or affect the execution of a computer program,アクションを開始したり、コンピュータ プログラムの実行に影響を与えたりするためにコンピュータ システムに入力できる式
"expression that can involve constants, variables and operators used to annotate an arc of a net",ネットの円弧に注釈を付けるために使用される定数、変数、演算子を含む式
expression that evaluates to true or false,true または false に評価される式
expression that unambiguously identifies a diagram and specifies the diagram's position in a specific model hierarchy,図を明確に識別し、特定のモデル階層内での図の位置を指定する式
expression that unambiguously identifies a diagram feature in a diagram,図内の図の特徴を明確に識別する式
expression that unambiguously identifies a diagram feature within an IDEF0 model,IDEF0 モデル内のダイアグラム フィーチャーを明確に識別する式
expression that unambiguously identifies a function's position in a model hierarchy,モデル階層における関数の位置を明確に識別する式
expression that unambiguously identifies a model page,モデル ページを明確に識別する式
"expression that uniquely identifies a box, a node or function, a diagram, or a model page within an IDEF0 model",IDEF0 モデル内のボックス、ノードまたは関数、ダイアグラム、またはモデル ページを一意に識別する式
Extended HyperText Markup Language,拡張ハイパーテキスト マークアップ言語
extensible markup language,拡張可能なマークアップ言語
extent to which a product satisfies stated and implied needs when used under specified conditions,指定された条件下で使用された場合に、製品が明示的および黙示的なニーズをどの程度満たすか
"extent to which a product used by specific users meets their needs to achieve specific goals with effectiveness, productivity, safety and satisfaction in specific contexts of use",特定のユーザーが使用する製品が、特定の使用状況において有効性、生産性、安全性、満足度などの特定の目標を達成するというユーザーのニーズをどの程度満たしているか
"extent to which a system, product or service can be used by specified users to achieve specified goals with effectiveness, efficiency and satisfaction in a specified context of use",指定された使用状況において、有効性、効率性、満足度を伴って指定された目標を達成するために、指定されたユーザーがシステム、製品、またはサービスを使用できる範囲
extent to which an event is likely to occur,出来事が起こる可能性の程度
extent to which an objective and feasible test can be designed to determine whether a requirement is met,要件が満たされているかどうかを判断するために、客観的かつ実行可能なテストをどの程度設計できるか
"extent to which an organization has explicitly and consistently deployed processes that are documented, managed, measured, controlled, and continually improved.",組織が文書化、管理、測定、制御され、継続的に改善されるプロセスを明示的かつ一貫して展開している程度。
extent to which an organizational unit consistently implements processes within a defined scope that contributes to the achievement of its business needs (current or projected),組織単位が、ビジネス ニーズ (現在または予測) の達成に貢献する、定義された範囲内でプロセスを一貫して実行する程度。
extent to which planned activities are realized and planned results achieved,計画された活動がどの程度実現され、計画された成果が達成されたか
"extent to which products, systems, services, environments and facilities can be used by people from a population with the widest range of characteristics and capabilities to achieve a specified goal in a specified context of use",指定された使用状況で指定された目標を達成するために、最も幅広い特性と能力を持つ集団の人々が製品、システム、サービス、環境、設備を使用できる程度。
extent to which the execution of a process achieves its purpose,プロセスの実行がその目的を達成する程度
extent to which the test cases test the requirements for the system or software product,テスト ケースがシステムまたはソフトウェア製品の要件をテストする範囲
extent to which the use of CASE tools can measurably meet an organization's uniquely defined adoption goals,CASE ツールの使用により、組織が独自に定義した導入目標をどの程度達成できるか
external and internal variability in requirements engineering,要件エンジニアリングにおける外部および内部の変動性
External attributes are those that relate to requirements (external properties of the software). External attributes can only be derived from the operational behavior of the system of which it is a part.,外部属性は、要件 (ソフトウェアの外部プロパティ) に関連する属性です。外部属性は、それが一部であるシステムの動作動作からのみ導き出すことができます。
external input,外部入力
external inquiry,外部からの問い合わせ
external interface file,外部インターフェースファイル
external or internal stimulus used for synchronization purposes,同期目的で使用される外部または内部の刺激
external output,外部出力
external storage,外部ストレージ
"externally imposed limitation on system requirements, design, or implementation or on the process used to develop or modify a system",システム要件、設計、実装、またはシステムの開発または変更に使用されるプロセスに対して外部から課せられた制限
"facilities, hardware, software, firmware, procedures, and documentation intended for or used to perform testing of software",ソフトウェアのテストを目的とした、またはそのために使用される施設、ハードウェア、ソフトウェア、ファームウェア、手順、および文書
"facilities, hardware, software, firmware, procedures, and documentation needed to perform qualification or other testing of software",ソフトウェアの認定またはその他のテストを実行するために必要な施設、ハードウェア、ソフトウェア、ファームウェア、手順、および文書
"facilities, hardware, software, firmware, procedures, and documentation needed to perform testing of software",ソフトウェアのテストを実行するために必要な設備、ハードウェア、ソフトウェア、ファームウェア、手順、および文書
"facilities, processes and procedures used to collect, store and distribute information between producers and consumers of information in physical or electronic format",物理的または電子形式の情報の作成者と利用者の間で情報を収集、保存、配布するために使用される施設、プロセス、および手順
"facilities, processes and procedures used to generate or consolidate reports from one or more information management systems and facilitate report distribution to the project stakeholders",1 つ以上の情報管理システムからレポートを生成または統合し、プロジェクト関係者へのレポート配布を容易にするために使用される施設、プロセス、および手順
facility designed to provide computer services to a variety of users through the operation of computers and auxiliary hardware and through services provided by the facility's staff,コンピューターと補助ハードウェアの操作、および施設のスタッフが提供するサービスを通じて、さまざまなユーザーにコンピューター サービスを提供するように設計された施設
"facility that includes personnel, hardware, and software, organized to provide information processing services",情報処理サービスを提供するために組織された、人材、ハードウェア、ソフトウェアを含む施設
fact that an action has taken place,行動が起こったという事実
factory that returns an interface reference to the computational object it creates,作成した計算オブジェクトへのインターフェイス参照を返すファクトリ
failure mode and effect analysis,故障モードと影響の分析
"failure mode, effects, and criticality analysis",故障モード、影響、臨界度の解析
failure of critical software,重要なソフトウェアの障害
"failure related in a deterministic way to a certain cause that can only be eliminated by a modification of the design or of the manufacturing process, operational procedures, documentation, or other relevant factors",設計、製造プロセス、操作手順、文書、またはその他の関連要素を変更することによってのみ除去できる特定の原因に決定論的に関連する障害。
failure reporting and corrective action system,障害報告および是正措置システム
failure that is about to occur,これから起こりそうな失敗
failure that permits continued operation of a system with partial operational capability,部分的な動作能力を備えたシステムの継続動作を可能にする障害
failure that results in complete shutdown of a system,システムの完全なシャットダウンにつながる障害
failure whose occurrence is unpredictable except in a probabilistic or statistical sense,確率的または統計的な意味を除いて、その発生が予測できない障害
"failures per unit of time, failures per number of transactions, failures per number of computer runs",単位時間あたりの失敗数、トランザクション数あたりの失敗数、コンピュータ実行数あたりの失敗数
fault that causes a failure in response to some particular pattern of data,ある特定のパターンのデータに応答して障害を引き起こす障害
fault that causes a failure when some particular sequence of program steps is executed,プログラムステップの特定のシーケンスが実行されるときに障害を引き起こす障害
"feature of some programming languages that requires the type of each data item to be declared, precludes the application of operators to inappropriate data types, and prevents the interaction of data items of incompatible types",各データ項目の型を宣言することを要求し、不適切なデータ型への演算子の適用を禁止し、互換性のない型のデータ項目の相互作用を防止する一部のプログラミング言語の機能
feature or characteristic that affects an item's quality3. requirement that specifies the degree of an attribute that affects the quality that the system or software must possess,商品の品質に影響を与える特徴または特徴3.システムまたはソフトウェアが備えなければならない品質に影響を与える属性の程度を指定する要件
features of software that help the user to navigate around a computer application,ユーザーがコンピュータ アプリケーション内を移動するのに役立つソフトウェアの機能
"Features typically include an integrated database management system, query language, report generator, screen definition facility, graphics generator, decision support function, financial modeling, spreadsheet capability, and statistical analysis functions.",通常、統合データベース管理システム、クエリ言語、レポート ジェネレーター、画面定義機能、グラフィック ジェネレーター、意思決定支援機能、財務モデリング、スプレッドシート機能、統計分析機能などの機能が含まれます。
"field comprising one or more input variables whose change in value, or lack of change, between successive logical records affects the flow of control through the main procedure",連続する論理レコード間の値の変化または変化の欠如がメイン プロシージャを介した制御の流れに影響を与える 1 つ以上の入力変数で構成されるフィールド
"field of a computer instruction that contains addresses, information necessary to derive addresses, or values of operands",アドレス、アドレスを導出するために必要な情報、またはオペランドの値を含むコンピュータ命令のフィールド
field of a computer instruction that specifies the operation to be performed,実行される操作を指定するコンピュータ命令のフィールド
field programmable gate array,フィールドプログラマブルゲートアレイ
fifth-generation language,第5世代言語
"figure, extent, or amount obtained by measuring",測定によって得られる数値、範囲、または量
file containing data to be interchanged,交換するデータを含むファイル
file image of an entire CD or DVD that is encoded according to ISO 9660,ISO 9660に従ってエンコードされたCDまたはDVD全体のファイルイメージ
File Transfer Protocol.,ファイル転送プロトコル。
file type referenced.,参照されるファイルの種類。
finish-to-finish [A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition,仕上げから仕上げまで [プロジェクト管理知識体系ガイド (PMBOK® ガイド) - 第 5 版]
finish-to-start. [A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition,終わりから始まりまで。 [プロジェクト管理知識体系ガイド (PMBOK® ガイド) — 第 5 版
finite ordered set of well-defined rules for the solution of a problem,問題を解決するための、明確に定義されたルールの有限順序セット
finite set of well-defined rules for the solution of a problem in a finite number of steps,有限のステップ数で問題を解決するための、明確に定義された有限のルールセット
Finnish Software Measurement Association,フィンランドソフトウェア測定協会
firm fixed price (contract),確定固定価格（契約）
"first generation based on relays or vacuum tube, the second on transistors, the third on integrated circuits",第一世代はリレーまたは真空管に基づいており、第二世代はトランジスタに基づいており、第三世代は集積回路に基づいています
first stage of testing before a product is considered ready for commercial or operational use,製品が商用または運用可能な状態にあるとみなされる前のテストの第 1 段階
first-generation language,第一世代言語
fixed price incentive fee,定額インセンティブ料金
fixed price with economic price adjustment,経済価格調整を伴う固定価格
fixed-length segment of data or of a computer program treated as a unit in storage allocation,ストレージ割り当ての単位として扱われるデータまたはコンピュータ プログラムの固定長セグメント
Fixes for such bugs can often be introduced on a frozen branch.,このようなバグの修正は、凍結されたブランチに導入されることがよくあります。
"Flexibility enables products to take account of circumstances, opportunities and individual preferences that had not been anticipated in advance. If a product is not designed for flexibility, it might not be safe to use the product in unintended contexts. Flexibility can be measured either as the extent to which a product can be used by additional types of users to achieve additional types of goals with effectiveness, efficiency, freedom from risk and satisfaction in additional types of contexts of use, or by a capability to be modified to support adaptation for new types of users, tasks and environments, and suitability for individualization.",柔軟性により、事前には予想されていなかった状況、機会、個人の好みを製品が考慮できるようになります。製品が柔軟性を考慮して設計されていない場合、意図しない状況で製品を使用するのは安全ではない可能性があります。柔軟性は、追加の種類のユーザーが有効性、効率性、リスクからの解放、および追加の使用状況における満足度を備えて追加の種類の目標を達成するために、追加の種類のユーザーが製品を使用できる程度として、または新しいタイプのユーザー、タスク、環境への適応、および個別化への適合性をサポートするために変更できる機能によって測定できます。
flight readiness review.,飛行準備レビュー。
"For a high degree of belief, the probability is near 1. Frequency rather than probability can be used in describing risk. Degrees of belief about probability can be chosen as classes or ranks, such as rare/ unlikely/ moderate/ likely/ almost certain, or incredible/ improbable/ remote/ occasional/ probable/ frequent.",確信度が高い場合、確率は 1 に近くなります。リスクを説明する際には、確率ではなく頻度を使用できます。確率に関する信念の程度は、まれ/可能性が低い/中程度/可能性が高い/ほぼ確実、または信じられないほど/ありそうもない/遠い/たまにある/ありそうな/頻繁などのクラスまたはランクとして選択できます。
"For a relationship, a role name is a name given to a class in a relationship to clarify the participation of that class in the relationship, that is, connote the role played by a related instance. For an attribute, a role name is a name used to clarify the sense of the value class in the context of the class for which it is a property.",リレーションシップの場合、ロール名は、リレーションシップにおけるそのクラスの参加を明確にするためにリレーションシップ内のクラスに与えられる名前です。つまり、関連するインスタンスによって果たされるロールを暗示します。属性の場合、ロール名は、それがプロパティであるクラスのコンテキストにおける値クラスの意味を明確にするために使用される名前です。
"For a set of independent periodic tasks, if each task meets its first deadline when all tasks start at the same time, the deadlines will be met for any combination of start times.",一連の独立した定期タスクの場合、すべてのタスクが同時に開始されたときに各タスクが最初の期限を満たしている場合、開始時刻の任意の組み合わせでも期限が満たされます。
"for a set of variables, the association of a value (of correct type) to each variable",変数のセットの場合、(正しい型の) 値と各変数の関連付け
"for a URL, describing a reference that does not need to change at the link in a document, and can still reach the desired object even though that object has changed locations",URL の場合、ドキュメント内のリンクで変更する必要がなく、オブジェクトの場所が変わっても目的のオブジェクトに到達できる参照を記述します。
"for an entity, being composed of one or more underlying base entities",エンティティの場合、1 つ以上の基礎となる基本エンティティで構成される
"for certification, the organization that is responsible to a certification body for ensuring certification requirements, including product requirements, are fulfilled",認証に関して、製品要件を含む認証要件が満たされていることを確認するために認証機関に対して責任を負う組織
"For conformance to be meaningful, the specified requirements accurately represent stakeholder requirements.",適合性を意味のあるものにするためには、指定された要件が利害関係者の要件を正確に表している必要があります。
"For documentation, common measures include percentage of task completion, frequency of defects, frequency of assists, frequency of accesses to help or documentation.",文書化の場合、一般的な尺度には、タスクの完了率、欠陥の頻度、支援の頻度、ヘルプまたは文書へのアクセスの頻度が含まれます。
"For each direction of a relationship, the cardinality can be constrained.",関係の方向ごとに、カーディナリティを制約できます。
"For example,",例えば、
"for example,",例えば、
"For example, ""assets"" such as requirements, designs, software code, documentation. Domain engineering can include the following activities: domain definition, domain analysis, developing the domain architecture, and domain implementation.",たとえば、要件、設計、ソフトウェア コード、ドキュメントなどの「資産」です。ドメイン エンジニアリングには、ドメイン定義、ドメイン分析、ドメイン アーキテクチャの開発、ドメイン実装などのアクティビティが含まれます。
"for example, a routine that converts structured FORTRAN to ANSI-standard FORTRAN",たとえば、構造化 FORTRAN を ANSI 標準 FORTRAN に変換するルーチン
"for example, a software development plan. The plan typically describes the work to be done, the resources required, the methods to be used, the procedures to be followed, the schedules to be met, and the way that the project will be organized.",たとえば、ソフトウェア開発計画などです。通常、計画には、実行する作業、必要なリソース、使用する方法、従うべき手順、遵守すべきスケジュール、およびプロジェクトの編成方法が記述されます。
"For example, an algorithm that runs faster will typically use more memory. Optimization balances the value of a faster run time against the cost of additional memory.",たとえば、より高速に実行されるアルゴリズムは、通常、より多くのメモリを使用します。最適化により、実行時間の短縮と追加メモリのコストのバランスがとれます。
"for example, in an economic life calculation, the decision variable is how long to keep the asset",たとえば、経済的耐用年数の計算では、資産をどのくらいの期間保持するかが決定変数になります。
"For example, it is impossible to drive a car 500 miles in less than one hour, so the one-hour outcome for a 50 mile car trip is in the impossible zone for the estimate of how long it will take to drive 500 miles.",たとえば、500 マイルの車を 1 時間未満で運転することは不可能であるため、50 マイルの車旅行の 1 時間の結果は、500 マイルの運転にかかる時間の見積もりでは不可能な領域にあります。
"For example, the assignment of defects to a severity level is a ranking",たとえば、欠陥の重大度レベルへの割り当てはランク付けです。
"For example, the classification of defects by their type does not imply order among the categories.",たとえば、タイプによる欠陥の分類は、カテゴリ間の順序を意味するものではありません。
"For example, the size of a software component in terms of LOC is a ratio scale, because the value of zero corresponds to no lines of code and each additional increment represents equal amounts of code.",たとえば、LOC に関するソフトウェア コンポーネントのサイズは比率スケールです。ゼロの値はコード行に対応せず、追加の各増分は同量のコードを表すためです。
"For example, when a system-of-interest enters the production stage, an enabling production system is required Each enabling system has a life cycle of its own.",たとえば、対象システムが運用段階に入ると、有効化する運用システムが必要になります。各有効化システムには、独自のライフ サイクルがあります。
"For most organizations, physical assets usually refer to equipment, inventory and properties owned by the organization. Physical assets are the opposite of intangible assets, which are non-physical assets, such as leases, brands, digital assets, use rights, licenses, intellectual property rights, reputation or agreements. A grouping of assets referred to as an asset system could also be considered as an asset.",ほとんどの組織では、物理的資産とは通常、組織が所有する機器、在庫、資産を指します。物理的資産は、リース、ブランド、デジタル資産、使用権、ライセンス、知的財産権、評判、契約などの非物理的資産である無形資産の対極です。資産システムと呼ばれる資産のグループも資産とみなすことができます。
"For software, the purpose of the software physical configuration audit (PCA) is to ensure that the design and reference documentation is consistent with the as-built software product",ソフトウェアの場合、ソフトウェア物理構成監査 (PCA) の目的は、設計および参照ドキュメントが完成したソフトウェア製品と一致していることを確認することです。
"For software, this document describes the as-built version of the software.",ソフトウェアに関しては、このドキュメントではソフトウェアの現状バージョンについて説明します。
for XML or SGML specifications,XML または SGML 仕様の場合
"forecast project costs to be paid for that are derived from the cost baseline for total or periodic requirements, including projected expenditures plus anticipated liabilities",予測される支出と予測される負債を含む、合計または定期的な要件のコストベースラインから導出される、支払われるプロジェクトコストの予測。
"forefront of a branch, which contains the evolving versions of the source tree",ブランチの最前線。ソース ツリーの進化するバージョンが含まれます。
foreign key attribute of a child entity,子エンティティの外部キー属性
"foreign key containing two or more attributes, where at least one of the attributes is a part of the entity's primary key and at least one of the attributes is not a part of the primary key",2 つ以上の属性を含む外部キー。属性の少なくとも 1 つはエンティティの主キーの一部であり、属性の少なくとも 1 つは主キーの一部ではありません。
"form of abstraction achieved using a selected set of architectural concepts and structuring rules, in order to focus on particular concerns within a system",システム内の特定の関心事に焦点を当てるために、選択された一連のアーキテクチャ概念と構造化ルールを使用して達成される抽象化の形式
form of communication in which a producer (or client) task sends a message to a consumer (or server) task and waits for a reply,プロデューサー (またはクライアント) タスクがコンシューマー (またはサーバー) タスクにメッセージを送信し、応答を待つ通信形式
form of communication in which a producer task sends a message to a consumer task and waits for acknowledgment,プロデューサー タスクがコンシューマー タスクにメッセージを送信し、確認応答を待つ通信形式
form of presenting example instances in which instances are shown as a tabular presentation,インスタンスが表形式のプレゼンテーションとして表示される、インスタンスの例を提示する形式。
form of presenting example instances in which instances are shown as separate graphic objects,インスタンスが別個のグラフィック オブジェクトとして表示される、インスタンスの例を提示する形式。
"form used in configuration management to propose revisions to a drawing or list, and, after approval, to notify users that the drawing or list has been, or will be, revised accordingly",構成管理で使用されるフォーム。図面またはリストの改訂を提案し、承認後に図面またはリストがそれに応じて改訂された、または改訂される予定であることをユーザーに通知します。
formal declaration by management that an IT system is approved to operate in a particular security mode using a prescribed set of safeguards at an acceptable level of risk,許容可能なリスクレベルで所定の一連の保護手段を使用して、IT システムが特定のセキュリティモードで動作することが承認されているという経営者による正式な宣言
formal demonstration that a system or component complies with its specified requirements and is acceptable for operational use,システムまたはコンポーネントが指定された要件を満たしており、運用上の使用が許容されることを示す正式な実証
formal description of the boundary of the context of use where data models are applied,データモデルが適用される使用コンテキストの境界の正式な説明
formal description techniques,形式的な記述テクニック
formal meta-language used for defining the syntax of a language in a textual format,言語の構文をテキスト形式で定義するために使用される正式なメタ言語
"formal or informal testing conducted during the development of a system or component, usually in the development environment by the developer.2. testing conducted to establish whether a new software product or software-based system (or components of it) satisfies its criteria",システムまたはコンポーネントの開発中に、通常は開発者によって開発環境で実施される公式または非公式のテスト。2.新しいソフトウェア製品またはソフトウェアベースのシステム（またはそのコンポーネント）が基準を満たしているかどうかを確認するために実施されるテスト
formal placeholder in the specification of a composite object that identifies those aspects of the behavior of some component object required for it to form part of the composite and links them as constraints on an actual object in an instance of the composite,複合オブジェクトの仕様における正式なプレースホルダー。複合オブジェクトの一部を形成するために必要なコンポーネント オブジェクトの動作の側面を識別し、それらを複合オブジェクトのインスタンス内の実際のオブジェクトに対する制約としてリンクします。
formal procedure for submitting a request for an adjustment of a configuration item,構成品目の調整要求を提出するための正式な手順
formal qualification review,正式な資格審査
"formal responses from sellers to a request for proposal or other procurement document specifying the price, commercial terms of sale, and technical specifications or capabilities the seller will do for the requesting organization that, if accepted, would bind the seller to perform the resulting agreement",提案依頼書またはその他の調達文書に対する売り手からの正式な応答。価格、商業販売条件、および売り手が要求側の組織に対して行う技術仕様または機能が明記されており、受け入れられた場合、売り手はその結果得られる契約を履行する義務を負うことになります。
formal technique used to prove mathematically that a computer program satisfies its specified requirements,コンピュータプログラムが指定された要件を満たしていることを数学的に証明するために使用される正式な手法
"formal testing conducted to enable a user, customer, or other authorized entity to determine whether to accept a system or component",ユーザー、顧客、またはその他の認可された団体がシステムまたはコンポーネントを受け入れるかどうかを決定できるようにするために実施される正式なテスト
"formal, documented, comprehensive, and systematic examination of a design to determine if the design meets the applicable requirements, to identify problems, and to propose solutions",設計が該当する要件を満たしているかどうかを判断し、問題を特定し、解決策を提案するための、設計の形式的、文書化された、包括的かつ体系的な検査。
"formally approved version of a configuration item, regardless of media, formally designated and fixed at a specific time during the configuration item's life cycle",構成アイテムの正式に承認されたバージョン。メディアに関係なく、構成アイテムのライフサイクル中の特定の時点で正式に指定および修正されます。
"formally controlled and maintained set of data that serves as the basis for defining change [IEEE 15288.1:2014 IEEE Standard for Application of Systems Engineering on Defense Programs, 3.1] 6 [verb] to establish and approve a set of data","変更を定義するための基礎として機能する、正式に管理および維持されるデータのセット [IEEE 15288.1:2014 IEEE Standard for Application of Systems Engineering on Defense Programs, 3.1] 6 [動詞] 一連のデータを確立および承認する"
Format and presentation profile,フォーマットとプレゼンテーションプロファイル
Format can refer to data type and length of data item.,形式は、データ型とデータ項目の長さを参照できます。
forms associated with the various trouble/problem-reporting documents and the configuration change control documents,さまざまなトラブル/問題報告文書および構成変更管理文書に関連するフォーム
forms produced in continuous lengths during the manufacturing process and intended primarily for use with sprocket-hole transporting mechanisms,製造プロセス中に連続した長さで製造され、主にスプロケットホール搬送機構での使用を目的とした形状
formula that relates a decision variable to either the cost or the revenue of an alternative,決定変数を代替案のコストまたは収益に関連付ける式
"formula, process, design, or intellectual property that is protected by non-disclosur",非開示によって保護される配合、プロセス、デザイン、または知的財産
FORTRAN,フォートラン
"FORTRAN, COBOL",フォートラン、コボル
fourth-generation language,第四世代言語
"framework containing the processes, activities, and tasks involved in the development, operation, and maintenance of a software product, spanning the life of the system from the definition of its requirements to the termination of its use",ソフトウェア製品の開発、運用、保守に関わるプロセス、活動、およびタスクを含むフレームワーク。要件の定義から使用の終了までのシステムの存続期間にわたる。
"framework for evaluating competing demands, such as schedule, cost, and quality",スケジュール、コスト、品質などの競合する要求を評価するためのフレームワーク
"framework for integrating transactions, security, events and persistence into a component's behavior at runtime",トランザクション、セキュリティ、イベント、永続性を実行時のコンポーネントの動作に統合するためのフレームワーク
"framework of a semiconductor device, made of plated metal",メッキされた金属で作られた半導体デバイスのフレームワーク
"framework of processes and activities concerned with the life cycle that may be organized into stages, which also acts as a common reference for communication and understanding",ライフサイクルに関連するプロセスと活動のフレームワーク。段階に分けて構成され、コミュニケーションと理解のための共通の参照としても機能します。
framework selected by each using organization on which to map the activities of IEEE Std 1074 to produce the software project life cycle (SPLC).,ソフトウェア プロジェクト ライフ サイクル (SPLC) を生成するために、IEEE Std 1074 の活動をマッピングするために、各使用組織によって選択されたフレームワーク。
Frameworks are often instantiation of a number of patterns.,フレームワークは多くの場合、多数のパターンをインスタンス化したものです。
free and open source software,無料のオープンソース ソフトウェア
freedom from discomfort and positive attitudes towards the use of the product,不快感から解放され、製品の使用に対する前向きな姿勢
freedom from software hazards,ソフトウェアの危険性からの解放
freedom from system hazards,システムの危険からの解放
"frequency of performing a periodic activity, such as incremental product release",製品の増分リリースなどの定期的なアクティビティを実行する頻度
"FSM method that has been modified for local use, such that it might produce different functional sizes from those obtained prior to modification",ローカルで使用するために変更された FSM メソッド。変更前に得られた関数サイズとは異なる関数サイズが生成される可能性があります。
full deployment,完全な展開
full operational capability,完全な運用能力
full-rate production.,フルレート生産。
function from the instances of a class to the instances of the value class of the attribute,クラスのインスタンスから属性の値クラスのインスタンスへの関数
function modeled by a parent box,親ボックスによってモデル化された関数
function modeled by the single box in the A-0 context diagram of an IDEF0 model,IDEF0 モデルの A-0 コンテキスト図の単一ボックスでモデル化された関数
function of the likelihood that the risk will occur and the magnitude of the consequences of its occurrence,リスクが発生する可能性とその発生による影響の大きさの関数
function of the probability of occurrence of a given threat and the potential adverse consequences of that threat's occurrence,特定の脅威の発生確率とその脅威の発生による潜在的な悪影響の関数
function or procedure invocable for a single purpose,単一の目的のために呼び出せる関数またはプロシージャ
function point analysis,ファンクションポイント分析
function required to support Open Distributed Processing,オープン分散処理をサポートするために必要な機能
function that is not decomposed,分解されていない関数
function whose inputs are software data and whose output is a single numerical value that can be interpreted as the degree to which software possesses a given attribute that affects its quality,入力がソフトウェア データであり、その出力がソフトウェアの品質に影響を与える特定の属性をソフトウェアがどの程度持っているかとして解釈できる単一の数値である関数。
function whose inputs are software data and whose output is a single numerical value that can be interpreted as the degree to which the software possesses a given quality attribute,入力がソフトウェア データであり、その出力がソフトウェアが特定の品質属性を備えている程度として解釈できる単一の数値である関数。
"function-oriented (structured) design, object-oriented design, and data structure-oriented design",機能指向（構造化）設計、オブジェクト指向設計、データ構造指向設計
function's requirement for the presence of a non-empty object set in a particular arrow role as a precondition for some activation of the function,関数の何らかのアクティブ化の前提条件として、特定の矢印の役割に設定された空でないオブジェクトの存在に対する関数の要件
Functional appropriateness corresponds to suitability for the task.,機能的適切性は、タスクへの適合性に対応します。
functional configuration audit,機能構成の監査
functional decomposition,機能分解
functional dependency between prior input interaction occurrences and later output interaction occurrences in a behavior pattern,動作パターンにおける以前の入力インタラクションの発生とその後の出力インタラクションの発生の間の機能的依存関係
functional domain categorization,機能ドメインの分類
"functional or non-functional distinguishing characteristic of a system, often an enhancement to an existing system",システムの機能的または非機能的な特徴。多くの場合、既存のシステムの拡張機能
functional size measurement method.,機能的なサイズの測定方法。
functional size measurement.,機能的なサイズ測定。
"Functional suitability is only concerned with whether the functions meet stated and implied needs, not the functional specification.",機能適合性は、機能仕様ではなく、明示的および暗黙的なニーズを機能が満たすかどうかのみを考慮します。
functional unit (integrated circuit) that determines the source and priority of interrupt requests and manages their execution,割り込み要求のソースと優先順位を決定し、その実行を管理する機能ユニット (集積回路)
"functional unit in a system or communication network at which data can be entered or retrieved [ISO/IEC 2382:2015, Information technology — Vocabulary",データを入力または取得できるシステムまたは通信ネットワーク内の機能単位 [ISO/IEC 2382:2015、情報技術 - 語彙]
"functional unit into which data can be placed, in which data can be retained, and from which data can be retrieved",データを配置し、データを保持し、そこからデータを取得できる機能単位
"functional unit that can perform substantial computations, including numerous arithmetic operations and logic operations with or without human intervention",人間の介入の有無にかかわらず、多数の算術演算や論理演算を含む実質的な計算を実行できる機能単位
"functional unit that can perform substantial computations, including numerous arithmetic operations and logic operations without human intervention",人間の介入なしに多数の算術演算や論理演算を含む実質的な計算を実行できる機能単位
functional unit that consists of one or more processors and their internal storage,1 つ以上のプロセッサとその内部ストレージで構成される機能単位
functional unit that performs direct memory access,ダイレクトメモリアクセスを実行する機能ユニット
functional unit that usually has special purpose computing capabilities and includes user-oriented input units and output units,通常、特殊目的のコンピューティング機能を備え、ユーザー指向の入力ユニットと出力ユニットを含む機能ユニット
functional unit to connect interfaces for asynchronous communications,非同期通信用のインターフェースを接続する機能ユニット
functional unit to control data communication without going through the central processing unit (CPU),中央処理装置（CPU）を介さずにデータ通信を制御する機能ユニット
functional user requirement(s),機能的なユーザー要件
Functional User Requirements as perceived by the user,ユーザーが認識する機能的なユーザー要件
"Functional User Requirements include but are not limited to: data transfer (for example Input customer data, Send control signal); data transformation (for example Calculate bank interest, Derive average temperature); data storage (for example Store customer order, Record ambient temperature over time); data retrieval (for example List current employees, Retrieve aircraft position). User Requirements that are not Functional User Requirements include but are not limited to: quality constraints (for example usability, reliability, efficiency and portability); organizational constraints (for example locations for operation, target hardware and compliance to standards); environmental constraints (for example interoperability, security, privacy and safety); implementation constraints (for example development language, delivery schedule).",機能的なユーザー要件には以下が含まれますが、これらに限定されません。 データ転送 (顧客データの入力、制御信号の送信など)。データ変換 (例: 銀行金利の計算、平均気温の導出)。データストレージ (例: 顧客の注文の保存、周囲温度の経時的な記録)。データの取得 (たとえば、現在の従業員のリスト、航空機の位置の取得)。機能的ユーザー要件ではないユーザー要件には、次のものが含まれますが、これらに限定されません。 品質制約 (たとえば、使いやすさ、信頼性、効率、移植性)。組織上の制約 (たとえば、運用の場所、ターゲット ハードウェア、標準への準拠)。環境上の制約 (相互運用性、セキュリティ、プライバシー、安全性など)。実装上の制約 (開発言語、納品スケジュールなど)。
functionality provided to the user to meet internal or external data storage requirements,内部または外部のデータ ストレージ要件を満たすためにユーザーに提供される機能
"functionality, performance, attributes, design constraints, number of states, lines of branches",機能、パフォーマンス、属性、設計上の制約、状態の数、分岐線
"functionality, performance, attributes, or design constraints",機能、パフォーマンス、属性、または設計上の制約
"functionally or logically distinct part of a computer software configuration item, typically an aggregate of two or more software units",コンピュータ ソフトウェア構成アイテムの機能的または論理的に異なる部分、通常は 2 つ以上のソフトウェア ユニットの集合体
"functionally or logically distinct part of a software configuration item, distinguished for the purpose of convenience in designing and specifying a complex SCI as an assembly of subordinate elements",ソフトウェア構成アイテムの機能的または論理的に異なる部分。複雑な SCI を下位要素のアセンブリとして設計および指定する際の便宜のために区別されます。
functionally or logically distinct part of a system,システムの機能的または論理的に異なる部分
"functions performed by users which include installation, configuration, application backup, maintenance (patching and upgrading) and de-installation",ユーザーが実行する機能（インストール、構成、アプリケーションのバックアップ、メンテナンス（パッチ適用とアップグレード）、アンインストールなど）
fundamental idea (such as information hiding) that can be applied to designing a system,システム設計に応用できる基本的な考え方（情報隠蔽など）
fundamental idea that can be applied to designing a system,システム設計に応用できる基本的な考え方
"fundamental thing of relevance to the user, about which information is kept, and which needs to be measured",ユーザーに関連する基本的なもの、どの情報が保持され、どの情報を測定する必要があるか
further documentation accompanying a requirement,要件に付随する追加の文書
general activity of software development,ソフトウェア開発の一般的な活動
"general approach to programming that assumes that errors will occur during both initial development and maintenance and, as a result, creates code in such a way that the program still operates properly when errors occur",初期開発とメンテナンスの両方でエラーが発生することを想定し、その結果、エラーが発生してもプログラムが適切に動作するような方法でコードを作成する、プログラミングへの一般的なアプローチ
General Inter-ORB Protocol,一般的な ORB 間プロトコル
General Interworking Framework,一般的なインターワーキングフレームワーク
general term for structured English or program design language,構造化英語またはプログラム設計言語の総称
general term used to describe all classes of Petri Nets,ペトリ ネットのすべてのクラスを説明するために使用される一般用語
general-purpose input/output por,汎用入出力ポート
general; abstract,一般的な;抽象的な
"Generalised Enterprise Reference Architecture and Methodologies (GERAM) [ISO 15704], Reference Model of Open Distributed Processing (RM-ODP) [ISO/IEC 10746",一般化エンタープライズ参照アーキテクチャおよび方法論 (GERAM) [ISO 15704]、オープン分散処理の参照モデル (RM-ODP) [ISO/IEC 10746]
"Generalization is fundamentally different from a relationship, which can associate distinct instances.",一般化は、個別のインスタンスを関連付けることができる関係とは根本的に異なります。
"generalization of properties (attributes, participant properties, and operations) and constraints",プロパティ (属性、参加者のプロパティ、操作) と制約の一般化
"generalized concept that the analyst discovers by asking, ""In general, what do instances in this subject domain need to be able to do or to know?""",分析者が「一般に、この主題ドメインのインスタンスは何を実行できるか、または何を知る必要があるか?」と尋ねることによって発見する一般化された概念。
"Generally, the intention is that maintaining limitations on a property's values related to the relevant items will result in maintaining system risks within limits. The words 'integrity level' form an indivisible label and do not depend on a concept of integrity by itself. An integrity level is different from the likelihood that the integrity level claim is met but they are closely related. The word 'confidence' implies that the definition of integrity levels can be a subjective concept. integrity levels are defined in terms of risk and hence, cover safety, security, financial and any other dimension of risk that is relevant to the system-of-interes",一般に、関連する項目に関連するプロパティの値に対する制限を維持することで、システム リスクを制限内に維持することが意図されています。 「整合性レベル」という言葉は分割できないラベルを形成し、それ自体は整合性の概念に依存しません。整合性レベルは、整合性レベルの要求が満たされる可能性とは異なりますが、密接に関連しています。 「信頼性」という言葉は、整合性レベルの定義が主観的な概念である可能性があることを意味します。完全性レベルはリスクの観点から定義されるため、安全性、セキュリティ、財務、および利益主義に関連するその他のリスクの側面がカバーされます。
"generally, this term is equivalent to request for proposal. However, in some application areas, it may have a narrower or more specific meaning",一般に、この用語は提案依頼書に相当します。ただし、一部のアプリケーション分野では、より狭い意味またはより具体的な意味を持つ場合があります。
"Generating a methodology includes explaining the structural position and semantics of each methodology element using the selected metamodel. Thus, what methodology elements are possible, and how they relate to each other, are constrained by such a metamodel. Usually, method engineers perform generation, yielding a complete and usable methodology.",方法論の生成には、選択したメタモデルを使用して各方法論要素の構造的位置とセマンティクスを説明することが含まれます。したがって、どのような方法論要素が可能か、そしてそれらがどのように相互に関係するかは、そのようなメタモデルによって制約されます。通常、メソッド エンジニアは生成を実行し、完全で使用可能な方法論を生成します。
generic ancestor of the class or a parent of the class or an ancestor of a parent of the class,クラスの汎用祖先、クラスの親、またはクラスの親の祖先
generic form that needs specialization (further design work) to produce concrete designs2. design aimed at producing designs,具体的なデザインを作成するには専門化（さらなるデザイン作業）が必要な一般的なフォーム2.デザインを生み出すことを目的としたデザイン
generic pin (port) on a microcomputer whose function (whether it is an input or output pin) is not predefined and is user-controlle,機能 (入力ピンか出力ピンかどうか) が事前に定義されておらず、ユーザーが制御できるマイクロコンピューター上の汎用ピン (ポート)
"Generic product categories are hardware (e.g., engine mechanical part); software (e.g., computer program); services (e.g., transport); and processed materials (e.g., lubricant). Hardware and processed materials are generally tangible products, while software or services are generally intangible. Most products comprise elements belonging to different generic product categories. Whether the product is then called hardware, processed material, software, or service depends on the dominant element. Results could be components, systems, software, services, rules, documents, or many other items. The result could in some cases be many related individual results.",一般的な製品カテゴリはハードウェア (エンジンの機械部品など) です。ソフトウェア（コンピュータプログラムなど）。サービス (例: 輸送);および加工された材料（例：潤滑剤）。ハードウェアや加工品は一般に有形の製品ですが、ソフトウェアやサービスは一般に無形です。ほとんどの製品は、さまざまな一般的な製品カテゴリに属する​​要素で構成されています。製品がハードウェア、加工材料、ソフトウェア、またはサービスのいずれと呼ばれるかは、支配的な要素によって異なります。結果は、コンポーネント、システム、ソフトウェア、サービス、ルール、ドキュメント、またはその他の多くの項目になる可能性があります。場合によっては、結果は多数の関連する個別の結果になる可能性があります。
"generic term for meta-entities, meta-relationships and meta-attributes",メタエンティティ、メタ関係、メタ属性の総称
generic term that can refer to either a fault (cause) or a failure (effect),障害 (原因) または障害 (結果) を指す一般的な用語
"generic, organizational structure or design for software systems in a domain.",ドメイン内のソフトウェア システムの一般的な組織構造または設計。
German and English,ドイツ語と英語
giving access to shared data only to one task at a time,共有データへのアクセスを一度に 1 つのタスクにのみ許可する
globally unique identifier,グローバルに一意な識別子
globally unique value that is globally unique for every SWID tag created,作成されたすべての SWID タグに対してグローバルに一意なグローバルに一意な値
government-furnished equipment,政府支給の設備
government-furnished information,政府提供の情報
government-off-the-shel,政府の枠外
graph (sense 2) in which no direction is implied in the internode connections,ノード間接続に方向が示されていないグラフ (センス 2)
graph in which direction is implied in the internode connections,ノード間接続の方向が暗示されるグラフ
graph of the number of failures in a system or component as a function of time,システムまたはコンポーネントの故障数を時間の関数として示すグラフ
graph showing a bathtub curve,バスタブ曲線を示すグラフ
graphic displayed on the screen that represents a function of the computer system,コンピュータシステムの機能を表す画面に表示されるグラフィック
graphic element set apart from the main body of text and normally cited within the main text.,テキストの本文とは別に設定され、通常は本文内で引用されるグラフィック要素。
graphic presentation of a logical relationship between schedule activities in the precedence diagramming method,優先順位図法によるスケジュールアクティビティ間の論理関係を図で表現したもの
graphic representation of a concept that has meaning in a specific context,特定の文脈で意味を持つ概念をグラフィックで表現したもの
graphic representation of the underlying semantics of a view,ビューの基礎となるセマンティクスをグラフィックで表現したもの
"graphical and textual representation of analysis that identifies the data needed by an organization to achieve its mission, functions, goals, objectives, and strategies and to manage and rate the organization",組織がその使命、機能、目標、目的、戦略を達成し、組織を管理および評価するために必要なデータを特定する分析のグラフィックおよびテキスト表現。
"graphical and/or lexical representation of data, specifying their properties, structures, and interrelationships",データのプロパティ、構造、および相互関係を指定する、データのグラフィックおよび/または語彙表現
graphical depiction of hierarchies and interrelationships among persons working together,一緒に働く人々の間の階層と相互関係のグラフィック描写
"graphical language for visualizing, specifying, constructing, and documenting an object-oriented softwar intensive system's artifacts",オブジェクト指向のソフトウェア集約型システムの成果物を視覚化、指定、構築、および文書化するためのグラフィカル言語
"graphical listing of the nodes of an IDEF0 model, showing parent-child relationships as a graphical tree",IDEF0 モデルのノードのグラフィカル リスト。親子関係をグラフィカル ツリーとして表示します。
"graphical representation of a process or the step-by-step solution of a problem, using suitably annotate geometric figures connected by flowlines for the purpose of designing or documenting a process or program",プロセスまたはプログラムの設計または文書化を目的として、フローラインで接続された適切に注釈を付けた幾何学的図形を使用した、プロセスまたは問題の段階的な解決策のグラフィック表現
"graphical representation of the definition, analysis, or method of solution of a problem in which symbols are used to represent operations, data, flow, equipment, etc.",シンボルを使用して操作、データ、フロー、機器などを表す、問題の定義、分析、または解決方法のグラフィック表現。
Graphical User Interface,グラフィカルユーザーインターフェース
Graphics Interchange Format,グラフィックス交換フォーマット
grounds for justified confidence that a claim has been or will be achieved,主張が達成された、または達成されるであろうという正当な確信の根拠
group of adjacent binary digits operated upon as a unit and usually shorter than a computer word (frequently connotes a group of eight bits),隣接する 2 進数のグループで 1 つの単位として処理され、通常はコンピュータ ワードよりも短い (8 ビットのグループを意味することがよくあります)
"group of contiguous storage locations, computer program statements, records, words, characters, or bits that are treated as a unit",単位として扱われる、連続した記憶場所、コンピューター プログラムのステートメント、レコード、単語、文字、またはビットのグループ
group of counter modules on a microcontroller unit that increases its timing capabilities,タイミング機能を向上させるマイクロコントローラー ユニット上のカウンター モジュールのグループ
"group of engineering processes that is identified as a unit for the purposes of work organization, assignment, or evaluation",作業の組織化、割り当て、または評価の目的で 1 つの単位として識別されるエンジニアリング プロセスのグループ
group of information items consistent with a pre-arranged set of generic criteria,事前に取り決められた一連の一般的な基準と一致する情報項目のグループ
"group of people and facilities with an arrangement of responsibilities, authorities and relationships",責任、権限、関係が整理された人々と施設のグループ
"group of people responsible for evaluating and approving or disapproving proposed changes to configuration items, and for ensuring implementation of approved changes",構成アイテムに対する提案された変更を評価し、承認または不承認にし、承認された変更を確実に実装する責任を負う人々のグループ
group of people with complementary skills and expertise who are committed to delivering specified work products in timely collaboration,タイムリーなコラボレーションで指定された作業成果物を提供することに尽力する、補完的なスキルと専門知識を備えた人々のグループ
group of registers in a microprocessor chip,マイクロプロセッサチップ内のレジスタのグループ
group of testing activities that are focused on specific quality characteristics,特定の品質特性に焦点を当てたテスト活動のグループ
grouping of process definitions,プロセス定義のグループ化
grouping of products which is the result of a marketing/licensing strategy to sell entitlements to multiple products as one purchased item,複数の製品への権利を 1 つの購入品目として販売するマーケティング/ライセンス戦略の結果である製品のグループ化。
guarantee that a reference refers to an object that exists,参照が存在するオブジェクトを参照していることを保証する
guarantee that all specified conditions for a relationship hold true,関係に対して指定されたすべての条件が当てはまることを保証する
"GUID as an all capitalized term refers specifically to the 16-byte version. If the term is in lowercase (guid), it refers to a general algorithm that can use either a URI or a 16-byte-based identifie",すべて大文字の GUID は、特に 16 バイト バージョンを指します。用語が小文字 (guid) の場合、URI または 16 バイトベースの ID を使用できる一般的なアルゴリズムを指します。
"guideline formulated by H. R. J. Grosch, stating that the computing power of a computer increases proportionally to the square of the cost of the computer",H. R. J. Grosch によって策定されたガイドラインで、コンピュータの計算能力はコンピュータのコストの 2 乗に比例して増加すると述べています。
guiding principle typically established by senior management that is adopted by an organization to influence and determine decisions,通常、上級管理職によって確立され、意思決定に影響を与え、決定するために組織によって採用される指針
"handling, controlling, and guiding a conflictual situation to achieve a resolution",解決を達成するために紛争状況を処理し、制御し、導くこと
hardware,ハードウェア
"hardware and software development technique in which a preliminary version of part or all of the hardware or software is developed to permit user feedback, determine feasibility, or investigate timing or other issues in support of the development process",ユーザーからのフィードバックを許可したり、実現可能性を判断したり、開発プロセスをサポートするタイミングやその他の問題を調査したりするために、ハードウェアまたはソフトウェアの一部またはすべての予備バージョンを開発するハードウェアおよびソフトウェア開発手法。
"hardware and software environment to support computer system and software design, development, and modification",コンピュータシステムおよびソフトウェアの設計、開発、変更をサポートするハードウェアおよびソフトウェア環境
hardware and software for developing or modifying applications,アプリケーションを開発または変更するためのハードウェアおよびソフトウェア
hardware component with a fully programmable AND/OR gate array,完全にプログラム可能なAND/ORゲートアレイを備えたハードウェアコンポーネント
hardware configuration item,ハードウェア構成アイテム
hardware description language,ハードウェア記述言語
hardware description language used to design and verify digital circuits,デジタル回路の設計と検証に使用されるハードウェア記述言語
hardware design description,ハードウェア設計の説明
hardware design language,ハードウェア設計言語
hardware device used to debug the software of an embedded system,組み込みシステムのソフトウェアをデバッグするために使用されるハードウェア デバイス
hardware input and/or output device that is outside the software system and part of the external environment,ソフトウェア システムの外部および外部環境の一部にあるハードウェア入力および/または出力デバイス
hardware or software component that connects two or more other components for the purpose of passing information from one to the other,情報を一方から他方に受け渡す目的で、2 つ以上の他のコンポーネントを接続するハードウェアまたはソフトウェア コンポーネント
hardware or software product that is not required to be delivered under the contract but may be employed in the development of a product,契約に基づいて納品する必要はないが、製品の開発に使用される可能性があるハードウェアまたはソフトウェア製品
hardware or software that is added to or incorporated within a system that increases accessibility for an individual,個人のアクセシビリティを高めるためにシステムに追加またはシステム内に組み込まれるハードウェアまたはソフトウェア
hardware requirements specification,ハードウェア要件の仕様
hardware system or software program which provides a service to clients,クライアントにサービスを提供するハードウェア システムまたはソフトウェア プログラム
"hardware, software, and firmware used to perform a software engineering effort",ソフトウェアエンジニアリング作業を実行するために使用されるハードウェア、ソフトウェア、およびファームウェア
"hardware, software, data, humans, processes (e.g. processes for providing service to users), procedures (e.g., operator instructions), facilities, materials, and naturally occurring entities (e.g., water, organisms, minerals), or any combination",ハードウェア、ソフトウェア、データ、人間、プロセス（ユーザーにサービスを提供するプロセスなど）、手順（オペレーターの指示など）、設備、材料、自然に存在するもの（水、生物、鉱物など）、またはそれらの組み合わせ
"hardware, software, platform and tools for designers and developers of computer solutions",コンピュータ ソリューションの設計者および開発者向けのハードウェア、ソフトウェア、プラットフォームおよびツール
"hardware, software, tools, applications, documentation, information, processes, or supporting services",ハードウェア、ソフトウェア、ツール、アプリケーション、ドキュメント、情報、プロセス、またはサポート サービス
having a prescribed duration limit for a project task,プロジェクトタスクに所定の期間制限がある
having components whose origin can be determined,起源を特定できるコンポーネントを含む
"having more than one boot mode, to allow running two different operating systems on the same computer",複数のブート モードを備え、同じコンピュータ上で 2 つの異なるオペレーティング システムを実行できるようにする
having only one boot mode to start a computer,コンピュータを起動するブート モードが 1 つだけである
"having the combination of knowledge, formal and informal skills, training, experience, and behavioral attributes required to perform a task or role",任務や役割を遂行するために必要な知識、公式および非公式のスキル、トレーニング、経験、行動特性の組み合わせを持っていること
helpful hint or other information that assists the user by emphasizing or supplementing important points of the main text,本文の重要な点を強調または補足することでユーザーを支援する役立つヒントまたはその他の情報
helps the decision maker determine whether it is justifiable to invest in activities that would reduce uncertainties,意思決定者が不確実性を軽減する活動に投資することが正当かどうかを判断するのに役立ちます。
"heuristic evaluation, cognitive walkthrough, standards inspection, pluralistic walkthrough, consistency inspection",ヒューリスティック評価、コグニティブウォークスルー、標準検査、多元的ウォークスルー、一貫性検査
"hierarchical arrangement of functions, their internal and external (external to the aggregation itself) functional interfaces and external physical interfaces, their respective functional and performance requirements, and their design constraints",機能の階層的配置、その内部および外部 (アグリゲーション自体の外部) の機能インターフェイスと外部物理インターフェイス、それぞれの機能要件とパフォーマンス要件、および設計制約
"hierarchical breakdown of quality factors, quality subfactors, and metrics for a software system",ソフトウェア システムの品質要素、品質サブ要素、およびメトリクスの階層的内訳
High Definition TV,ハイビジョンテレビ
high-integrity bus system for networking intelligent devices within a system,システム内のインテリジェント デバイスをネットワーク化するための高信頼性バス システム
High-level design typically involves organizing a system into subprograms and specifying the interfaces between them.,一般に、高レベルの設計では、システムをサブプログラムに編成し、それらの間のインターフェイスを指定します。
high-level language,高級言語
high-level net graph that contains parameters in its definition,定義にパラメータを含む高レベルのネット グラフ
high-level objective of performing the process and the likely outcomes of effective implementation of the proces,プロセスを実行するための高レベルの目的と、プロセスを効果的に実行することで予想される結果
High-level Petri Net,高度なペトリネット
High-level Petri Net Graph,高レベルのペトリネットグラフ
High-level Petri Net Schema,高レベルのペトリネットスキーマ
high-level programming language used to develop courseware for computer-assisted instruction,コンピュータ支援指導用のコースウェアを開発するために使用される高級プログラミング言語
high-order language,高次言語
"high-speed mode, low power mod",高速モード、低電力モード
higher-level quality attribut,より高いレベルの品質属性
"histogram, ordered by frequency of occurrence, that shows how many results were generated by each identified cause",発生頻度順に並べられたヒストグラム。特定された原因ごとに生成された結果の数を示します。
holistic approach to quality improvement in all life-cycle phase,ライフサイクルの全段階における品質向上への総合的なアプローチ
"Horizontal microinstructions are relatively long, often 64 bits or more, and are called 'horizontal' because the set of simultaneous operations that they specify are written on a single line, rather than being listed sequentially down the page.",水平マイクロ命令は比較的長く、多くの場合 64 ビット以上で、指定する一連の同時操作がページの下に順番にリストされるのではなく、単一行に記述されるため、「水平」と呼ばれます。
hour of effort expended by a member of the staff,スタッフが費やした時間
"hour of effort expended by a member of the staff who does not directly define or create the software product, but acts to assist those who do",ソフトウェア製品を直接定義または作成しないが、ソフトウェア製品を定義または作成するスタッフを支援するために費やすスタッフの時間
HTML reference designator,HTML参照指定子
human action that produces an incorrect result,誤った結果を生み出す人間の行為
human computer interface,ヒューマンコンピュータインターフェース
human effort that is not directly associated with the units being produced,生産される単位に直接関係しない人間の努力
Human resources are included as part of efficiency.,効率化には人的リソースも含まれます。
human systems integration,人間のシステム統合
human-machine interfac,ヒューマンマシンインターフェース
HyperText Markup Language,ハイパーテキストマークアップ言語
HyperText Transfer Protocol,ハイパーテキスト転送プロトコル
"i.e., a count to determine the scope of an addition, a change, or a deletion of functional specifications. Both the change in the application function point count and the project function point count can be the subject of this count.",つまり、機能仕様の追加、変更、削除の範囲を決定するためのカウントです。アプリケーション機能ポイント数の変更とプロジェクト機能ポイント数の両方がこのカウントの対象となる可能性があります。
"i.e., a definition of the meta-object definitions used to describe information in model",つまり、モデル内の情報を記述するために使用されるメタオブジェクト定義の定義
"i.e., the functionality already provided to the user or that is still to be provided. With it, the effort required to support the realized application can also be determined.",つまり、ユーザーにすでに提供されている機能、または今後提供される機能です。これにより、実現されたアプリケーションをサポートするために必要な労力も決定できます。
I/O device that generates an interrupt after producing some input or generating some output,何らかの入力を生成した後、または何らかの出力を生成した後に割り込みを生成する I/O デバイス
IBD development effort aimed at the delivery of some product or service through the application of a methodology,IBD 方法論の適用を通じて何らかの製品またはサービスの提供を目的とした開発作業
ICOM code that maps a tunneled boundary arrow to an arrow attached to some ancestral box,トンネルされた境界矢印を祖先のボックスに接続された矢印にマッピングする ICOM コード
ICOM code that maps an untunneled boundary arrow in a child diagram to an arrow attached to the parent box that is detailed by that diagram,子ダイアグラム内のトンネルされていない境界矢印を、そのダイアグラムで詳しく説明されている親ボックスにアタッチされた矢印にマップする ICOM コード
"identical behavior of two objects, such that one object can replace the other with respect to a set of criteria without the environment being able to notice the difference in the objects' behavior on the basis of the set of criteria",2 つのオブジェクトの同一の動作。環境が一連の基準に基づいてオブジェクトの動作の違いに気づくことなく、一方のオブジェクトが一連の基準に関して他方のオブジェクトを置き換えることができます。
identifiable association between an object and a value,オブジェクトと値の間の識別可能な関連性
identifiable entity that denotes the indivisible primitive of service provision that can be requested,要求できるサービス提供の分割不可能な基本要素を示す識別可能なエンティティ
identifiable entity with an associated predicate (a single-argument mathematical function with a Boolean result) defined over entitie,エンティティに対して定義された関連付けられた述語 (ブール結果を含む単一引数の数学関数) を持つ識別可能なエンティティ
identifiable part of a software product,ソフトウェア製品の識別可能な部分
"identification and descriptions of the software product, software life-cycle data, archive and release data, and instructions for building the executable object code",ソフトウェア製品の識別と説明、ソフトウェアのライフサイクル データ、アーカイブおよびリリース データ、および実行可能オブジェクト コードの構築手順
"identification and documentation of project roles, responsibilities and reporting relationships, as well as estimation of required staff by time period and creation of a staffing management plan",プロジェクトの役割、責任、報告関係の特定と文書化、および期間ごとの必要なスタッフの見積もりと人員配置管理計画の作成
identification and documentation of the derivation path (upward) and allocation/ flow-down path (downward) of requirements in the requirements hierarchy,要件階層における要件の派生パス (上向き) と要件の割り当て/フローダウン パス (下向き) の特定と文書化
"identification of a sequence of steps involving activities, constraints, and resources that are performed for a given purpose",特定の目的のために実行されるアクティビティ、制約、およびリソースを含む一連のステップの識別
identification of all system and software products that a change request affects and development of an estimate of the resources needed to accomplish the change,変更要求が影響するすべてのシステムおよびソフトウェア製品の特定と、変更を達成するために必要なリソースの見積もりの​​作成
identification or control information placed at the beginning of a file or message,ファイルまたはメッセージの先頭に置かれる識別情報または制御情報
Identification or control information placed at the end of a file or message,ファイルまたはメッセージの末尾に配置される識別情報または制御情報
"identification, estimation, allocation, and monitoring of the means used to develop a product or perform a service",製品の開発またはサービスの実行に使用される手段の特定、推定、割り当て、および監視
"identification, for each instance of a life cycle process, of the success criteria, artefact-specific activities and tasks needed to achieve the process outcomes, and the competencies needed to perform these tasks, based on the characteristics and requirements of the target system element",ライフサイクルプロセスの各インスタンスについて、ターゲットシステム要素の特性と要件に基づいて、成功基準、プロセスの結果を達成するために必要なアーティファクト固有のアクティビティとタスク、およびこれらのタスクを実行するために必要なコンピテンシーを特定する
"identification, usually alphanumeric, of a particular product that allows it to be tracked for inventory and software entitlement purposes",在庫およびソフトウェアの権利付与の目的で追跡できるようにする、特定の製品の識別 (通常は英数字)
identified condition or set of conditions within the subject software that is associated with certain of the possible actions of the subject software,対象ソフトウェアの特定の可能な動作に関連する、対象ソフトウェア内で特定された状態または一連の状態
identified instance of a configuration item,構成アイテムの識別されたインスタンス
identified instance of an item,特定されたアイテムのインスタンス
identified part of an organization that deploys one or more processes that operate within a coherent set of business goals and which forms the basis for the scope of an assessment,一貫した一連のビジネス目標内で運用される 1 つ以上のプロセスを展開し、評価の範囲の基礎を形成する、組織の特定された部分
identified set of software characteristics to be measured under specified conditions by comparing actual behavior with the required behavior,実際の動作と必要な動作を比較することによって、指定された条件下で測定される特定のソフトウェア特性のセット
identified set of software features to be measured under specified conditions by comparing actual behavior with the required behavior,実際の動作と必要な動作を比較することによって、指定された条件下で測定される特定のソフトウェア機能のセット
"identified usability defect, usability problem, or positive usability-related attribute",特定されたユーザビリティの欠陥、ユーザビリティの問題、または肯定的なユーザビリティ関連の属性
identifier for a particular grouping of data,データの特定のグループの識別子
identifier that refers to a numeric or string value that does not change during program execution,プログラムの実行中に変更されない数値または文字列値を参照する識別子
"identifier, in the context of an engineering interface reference management domain, for an engineering object interface that is available for distributed binding",分散バインディングに使用できるエンジニアリング オブジェクト インターフェイスの、エンジニアリング インターフェイス参照管理ドメインのコンテキストにおける識別子
"identifier, in the naming context of a capsule, used by a basic engineering object to select one of the bindings in which it is involved, for the purpose of interaction",カプセルの命名コンテキストにおける識別子。相互作用の目的で、基本的なエンジニアリング オブジェクトが関与するバインディングの 1 つを選択するために使用されます。
Identity is intrinsic to the instance and independent of the instance's property values or the classes to which the instance belongs.,ID はインスタンスに固有のものであり、インスタンスのプロパティ値やインスタンスが属するクラスには依存しません。
"identity of phenomena existing over some period of time at the interface between two units, caused by one unit and affecting the other unit",2 つのユニット間の境界面で一定期間にわたって存在し、一方のユニットによって引き起こされ、他方のユニットに影響を与える現象の正体
IEEE 802 Ethernet uses a serial bus.,IEEE 802 イーサネットはシリアル バスを使用します。
"If a class is declared to require at least one instance of a related state class, it would be invalid to allow an instance that does not have such a relationship.",クラスが関連する状態クラスのインスタンスを少なくとも 1 つ必要とするように宣言されている場合、そのような関係を持たないインスタンスを許可することは無効になります。
"If a computer has only one accumulator, an instruction that refers to the accumulator needs no address information describing it.",コンピュータにアキュムレータが 1 つしかない場合、アキュムレータを参照する命令にはそれを記述するアドレス情報は必要ありません。
"if a transition is enabled in a mode, it can occur in that mode.",あるモードで遷移が有効になっている場合、そのモードで遷移が発生する可能性があります。
"If Alternative A costs $10 000 and Alternative B costs $12 000, the incremental investment between A and B is $2000.","代替案 A のコストが 10,000 ドル、代替案 B のコストが 12,000 ドルの場合、A と B の間の増分投資は 2,000 ドルとなります。"
"If Alternative A generates $10,000 and Alternative B generates $12,000, the incremental benefit between A and B is $2 000.","代替案 A が 10,000 ドルを生成し、代替案 B が 12,000 ドルを生成した場合、A と B の間の増分利益は 2,000 ドルになります。"
"if an instance is in a class S and not in any subclass of S, then S is the lowclass for the instance",インスタンスがクラス S に属し、S のサブクラスに属さない場合、S はインスタンスの下位クラスになります。
"If an organization needs to know the size of its software portfolio, then the Scope of the FSM will include all the functional user requirements currently utilized. However, if a project manager is seeking to determine the size of a particular release of software, then the scope will include only those functional user requirements impacted by the project.",組織がソフトウェア ポートフォリオの規模を知る必要がある場合、FSM の範囲には、現在使用されているすべての機能ユーザー要件が含まれます。ただし、プロジェクト マネージャーがソフトウェアの特定のリリースのサイズを決定しようとしている場合、範囲には、プロジェクトによって影響を受ける機能ユーザー要件のみが含まれます。
if and only if,もし、そしてその場合に限り
"IF the data arrives faster than expected, THEN reject every third input ELSE process all data received ENDIF.",データが予想よりも早く到着した場合、THEN 3 番目ごとの入力を拒否し、ELSE 受信したすべてのデータを処理します。ENDIF。
"If the incremental benefit of a second alternative over the first is more than the incremental investment between them, the second alternative is a better investment than the first.",最初の選択肢に対する 2 番目の選択肢の増分利益が、それらの間の増分投資よりも大きい場合、2 番目の選択肢は最初の選択肢よりも優れた投資となります。
"If the normal state of the fuse means logic ""1"", the breaking state is ""0.""",ヒューズの正常な状態が論理「1」を意味する場合、切断状態は「0」になります。
"If the specified address requires no modification, it is also the effective address.",指定されたアドレスを変更する必要がない場合、それが有効なアドレスでもあります。
"If the specified instruction requires no modification, it is also the effective instruction.",指定された命令が変更を必要としない場合、それも有効な命令となります。
"If there are no more logical records to be processed, the end-of-input condition becomes tru",処理する論理レコードがもうない場合、入力終了条件は true になります。
if-then-else construct in which processing is specified for both outcomes of the branch,分岐の両方の結果に対する処理が指定されている if-then-else 構造
"if-then-else construct in which processing is specified for only one outcome of the branch, the other outcom resulting in skipping this processing",if-then-else 構造では、分岐の 1 つの結果に対してのみ処理が指定され、もう一方の結果はこの処理をスキップします。
"if-then-else, ca",if-then-else、ca
"IF, THEN, WHILE",もし、そのとき、その間
illegal use or copying of software products,ソフトウェア製品の違法な使用またはコピー
illustration that shows the actual appearance of physical objects,物理的なオブジェクトの実際の外観を示す図
image format,画像フォーマット
"imitation of a user, with regard to the tasks he submits and his time behavior, realized by a technical system",ユーザーが提出するタスクや時間的行動に関して、技術システムによって実現される、ユーザーの模倣
immediate environment in which a function (or set of functions in a diagram) operates,関数 (または図内の一連の関数) が動作する直接の環境
imperfection or deficiency in a work product where that work product does not meet its requirements or specifications and needs to be either repaired or replaced,作業成果物がその要件や仕様を満たしておらず、修理または交換が必要な作業成果物の欠陥または欠陥
Implementation can include providing mechanisms for the product or system to analyze its own faults and provide reports before or after a failure or other event.,実装には、製品またはシステムがそれ自体の障害を分析し、障害やその他のイベントの前後にレポートを提供するためのメカニズムを提供することが含まれる場合があります。
Implementation Conformance Statement,実装適合性宣言
Implementation Extra Information for Testing,実装のテストに関する追加情報
implementation of an algorithm in the software with which the end user or the software can perform part or all of a work task,エンドユーザーまたはソフトウェアが作業タスクの一部またはすべてを実行できるソフトウェアへのアルゴリズムの実装。
implementation of an operation,作戦の実施
"implementation of appropriate administrative, technical, or physical means to guard against unauthorized intentional or accidental disclosure, modification, or destruction of data",データの不正な意図的または偶発的な開示、変更、または破壊を防ぐための適切な管理的、技術的、または物理的手段の導入
implementation of the component home interface specified by a composition definition,構成定義によって指定されたコンポーネント ホーム インターフェイスの実装
implemented process that is managed and tailored from the organization's set of standard processes according to the organization's tailoring guidelines,組織の調整ガイドラインに従って、組織の一連の標準プロセスから管理および調整される実装プロセス
"implicit cost associated with investing money in a certain activity, so that it is no longer available for investing elsewhere",特定の活動への資金の投資に関連する暗黙のコスト。そのため、その資金は他の活動に投資できなくなります。
implicit or explicit relationship between a latent variable and its (multi-item) measures,潜在変数とその（複数項目）測定値の間の暗黙的または明示的な関係
Implicitly defined by a component definition in IDL (interface definition language),IDL (インターフェース定義言語) のコンポーネント定義によって暗黙的に定義されます。
importance assigned to a given interrupt request,特定の割り込み要求に割り当てられた重要性
improvement in reliability that results from correction of faults,故障の修正による信頼性の向上
"in a computer network, a computer that provides processing capabilities to users of the network",コンピュータ ネットワークにおいて、ネットワークのユーザーに処理機能を提供するコンピュータ
"in a computer, a functional unit that interprets and executes instructions",コンピュータにおいて、命令を解釈して実行する機能単位
"in a data processing system, the functions that provide access to data, perform or monitor the storage of data, and control input-output operations",データ処理システムにおいて、データへのアクセスを提供し、データの保存を実行または監視し、入出力操作を制御する機能
"in a decision analysis, the alternative of not investing in any of the proposed alternatives",意思決定分析において、提案された代替案のいずれにも投資しないという代替案
"in a diagram, a point, circle, or other geometric figure used to represent a state, event, or other item of interest",状態、イベント、またはその他の関心のある項目を表すために使用される図、点、円、またはその他の幾何学的図形
In a generalization taxonomy every instance is fully described by one or more of the classes in the taxonomy. The structuring of classes as a generalization taxonomy determines the inheritance of responsibilities among classes.,一般化分類では、すべてのインスタンスは分類内の 1 つ以上のクラスによって完全に記述されます。一般化分類法としてのクラスの構造化により、クラス間の責任の継承が決まります。
"in a given activity, an action that has no predecessor",特定のアクティビティ内で、先行するものがないアクション
"in a hierarchical structure, the next lower level that is associated with a given element",階層構造において、特定の要素に関連付けられた 1 つ下のレベル
"In a life cycle context, the set of activities ensuring and gaining confidence that a system is able to accomplish its intended use, goals and objectives",ライフサイクルのコンテキストにおいて、システムが意図された用途、目標、目的を達成できることを保証し、確信を得る一連のアクティビティ
"in a menu-driven system, a feature that permits advanced users to perform functions in a command-driven mod without selecting options from the menus",メニュー駆動システムにおいて、上級ユーザーがメニューからオプションを選択せず​​にコマンド駆動 MOD の機能を実行できる機能。
"in a microprogrammed computer, the computer memory in which microprograms reside",マイクロプログラムされたコンピュータにおいて、マイクロプログラムが常駐するコンピュータメモリ
"in a programming language, a meaningful expression that defines data, specifies program actions, or directs the assembler or compiler",プログラミング言語において、データを定義したり、プログラムのアクションを指定したり、アセンブラやコンパイラに指示したりする意味のある式
"in a range of estimates, the region that is impossible under any circumstances to achieve",さまざまな推定の範囲内で、いかなる状況下でも達成することは不可能な領域
"in a relationship, the condition when the same data object plays both (binary or many (n-ary)) roles",関係において、同じデータ オブジェクトが両方の役割 (二項または多数 (n 項)) を果たすときの状態
"in a reuse library, the characteristics of an asset that make it easy to use in different contexts, software systems, or in building different assets",再利用ライブラリでは、さまざまなコンテキスト、ソフトウェア システム、またはさまざまな資産の構築で使いやすくする資産の特性
"in a source program, an explicit representation of the value of an item",ソース プログラムにおける、項目の値の明示的な表現
"in a two-level implementation of microprogramming, a secondary control store in which nanoinstructions resid",マイクロプログラミングの 2 レベルの実装で、ナノ命令が存在する二次制御ストア
"in a two-level implementation of microprogramming, an instruction that specifies one or more of the basic operations needed to carry out a microinstruction",マイクロプログラミングの 2 レベルの実装において、マイクロ命令を実行するために必要な 1 つまたは複数の基本操作を指定する命令
"in a virtual storage system, a fixed-length segment of data or of a computer program that has a virtual address and is transferred as a unit between main and auxiliary storage",仮想ストレージ システムにおいて、仮想アドレスを持ち、主記憶装置と補助記憶装置の間で単位として転送されるデータまたはコンピュータ プログラムの固定長セグメント
"in a virtual storage system, the address assigned to an auxiliary storage location to allow that location to be accessed as though it were part of main storage",仮想ストレージ・システムにおいて、あたかも主記憶域の一部であるかのように補助記憶域にアクセスできるようにするために、補助記憶域に割り当てられるアドレス。
"In addition, other properties such as authenticity, accountability, non-repudiation and reliability can also be involved.",さらに、信頼性、説明責任、否認防止、信頼性などの他の特性も関係する可能性があります。
"In an Ada PDL, a design unit is represented by an Ada compilation unit.",Ada PDL では、デザイン ユニットは Ada コンパイル ユニットによって表されます。
"In an enhancement project, functionality can be added to, changed in, or deleted from an existing application. An enhancement project can also develop and deliver corrective and perfective maintenance, but these do not contribute to the enhancement project functional size.",拡張プロジェクトでは、既存のアプリケーションに機能を追加、変更、または削除できます。拡張プロジェクトでは、修正および完全なメンテナンスを開発および提供することもできますが、これらは拡張プロジェクトの機能サイズには影響しません。
"in an IDEF0 model, a condition or set of conditions required for a function to produce correct output",IDEF0 モデルにおいて、関数が正しい出力を生成するために必要な条件または一連の条件
"in an IDEF0 model, that which is produced by a function",IDEF0 モデルでは、関数によって生成されるもの
"in an IDEF0 model, that which is transformed by a function into output",IDEF0 モデルでは、関数によって出力に変換されるもの
"in an IDEF0 model, the means used by a function to transform input into output",IDEF0 モデルにおいて、入力を出力に変換するために関数によって使用される手段
"in an information processing system, all the data and their characteristics, including interdependencies",情報処理システム内のすべてのデータとその特性 (相互依存関係を含む)
"in an information processing system, the functions of controlling the acquisition, analysis, retention, retrieval, and distribution of information",情報処理システムにおいて、情報の取得、分析、保存、検索、配布などを制御する機能。
"in analytic hierarchy process (AHP), a function that measures how consistently the decision analyst assigned the values to the pair-wise comparison",分析階層プロセス (AHP) において、意思決定アナリストが一対比較にどの程度一貫して値を割り当てたかを測定する関数
"in computer mathematics, the action specified by an operator on one or more operands",コンピューター数学において、1 つまたは複数のオペランドに対して演算子によって指定されるアクション
"in computer performance engineering, the period of time during which a system or component is operational, in service, and in use",コンピュータ パフォーマンス エンジニアリングにおいて、システムまたはコンポーネントが動作、サービス、および使用されている期間
"in computer performance evaluation, a ratio representing the amount of time a system or component is busy divided by the time it is available",コンピュータのパフォーマンス評価において、システムまたはコンポーネントがビジー状態にある時間を、それが使用可能な時間で割ったものを表す比率。
"in computer performance evaluation, a representation of a system depicting the relationships between workloads and performance measures in the system",コンピュータのパフォーマンス評価において、システム内のワークロードとパフォーマンス測定の関係を表すシステムの表現。
"in computer programming, any item that can be named or denoted in a program",コンピュータープログラミングにおいて、プログラム内で名前を付けたり表示したりできるあらゆる項目
"in computer resource management, a synonym for memory compaction (1)",コンピュータ リソース管理において、メモリ圧縮と同義語 (1)
"in computer system operations, the return to normal operation after a hardware or software failure",コンピュータ システムの動作において、ハードウェアまたはソフトウェアの障害後に通常の動作に戻ること
"in configuration management, a notice of revision",構成管理における改訂のお知らせ
"in configuration management, a proposed engineering change and the documentation by which the change is described and suggested",構成管理では、提案されたエンジニアリング変更と、その変更を説明および提案するための文書
"in configuration management, an alteration in the configuration of a configuration item or other designated item after formal establishment of its configuration identification",構成管理において、構成識別が正式に確立された後の、構成アイテムまたはその他の指定されたアイテムの構成の変更。
"in configuration management, an independent examination of the configuration status to compare with the physical configuration2. detailed review of processes, product definition information, documented verification of compliance with requirements, and an inspection of products to confirm that products have achieved their required attributes or conform to released product configuration definition information",構成管理において、物理構成と比較するための構成ステータスの独立した検査。2プロセスの詳細なレビュー、製品定義情報、要件への準拠の文書化された検証、および製品が必要な特性を達成していること、またはリリースされた製品構成定義情報に準拠していることを確認するための製品の検査
"in configuration management, an item within a configuration item that, because of special engineering or logistic considerations, requires an approved specification to establish technical or inventory control at the component level",構成管理において、特殊なエンジニアリングまたは物流上の考慮事項により、コンポーネント レベルで技術的または在庫管理を確立するために承認された仕様を必要とする構成アイテム内のアイテム。
"in configuration management, that configuration comprising the physical and functional characteristics of an item as an entity, but not including any characteristics of the elements making up the item",構成管理において、その構成は、エンティティとしての品目の物理的および機能的特性を含むが、品目を構成する要素の特性は含まない
"in configuration management, the administrative and technical procedures and documentation necessary to identify functional and physical characteristics between and within configuration items provided by different developers, and to resolve problems concerning the specified interfaces",構成管理において、さまざまな開発者が提供する構成アイテム間および構成アイテム内の機能的および物理的特性を特定し、指定されたインターフェイスに関する問題を解決するために必要な管理的および技術的手順と文書。
"in configuration management, the application of technical and administrative direction to designate the documents and changes to those documents that formally identify and establish baselines at specific times during the life cycle of a configuration item",構成管理において、構成アイテムのライフサイクルの特定の時点でベースラインを正式に特定して確立する文書とその文書への変更を指定するための技術的および管理的指示の適用。
"in configuration management, the current approved specifications governing the development of configuration items that are part of a higher-level configuration ite",構成管理において、上位レベルの構成アイテムの一部である構成アイテムの開発を管理する、現在承認されている仕様。
"in configuration management, the current approved technical documentation for a configuration item",構成管理では、構成アイテムについて現在承認されている技術文書
"in configuration management, the functional and physical characteristics of hardware or software as set forth in technical documentation or achieved in a product",構成管理において、技術文書に記載されている、または製品で実現されているハードウェアまたはソフトウェアの機能的および物理的特性。
"in configuration management, the process of identifying all functional and physical characteristics relevant to the interfacing of two or more configuration items provided by one or more organizations and ensuring that proposed changes to these characteristics are evaluated and approved prior to implementation",構成管理において、1 つ以上の組織が提供する 2 つ以上の構成アイテムのインターフェースに関連するすべての機能的および物理的特性を特定し、これらの特性に対する提案された変更が実装前に評価および承認されるようにするプロセス。
"in configuration management, the software and associated technical documentation that define the evolving configuration of a computer software configuration item during development",構成管理において、開発中にコンピューター ソフトウェア構成アイテムの進化する構成を定義するソフトウェアおよび関連技術文書
"in data processing, the predetermined course of events that occur during the execution of all or part of a program",データ処理において、プログラムの全体または一部の実行中に発生するあらかじめ決められた一連のイベント
"in decision making under uncertainty, a method which gives each decision a value which is a weighted sum of its worst and best possible outcomes",不確実性の下での意思決定において、各決定に、考えられる最悪の結果と最良の結果の加重合計である値を与える方法
"in decision making under uncertainty, assuming that the best state of nature will happen, selection of the alternative that has the best payoff from all of the best payoffs",不確実性の下での意思決定において、最良の自然状態が起こると仮定し、すべての最良の利益の中から最良の利益をもたらす代替案を選択すること
"in decision making under uncertainty, assuming that the worst state of nature will happen, selection of the alternative that has the best payoff from all of the worst payoffs",不確実性の下での意思決定において、最悪の自然状態が起こることを想定し、最悪の見返りの中から最も見返りが大きい選択肢を選択すること
"in decision making under uncertainty, selection of the alternative that minimizes the regret that one would have, if one chose the wrong alternative under each state of nature; that is, the alternative that has the smallest maximum regret",不確実性の下での意思決定において、それぞれの自然状態の下で間違った選択肢を選択した場合に生じるであろう後悔を最小限に抑える選択肢の選択。つまり、最大の後悔が最小となる代替案です。
"in decision-tree analysis, the difference between the expected value of the decision tree and the value of the decision tree if all random outcomes were known in advance",決定木分析において、決定木の期待値と、すべてのランダムな結果が事前にわかっていた場合の決定木の値との差。
"in decisions under uncertainty, a table relating the desirability of a set of alternatives to a set of future states",不確実性の下での意思決定において、一連の将来の状態に対する一連の選択肢の望ましさを関係付ける表
"in decreasing order of resolution, CPU execution time, elapsed time (i.e., wall clock time), or calendar time",解像度、CPU 実行時間、経過時間 (実時間)、​​またはカレンダー時間の降順で表示されます。
"in engineering, the monitoring of system output to compare with expected output and taking corrective action when the actual output does not match the expected output",エンジニアリングにおいて、システム出力を監視して期待される出力と比較し、実際の出力が期待される出力と一致しない場合に修正措置を講じること
"In entitlement management, a consolidation tag can be used to facilitate subsequent creation of children tags with entitlement quantities which do not match the original granted entitlements",エンタイトルメント管理では、統合タグを使用して、元の付与されたエンタイトルメントと一致しないエンタイトルメント数量を持つ子タグを後で作成することを容易にすることができます。
"in fault tolerance, a version of a program resulting from the application of software diversity",フォールト トレランスにおいて、ソフトウェアの多様性を適用した結果として生じるプログラムのバージョン
"in fault tolerance, realization of the same function by different means",耐障害性において、同じ機能を異なる手段で実現すること
"in fault tolerance, realization of the same function with identical means",耐障害性において、同じ機能を同じ手段で実現すること
"in fault tolerance, the presence of auxiliary components in a system to perform the same or similar functions as other elements for the purpose of preventing or recovering from failures",フォールト トレランスにおいて、障害の防止または障害からの回復を目的として、他の要素と同じまたは類似の機能を実行するシステム内の補助コンポーネントの存在。
"in fault tolerance, the use of redundant elements operating simultaneously to prevent, or permit recovery from, failures",フォールト トレランスにおいて、障害を防止したり、障害から回復できるようにするために同時に動作する冗長要素の使用。
"in fault tolerance, the use of redundant elements that are left inoperative until a failure occurs in a primary element",フォールト トレランスにおいて、主要な要素に障害が発生するまで動作しない状態にされる冗長要素の使用
"in file access, a hierarchical sequence of directory and subdirectory names specifying the storage location of a file,",ファイル アクセスにおいて、ファイルの保存場所を指定するディレクトリ名とサブディレクトリ名の階層シーケンス。
"in FORTRAN, using the statement B + C = A rather than the correct A = B + C",FORTRAN では、正しい A = B + C ではなく、ステートメント B + C = A を使用します。
"In information processing, knowledge concerning objects, such as facts, events, things, processes, or ideas, including concepts, that within a certain context has a particular meaning",情報処理において、特定の文脈内で特定の意味を持つ、概念を含む事実、出来事、物、プロセス、またはアイデアなどのオブジェクトに関する知識。
"In interrogations, invocations and terminations are always paired. Announcements do not have terminations. Thus there is no possibility of an operation consisting of an invocation followed by a sequence of associated terminations.",尋問では、呼び出しと終了は常にペアになります。アナウンスには終了がありません。したがって、呼び出しとそれに続く一連の関連終了からなる操作の可能性はありません。
"in job scheduling, the computing environment in which high-priority processes or those requiring user interaction are executed",ジョブ スケジューリングにおいて、優先度の高いプロセスまたはユーザーの対話を必要とするプロセスが実行されるコンピューティング環境
"in job scheduling, the computing environment in which low-priority processes or those not requiring user interaction are executed",ジョブ スケジューリングにおいて、優先度の低いプロセスまたはユーザーの介入を必要としないプロセスが実行されるコンピューティング環境
"In many cases, the identification of equivalence partitions is subjective (especially in the sub-partitioning of ""invalid"" partitions), so a definitive count of the number of equivalence partitions in a test item could be impossible.",多くの場合、等価パーティションの識別は主観的なものであるため (特に「無効な」パーティションのサブパーティショニングの場合)、テスト項目内の等価パーティションの数を正確にカウントすることは不可能な場合があります。
"in microprogramming, an instruction that specifies one or more of the basic operations needed to carry out a machine language instruction",マイクロプログラミングにおいて、機械語命令を実行するために必要な 1 つ以上の基本操作を指定する命令
"in microprogramming, compaction in which microoperations are not moved beyond the boundaries of the single-entry, single-exit sequential blocks in which they occ",マイクロプログラミングにおいて、マイクロ操作が単一入口、単一出口の連続ブロックの境界を超えて移動されない圧縮。
"in microprogramming, compaction in which microoperations can be moved beyond the boundaries of the single-entry, single-exit sequential blocks in which they occ",マイクロプログラミングにおいて、マイクロ操作が実行される単一入口、単一出口の順次ブロックの境界を越えてマイクロ操作を移動できる圧縮。
"in microprogramming, one of the basic operations needed to carry out a machine language instruction",マイクロプログラミングにおいて、機械語命令を実行するために必要な基本操作の 1 つ
"in microprogramming, the process of converting a microprogram into a functionally equivalent microprogram that is faster or shorter than the original",マイクロプログラミングにおいて、マイクロプログラムを、元のプログラムよりも高速または短い、機能的に同等のマイクロプログラムに変換するプロセス
"in Mk II FPA, a contrivance which 'lumps together' all the non-primary entities of an application",Mk II FPA の、アプリケーションの主要でないすべてのエンティティを「ひとまとめ」にする仕組み
"in Mk II FPA, one of the main entity-types which has the attributes that the application has been designed to process and/or store",Mk II FPA では、アプリケーションが処理および/または保存するように設計された属性を持つ主要なエンティティ タイプの 1 つ
"in not-for-profit decision analysis, evaluating the desirability of an alternative on the ratio of the net benefits to the population to the net costs to the sponsor",非営利の意思決定分析において、スポンサーの純コストに対する人口への純利益の比率に基づいて代替案の望ましさを評価する
"In order to use database management systems (DBMS), it is necessary to represent data and the relative operations on it in terms of a data model, a data definition and manipulation language",データベース管理システム (DBMS) を使用するには、データとそれに関連する操作をデータ モデル、データ定義、および操作言語の観点から表現する必要があります。
"In order to use relational data base management systems (RDBMS), it is necessary to represent relational model of data that organizes data with specific characteristics (tables or relations, unique key, etc.)",リレーショナル データベース管理システム (RDBMS) を使用するには、特定の特性 (テーブルまたはリレーション、一意のキーなど) を持つデータを編成するデータのリレーショナル モデルを表す必要があります。
"In other words, a complete definition of the format and contents of a transfer.",言い換えれば、転送の形式と内容の完全な定義です。
"In other words, the total functionality to be added, changed, or deleted. It enables those involved to determine the effort required in order to realize new software or to change the functionality of existing software. In the latter case, a project function point count pertains to the addition, change, or deletion of functions.",言い換えれば、追加、変更、または削除される機能の合計です。これにより、関係者は、新しいソフトウェアを実現したり、既存のソフトウェアの機能を変更したりするために必要な労力を判断できます。後者の場合、プロジェクト機能ポイント数は機能の追加、変更、または削除に関係します。
"in particular, what output is generated as a result of each input.",特に、各入力の結果としてどのような出力が生成されるか。
"in path analysis, a sequence of computer program statements between two consecutive branch points",パス分析において、2 つの連続する分岐点間の一連のコンピューター プログラム ステートメント
In practical terms extended entry tables include limited entries and are therefore mixed entry tables. Any extended or mixed entry table can be transformed into a limited entry table.,実際には、拡張エントリ テーブルには制限されたエントリが含まれるため、混合エントリ テーブルになります。拡張エントリ テーブルまたは混合エントリ テーブルは、制限されたエントリ テーブルに変換できます。
"In principle, each variation point has at least one variant.",原則として、各バリエーション ポイントには少なくとも 1 つのバリエーションがあります。
"In printed documentation, a topic is equivalent to a section (heading; subheading) and its content. In onscreen documentation, a topic consists of a title (heading) and information about a subject (typically, a task or a concept or reference information). For on-screen documentation, the system can present a topic without user intervention",印刷されたドキュメントでは、トピックはセクション (見出し、小見出し) とその内容に相当します。画面上のドキュメントでは、トピックはタイトル (見出し) と主題に関する情報 (通常はタスク、概念、または参照情報) で構成されます。画面上のドキュメントの場合、システムはユーザーの介入なしでトピックを表示できます。
"In process measurement frameworks, constructs (also refers to latent constructs) are theoretical concepts, such as the process quality characteristics and process attributes. The meaning that one assigns to a construct is its theoretical definition, which describes its distinct dimensions (facets).",プロセス測定フレームワークでは、構成要素 (潜在構成要素とも呼ばれます) は、プロセス品質特性やプロセス属性などの理論的な概念です。ある構造に割り当てられる意味は、その理論的な定義であり、それはその明確な次元 (ファセット) を説明します。
"in programming, a defined action that can be performed by a computer system",プログラミングにおいて、コンピュータ システムによって実行できる定義されたアクション
"in programming, to state explicitly and in full all of the instructions involved in multiple executions of a loop",プログラミングにおいて、ループの複数の実行に含まれるすべての命令を明示的かつ完全に記述すること
"in proof of correctness, a designation indicating that a program's output assertions follow logically from its input assertions and processing steps",正しさの証明において、プログラムの出力アサーションがその入力アサーションおよび処理ステップから論理的にたどることを示す指定
"In self-improving systems, the knowledge base additionally contains information resulting from the solution of previously encountered problems",自己改善システムでは、ナレッジ ベースには、以前に遭遇した問題の解決策から得られた情報も含まれています。
"in software and system testing, to install or insert devices or instructions into hardware or software to monitor the operation of a system or component",ソフトウェアおよびシステムのテストにおいて、システムまたはコンポーネントの動作を監視するために、デバイスまたは命令をハードウェアまたはソフトウェアにインストールまたは挿入すること
"in software design, a form of demodularization in which a subordinate module is copied inline into the body of a superordinate module",ソフトウェア設計において、下位モジュールが上位モジュールの本体にインラインでコピーされる復モジュール化の形式
"in software design, a form of demodularization in which a superordinate module is copied into the body of a subordinate module",ソフトウェア設計において、上位モジュールを下位モジュールの本体にコピーする復モジュール化の形式
"in software design, a form of demodularization in which two or more modules that execute one after the other are combined into a single module",ソフトウェア設計において、次々に実行される 2 つ以上のモジュールを 1 つのモジュールに結合する復モジュール化の形式
"in software design, a measure of the interdependence among modules in a computer program [ISO/IEC TR 19759:2016 Software Engineering — Guide to the Software Engineering Body of Knowledge (SWEBOK) 2.1.4,",ソフトウェア設計における、コンピュータ プログラム内のモジュール間の相互依存性の尺度 [ISO/IEC TR 19759:2016 ソフトウェア エンジニアリング — ソフトウェア エンジニアリング知識体系ガイド (SWEBOK) 2.1.4、
"in software design, a measure of the strength of association of the elements within a module [ISO/IEC TR 19759:2016, Software Engineering — Guide to the Software Engineering Body of Knowledge (SWEBOK)], 2.1.4",ソフトウェア設計における、モジュール内の要素の関連の強さの尺度 [ISO/IEC TR 19759:2016、ソフトウェア エンジニアリング — ソフトウェア エンジニアリング知識体系ガイド (SWEBOK)]、2.1.4
"in software design, a situation in which a module must deal with two or more data sets that have incompatible data structures",ソフトウェア設計において、モジュールが互換性のないデータ構造を持つ 2 つ以上のデータセットを処理しなければならない状況
"in software design, a software component that can operate in parallel with other software components",ソフトウェア設計において、他のソフトウェア コンポーネントと並行して動作できるソフトウェア コンポーネント
"in software design, a type of structure clash in which a program must deal with two or more data sets that have been sorted in different orders",ソフトウェア設計において、プログラムが異なる順序でソートされた 2 つ以上のデータ セットを処理する必要がある構造衝突の一種。
"in software design, the process of combining related software modules, usually to optimize system performance",ソフトウェア設計において、通常はシステムパフォーマンスを最適化するために、関連するソフトウェアモジュールを組み合わせるプロセス
"in software development, a visual representation of work for developers who pull tasks from the task backlog; used for on-demand or resource-bound scheduling [Software Extension to the PMBOK® Guide Fifth Editio",ソフトウェア開発において、タスク バックログからタスクを取得する開発者向けの作業を視覚的に表現したもの。オンデマンドまたはリソース限定のスケジューリングに使用される [PMBOK® ガイド第 5 版のソフトウェア拡張機能]
"in software development, the assignment of modules to segments to be handled as distinct physical units for execution by a computer",ソフトウェア開発において、コンピュータによる実行のための別個の物理単位として扱われるセグメントへのモジュールの割り当て。
"in software engineering, a data element, control element, signal, event, or change of state that causes, triggers, or initiates an action or sequence of actions",ソフトウェア工学において、アクションまたは一連のアクションを引き起こす、トリガーする、または開始するデータ要素、制御要素、信号、イベント、または状態の変化。
"in software engineering, a predefined sequence of computer instructions that is inserted into a program, usually during assembly or compilation, at each place that its corresponding macroinstruction appears in the program",ソフトウェア工学において、通常はアセンブリまたはコンパイル中に、対応するマクロ命令がプログラム内に出現する各場所で、プログラムに挿入される事前定義されたコンピュータ命令のシーケンス。
"in software engineering, a sequence of instructions that are performed in the execution of a computer program",ソフトウェア工学において、コンピューター プログラムの実行時に実行される一連の命令
"in software engineering, a single, usually continuous, execution of a computer program2. to execute a computer program",ソフトウェア工学において、コンピュータ プログラムの単一の、通常は継続的な実行。2コンピュータプログラムを実行する
"in software engineering, computer instructions and data definitions expressed in a programming language or in a form output by an assembler, compiler, or other translator",ソフトウェアエンジニアリングにおいて、プログラミング言語、またはアセンブラ、コンパイラ、その他のトランスレータによって出力される形式で表現されたコンピュータ命令およびデータ定義
"in software engineering, the process of copying software to disks, chips, or other devices for distribution to customers or users",ソフトウェア エンジニアリングにおいて、顧客またはユーザーに配布するためにソフトウェアをディスク、チップ、またはその他のデバイスにコピーするプロセス
"in software engineering, the process of expressing a computer program in a programming language",ソフトウェア工学において、コンピュータープログラムをプログラミング言語で表現するプロセス
"in software evaluation, a model used to estimate or predict the number of remaining faults, required test time, and similar characteristics of a system",ソフトウェア評価において、システムの残りの障害の数、必要なテスト時間、および同様の特性を推定または予測するために使用されるモデル
"In software, this means processing source files to derive target files. In hardware, this means assembling a physical object. The build needs to compile and link the various versions in the correct order. The build tools can be integrated into a configuration management tool.",ソフトウェアでは、これはソース ファイルを処理してターゲット ファイルを派生することを意味します。ハードウェアでは、これは物理的なオブジェクトを組み立てることを意味します。ビルドでは、さまざまなバージョンを正しい順序でコンパイルし、リンクする必要があります。ビルド ツールは構成管理ツールに統合できます。
"In some development environments, commit windows for a maintenance branch might only open for short periods a few times a year.",一部の開発環境では、メンテナンス ブランチのコミット ウィンドウが年に数回の短期間しか開かれない場合があります。
"In some organizations, a sprint is known as an iteration.",一部の組織では、スプリントは反復として知られています。
"In some systems, this is the set of physical storage locations that a program can access, disjoint from other programs, together with the set of virtual addresses referring to those storage locations, which are accessible by other programs.",一部のシステムでは、これは、プログラムがアクセスできる、他のプログラムから切り離された物理的な記憶場所のセットと、他のプログラムからアクセスできるそれらの記憶場所を参照する仮想アドレスのセットです。
"In stock control, a file could consist of a set of invoice records.",在庫管理では、ファイルは一連の請求書レコードで構成されます。
"In stock control, the data for each invoice could constitute one record. Audit reports, incident reports, training records or minutes of meetings.",在庫管理では、各請求書のデータが 1 つのレコードを構成することがあります。監査報告書、インシデント報告書、トレーニング記録、または会議の議事録。
"in storage allocation, a self-contained portion of a computer program that can be executed without maintaining the entire program in main storage",ストレージ割り当てにおいて、プログラム全体を主記憶装置に保持せずに実行できる、コンピュータ プログラムの自己完結型の部分
"In the area of safety, the term ""violation"" is used to refer to a deliberate human contravention of a procedure or rule. A rule or policy can provide behavior to occur upon violation of that or some other rule or policy.",安全の分野では、「違反」という用語は、人間が意図的に手順や規則に違反することを指します。ルールまたはポリシーは、そのルールまたはポリシーまたは他のルールまたはポリシーに違反したときに発生する動作を提供できます。
"In the context of ISO/IEC 29155, the object of interest is IT project performance, and the characteristic is a particular aspect of an IT project such as productivity.",ISO/IEC 29155 のコンテキストでは、関心の対象は IT プロジェクトのパフォーマンスであり、その特性は生産性などの IT プロジェクトの特定の側面です。
"In the context of safety, source is a hazard (refer to ISO/IEC Guide 51:2014).",安全性の観点からは、発生源は危険です (ISO/IEC ガイド 51:2014 を参照)。
"In the cost of quality framework, conformance work is done to compensate for imperfections that prevent organizations from completing planned activities correctly as essential first-time work. Conformance work consists of actions that are related to prevention and inspection",品質コストのフレームワークでは、組織が必要な初回作業として計画された活動を正しく完了することを妨げる不完全性を補うために、適合作業が行われます。適合作業は予防と検査に関連する活動で構成されます
"In the cost of quality framework, non-conformance work is done to deal with the consequences of errors and failures in doing activities correctly on the first attempt. In efficient quality management systems, the amount of non-conformance work will approach zero",品質コストのフレームワークでは、最初の試行で活動を正しく実行する際のエラーや失敗の結果に対処するために、不適合作業が行われます。効率的な品質管理システムでは、不適合作業の量はゼロに近づきます。
"in the critical path method, the earliest possible point in time on which the uncompleted portions of a schedule activity can finish, based on the schedule network logic, the data date, and any schedule constraints",クリティカル パス法では、スケジュール ネットワーク ロジック、データ日付、およびスケジュール制約に基づいて、スケジュール アクティビティの未完了部分が終了できる最も早い時点。
"in the critical path method, the earliest possible point in time on which the uncompleted portions of a schedule activity can start, based on the schedule network logic, the data date, and any schedule constraints",クリティカル パス法では、スケジュール ネットワーク ロジック、データ日付、およびスケジュール制約に基づいて、スケジュール アクティビティの未完了部分を開始できる最も早い時点。
"in the Critical Path Method, the latest possible point in time when the uncompleted portions of a schedule activity can finish based on the schedule network logic, the project completion date, and any schedule constraints",クリティカル パス法において、スケジュール ネットワーク ロジック、プロジェクトの完了日、およびスケジュールの制約に基づいて、スケジュール アクティビティの未完了部分が完了できる最も遅い時点。
"in the Critical Path Method, the latest possible point in time when the uncompleted portions of a schedule activity can start based on the schedule network logic, the project completion date, and any schedule constraints",クリティカル パス法において、スケジュール ネットワーク ロジック、プロジェクトの完了日、およびスケジュールの制約に基づいて、スケジュール アクティビティの未完了部分を開始できる最も遅い時点。
"In the expression A = B + 3, B and 3 are the operands.",式 A =​​ B + 3 では、B と 3 がオペランドです。
"In the expression A = B + 3, the process of adding B to 3 to obtain A.",A = B + 3 という式では、B に 3 を加えて A を求める処理です。
"In the most general case, a software-intensive system is comprised of hardware, software, people, and manual procedures.",最も一般的なケースでは、ソフトウェア集約型システムは、ハードウェア、ソフトウェア、人材、および手動手順で構成されます。
"in the operation of a computer system, a state in which programs other than the supervisory program can execute",コンピュータシステムの動作において、監視プログラム以外のプログラムが実行できる状態。
"in the operation of a computer system, a state in which the supervisory program is executing",コンピュータシステムの動作において、監視プログラムが実行されている状態
"in the paging method of storage allocation, the first page in a series of pages",ストレージ割り当てのページング方式で、一連のページの最初のページ
"in the paging method of storage allocation, the set of pages that are most likely to be resident in main storage at any given point of a program's execution",ストレージ割り当てのページング方式において、プログラム実行の任意の時点で主ストレージに存在する可能性が最も高いページのセット
"In this manner, the system elements that perform all or part of specific requirements are identified.",このようにして、特定の要件のすべてまたは一部を実行するシステム要素が識別されます。
"in UML, a complete task of a system that provides a measurable result of value for an actor",UML では、アクターに価値のある測定可能な結果を​​提供するシステムの完全なタスク
"in UML, a relationship between an actor and a use case that indicates that the actor interacts with the system by means of the use case2. relationship (binding) between protocol objects (or between a protocol object and an interceptor) that is established independently of the protocol exchanges that support a particular computational interaction",UML において、アクターとユース ケースの間の関係。アクターがユース ケースによってシステムと対話することを示します2。特定の計算相互作用をサポートするプロトコル交換とは独立して確立される、プロトコル オブジェクト間 (またはプロトコル オブジェクトとインターセプタ間) の関係 (バインディング)
"in UML, a relationship from a base use case to an included use case specifying how the behavior defined for the included use case can be inserted into the behavior defined for the base use case",UML において、基本ユース ケースから含まれるユース ケースへの関係。含まれるユース ケースに対して定義された動作を、基本ユース ケースに対して定義された動作にどのように挿入できるかを指定します。
"in UML, a relationship from an extending use case to a base use case, specifying how the behavior defined for the extending use case can be optionally inserted into the behavior defined for the base use case",UML において、拡張ユース ケースから基本ユース ケースへの関係。拡張ユース ケースに対して定義された動作を、基本ユース ケースに対して定義された動作にオプションで挿入する方法を指定します。
"in UML, someone or something outside the system that interacts with the system",UML では、システムと対話するシステム外部の誰かまたは何か
in-application programming,アプリケーション内プログラミング
in-circuit emulato,インサーキットエミュレート
in-system programming,インシステムプログラミング
"include both executable and non-executable software, such as fonts, graphics, audio and video recordings, templates, dictionaries, documents, and information structures such as database records",フォント、グラフィックス、オーディオおよびビデオ記録、テンプレート、辞書、ドキュメント、データベース レコードなどの情報構造など、実行可能ソフトウェアと非実行可能ソフトウェアの両方が含まれます。
"includes both the demand for and the supply of IT services by internal groups, specialist IT units, or external suppliers and utility services (such as those providing software as services)",これには、内部グループ、専門 IT 部門、または外部サプライヤーおよびユーティリティ サービス (サービスとしてのソフトウェアを提供するサービスなど) による IT サービスの需要と供給の両方が含まれます。
includes business cases,ビジネスケースも含まれる
includes Communication Technology (CT) and the composite term Information and Communication Technology (ICT),通信技術 (CT) と情報通信技術 (ICT) の複合用語が含まれます。
includes developing options and fallback positions to permit alternative solutions to reduce the impact if a risk factor becomes a problem.,これには、リスク要因が問題になった場合に影響を軽減するための代替ソリューションを可能にするオプションと代替ポジションの開発が含まれます。
includes executing contingency plans when a risk metric crosses a predetermined threshold (when a risk becomes an issue or results in a problem),リスク指標が所定のしきい値を超えたとき（リスクが問題になったとき、または問題が生じたとき）、緊急時対応計画の実行が含まれます。
"includes in-class instruction, informal mentoring, Web-based tutorials, guided self-study, and formalized on job exercises. The learning options selected for each situation are based on an assessment of the performance gap to be addressed and resources.",これには、クラス内での指導、非公式の指導、Web ベースのチュートリアル、ガイド付きの自習、および正式な職務演習が含まれます。それぞれの状況に対して選択される学習オプションは、対処すべきパフォーマンスのギャップとリソースの評価に基づいています。
"includes risk acceptance, risk avoidance, risk transfer, and risk mitigation.",これには、リスクの受け入れ、リスクの回避、リスクの移転、およびリスクの軽減が含まれます。
"includes the product description (including cover information, data sheet, and website information; the user documentation necessary to install and use the software, including any configuration of the operating system or target computer required to operate the product; the software contained on a computer sensible media (e.g., disk or CD-ROM) or internet downloadable. Includes software produced and supported without typical commercial fees and licensing considerations.",これには、製品の説明 (カバー情報、データ シート、Web サイト情報を含む)、ソフトウェアのインストールと使用に必要なユーザー マニュアル (製品の動作に必要なオペレーティング システムまたはターゲット コンピュータの構成を含む)、コンピュータ可読メディア (ディスクや CD-ROM など) に含まれるソフトウェア、またはインターネットでダウンロード可能なソフトウェアが含まれます。通常の商用料金やライセンスに関する考慮事項なしで作成およびサポートされるソフトウェアが含まれます。
"includes the purchase price, delivery, installation, and any other costs to put the asset into service",購入価格、配送、設置、および資産を稼働させるためのその他の費用が含まれます
"including Test Result, Static Code Analysis Report, Test Incident Report, and Metrics.",これには、テスト結果、静的コード分析レポート、テスト インシデント レポート、およびメトリクスが含まれます。
incomplete mapping,不完全なマッピング
"incorrect step, process, or data definition in a computer program",コンピューター プログラム内の間違ったステップ、プロセス、またはデータ定義
independent accreditation body's certification that an IT system meets a predetermined security standard.,IT システムが所定のセキュリティ基準を満たしていることを示す独立認定機関の認証。
"independent assessment of products and processes, conducted by an authorized person to assess compliance with requirements",要件への準拠を評価するために権限を与えられた担当者によって実施される、製品とプロセスの独立した評価
"independent examination of a software product, software process, or set of software processes to assess compliance with specifications, standards, contractual agreements, or other criteria",仕様、標準、契約合意、またはその他の基準への準拠を評価するための、ソフトウェア製品、ソフトウェア プロセス、またはソフトウェア プロセスのセットの独立した検査
"independent examination of a work product or set of work products to assess compliance with specifications, standards, contractual agreements, or other criteria",仕様、標準、契約合意、またはその他の基準への準拠を評価するための、作業成果物または作業成果物のセットの独立した検査
independent person or organization responsible for certifying compliance with the integrity level requirements,完全性レベルの要件への準拠を証明する責任を負う独立した個人または組織
independent person or organization responsible for certifying compliance with the integrity-level requirement,完全性レベルの要件への準拠を証明する責任を負う独立した個人または組織
independent variable,独立変数
independent verification and validation,独立した検証と検証
indication of the relevance of a condition to a particular rule,条件と特定のルールとの関連性を示す
indication of the relevance of an action to a particular rule,特定のルールに対するアクションの関連性を示すもの
"indication of whether or not a specific test case has passed or failed, i.e. if the actual result observed as test item output corresponds to the expected result or if deviations were observed",特定のテスト ケースが成功したか失敗したか、つまり、テスト項目の出力として観察された実際の結果が期待された結果と一致しているか、または逸脱が観察されたかどうかを示します。
"indication of whether the user's preparation time begins immediately with the task submission of the preceding task (value = 0, i.e., ""NO WAIT"") or begins when the preceding task has been completed (task completion) (value = 1, i.e., ""WAIT"")",ユーザーの準備時間が、前のタスクのタスク送信直後に始まるか (値 = 0、つまり「待機なし」)、前のタスクが完了したとき (タスク完了) に始まるか (値 = 1、つまり「待機」) を示します。
indication that an operation request was not performed successfully,操作リクエストが正常に実行されなかったことを示します
"indicator following a heading or subheading in an index or table of contents, showing to which part of the document the heading or subheading refers",索引または目次の見出しまたは小見出しに続くインジケーターで、見出しまたは小見出しが文書のどの部分を参照しているかを示します。
"indirect address that specifies the first of a chain of n storage locations, the first n-1 of which contains the address of the next location in the chain and the last of which contains the desired operand",n 個の記憶場所のチェーンの最初の場所を指定する間接アドレス。最初の n-1 にはチェーン内の次の場所のアドレスが含まれ、最後の場所には目的のオペランドが含まれます。
indirect address that specifies the storage location containing the address of the desired operand,目的のオペランドのアドレスを含む格納場所を指定する間接アドレス
indirect measure of a product derived from measures of the behavior of the system of which it is a part,製品がその一部であるシステムの動作の測定値から導出される、製品の間接的な測定値
individual at a level of the organization below that of the SAM owner who is identified as being responsible for SAM for a defined part of the organization,SAM 所有者よりも組織のレベルが低く、組織の定義された部分の SAM の責任者として識別される個人
individual at a senior organization-wide level who is identified as being responsible for SAM,SAM の責任者として特定された、組織全体の上級レベルの個人
"individual expected to perform duties on behalf of the organization, including officers, employees, and contractors",役員、従業員、請負業者を含む、組織を代表して職務を遂行することが期待される個人
individual involved in the practice or role of managing software assets,ソフトウェア資産の管理の実践または役割に関与する個人
"individual item to be controlled that is a constituent (part) of a larger configuration item, such as a reference model, hardware prototype or software build",参照モデル、ハードウェア プロトタイプ、ソフトウェア ビルドなど、より大きな構成アイテムの構成要素 (一部) である、制御対象の個々のアイテム
individual occurrence of a type,タイプの個々の出現
"individual or an organization that contributes to the functionality of a system and draws on knowledge, skills, and procedures to contribute the function",システムの機能に貢献し、その機能に貢献するために知識、スキル、手順を活用する個人または組織
"individual or entity, internal or external to the organizational unit being assessed, who requires the assessment to be performed, and provides financial or other resources to carry it out",評価の実行を要求し、評価を実行するための財政的またはその他のリソースを提供する、評価対象の組織単位の内部または外部の個人または団体。
individual or group that benefits from a ready to use software product during its utilization,すぐに使用できるソフトウェア製品の使用中に恩恵を受ける個人またはグループ
individual or group that benefits from a system during its utilization,システムの利用中にシステムの恩恵を受ける個人またはグループ
individual or group that interacts with a system or benefits from a system during its utilization,システムと対話する、またはシステムの使用中にシステムから恩恵を受ける個人またはグループ
"individual or organization having a right, share, claim, or interest in a system or in its possession of characteristics that meet their needs and expectations",ニーズや期待を満たすシステムまたはその特性の所有に関して、権利、共有、主張、または利益を有する個人または組織
individual or organization responsible for the measurement process,測定プロセスを担当する個人または組織
"individual or organization that acquires or procures a system, software product or software service from a supplier",サプライヤーからシステム、ソフトウェア製品、またはソフトウェア サービスを取得または調達する個人または組織
individual or organization that authorizes and supports the establishment of the measurement process,測定プロセスの確立を認可し支援する個人または組織
"individual or organization that enters into a contract with the acquirer for the supply of a system, software product or software service under the terms of the contract",契約条件に基づいてシステム、ソフトウェア製品、またはソフトウェア サービスの供給について取得者と契約を結ぶ個人または組織
individual or organization that is a source of data,データのソースである個人または組織
individual or organization that is responsible for managing the measurement data store(s),測定データストアの管理を担当する個人または組織
"individual or organization that is responsible for the planning, performance, evaluation, and improvement of measurement",測定の計画、実行、評価、改善に責任を負う個人または組織
individual or organization that operates the system,システムを運用する個人または組織
individual or organization that performs an evaluation,評価を行う個人または組織
individual or organization that performs an evaluation independently from developers and acquirers,開発者や買収者から独立して評価を行う個人または組織
"individual or organization that performs development activities (including requirements analysis, design, testing through acceptance) during the system or software life-cycle process",システムまたはソフトウェアのライフサイクル プロセス中に開発活動 (要件分析、設計、テストから受け入れまでを含む) を実行する個人または組織
individual or organization that performs maintenance activities,メンテナンス活動を行う個人または組織
individual or organization that performs the operations of a system,システムの運用を実行する個人または組織
individual or organization that uses the information products,情報製品を使用する個人または組織
individual or organization that uses the system or software to perform a specific function,特定の機能を実行するためにシステムまたはソフトウェアを使用する個人または組織
individual person who ultimately benefits from the outcomes of the system or software,システムまたはソフトウェアの成果から最終的に恩恵を受ける個人
individual person who ultimately benefits from the ready to-use software product functionalities,すぐに使えるソフトウェア製品の機能から最終的に恩恵を受ける個人
individual who has responsibilities within the scope of the assessment,評価の範囲内で責任を負う個人
individual who is intimately familiar with the domain and can provide detailed information to the domain engineers,ドメインに精通しており、ドメイン エンジニアに詳細な情報を提供できる個人
individual who participates in the rating of process attributes,プロセス属性の評価に参加する個人
"individual, group or organization that can affect, be affected by, or perceive itself to be affected by, a risk",リスクに影響を与える可能性がある、リスクの影響を受ける、またはリスクの影響を受けていると認識している個人、グループ、または組織
"individual, organization, or group (or classes thereof playing the same role) having an interest in, or design concerns relative to, the design of some software item",何らかのソフトウェア項目の設計に関心がある、または設計に関する懸念を持つ個人、組織、またはグループ (または同じ役割を果たすそのクラス)
industrial computer network protocol used for real-time distributed contro,リアルタイム分散制御に使用される産業用コンピュータネットワークプロトコル
information accessed by the user through the use of software,ソフトウェアの使用を通じてユーザーがアクセスする情報
information and communication technology,情報通信技術
information associated with an object of a net graph or with the net graph itself that is specific to a particular tool and is not meant to be used by other tools,ネット グラフのオブジェクトまたはネット グラフ自体に関連付けられた、特定のツールに固有であり、他のツールで使用されることを意図していない情報
information associated with the net graph or one of its objects,ネットグラフまたはそのオブジェクトの 1 つに関連付けられた情報
"information capturing the reasoning of the designer that led to the system as designed, including design options, trade-offs considered, decisions made, and the justifications of those decisions",設計オプション、考慮されたトレードオフ、下された決定、およびそれらの決定の正当性を含む、設計通りのシステムに至った設計者の推論を捕捉する情報
"Information creation, manipulation, and dissemination are the most important activities within information based domains. Typical information-based domains are software and systems engineering, business process reengineering, and knowledge management",情報の作成、操作、配布は、情報ベースの領域内で最も重要な活動です。典型的な情報ベースのドメインは、ソフトウェアおよびシステム エンジニアリング、ビジネス プロセス リエンジニアリング、ナレッジ マネジメントです。
"information defining the graphical appearance of objects and labels of a net graph, which can be the position, size, line color, fill color, font, or line width",ネット グラフのオブジェクトとラベルのグラフィックの外観を定義する情報。位置、サイズ、線の色、塗りつぶしの色、フォント、または線の幅などです。
"information describing an interface, how to bind to it, and the service that can be invoked using it",インターフェイス、インターフェイスへのバインド方法、およびインターフェイスを使用して呼び出すことができるサービスについて説明する情報
"information describing the safe use of the software, the security of the information created with the software, or the protection of the sensitive personal information created by or stored with the software",ソフトウェアの安全な使用、ソフトウェアで作成された情報のセキュリティ、またはソフトウェアによって作成またはソフトウェアとともに保存された機密の個人情報の保護について説明する情報
"information embedded within a computer program, job control statements, or a set of data that provides clarification to human readers but does not affect machine interpretation",コンピュータプログラム、ジョブ制御ステートメント、または人間の読者に説明を提供するが機械の解釈には影響を与えない一連のデータに埋め込まれた情報
information hiding,情報隠蔽
"information included in an information item, associated with a system, product or service, to satisfy a requirement or need",要件またはニーズを満たすために、システム、製品、またはサービスに関連付けられた情報アイテムに含まれる情報
"information item that describes the results of activities such as investigations, observations, assessments, or tests",調査、観察、評価、テストなどの活動の結果を説明する情報項目
"information item that identifies, in a complete, precise, and verifiable manner, the requirements, design, behavior, or other expected characteristics of a system, service, or process",システム、サービス、またはプロセスの要件、設計、動作、またはその他の期待される特性を完全、正確、検証可能な方法で特定する情報項目
information item that initiates a defined course of action or change to fulfill a need,ニーズを満たすために定義された一連の行動または変更を開始する情報項目
"information item that presents a systematic course of action for achieving a declared purpose, including when, how, and by whom specific activities are to be performed",特定の活動をいつ、どのように、誰が実行するかなど、宣言された目的を達成するための体系的な行動方針を示す情報項目
"information item that presents an ordered series of steps to perform a process, activity, or task",プロセス、アクティビティ、またはタスクを実行するための順序付けられた一連のステップを示す情報項目
"information item that represents a planned or actual concept, function, design, or object",計画されたまたは実際のコンセプト、機能、デザイン、またはオブジェクトを表す情報アイテム
"Information items and artefacts produced by the process instance must meet the success criteria. Success criteria are established based on the outcomes of the corresponding life cycle process, requirements of the system element to which the process instance contributes, and requirements and constraints arising from decisions in other process instances.",プロセス インスタンスによって生成される情報アイテムと成果物は、成功基準を満たしている必要があります。成功基準は、対応するライフサイクル プロセスの結果、プロセス インスタンスが関与するシステム要素の要件、および他のプロセス インスタンスでの決定から生じる要件と制約に基づいて確立されます。
Information of different types can be indicated by symbols or graphics of different types.,異なる種類の情報は、異なる種類の記号またはグラフィックによって示すことができます。
information presented on a screen or in a window of a screen,画面または画面のウィンドウに表示される情報
"information processing in which discrete components can be located in different places, and where communication between components can suffer delay or fail",個別のコンポーネントが異なる場所に配置され、コンポーネント間の通信が遅延または失敗する可能性がある情報処理
"information processing system, together with associated organizational resources such as human, technical, and financial resources, which provides and distributes information",情報を提供および配布する情報処理システムと、人的、技術的、財政的リソースなどの関連組織リソース
"Information produced during asset scoping, together with the information produced by product scoping and domain scoping, can be used to determine whether to introduce a product line into an organization.",資産の範囲設定中に生成される情報は、製品の範囲設定およびドメインの範囲設定によって生成される情報とともに、製品ラインを組織に導入するかどうかを決定するために使用できます。
information required before a process assessment can commence,プロセス評価を開始する前に必要な情報
information returned to the client,クライアントに返される情報
"information store that contains the evaluation of the information products and the benchmarking activity, as well as any lessons learned during benchmarking and analysis",情報製品とベンチマーク活動の評価、およびベンチマークと分析中に得られた教訓を含む情報ストア
information structure containing a digital encapsulation of a licensing transaction and its associated entitlement information,ライセンストランザクションとそれに関連する資格情報のデジタルカプセル化を含む情報構造
"information structure containing identification information about a software configuration item, which can be authoritative if provided by a software creator",ソフトウェア構成アイテムに関する識別情報を含む情報構造。ソフトウェア作成者によって提供された場合に信頼できる情報構造。
information structure that provides authoritative information about a software asset in order to facilitate its management,ソフトウェア資産の管理を容易にするために、ソフトウェア資産に関する信頼できる情報を提供する情報構造
information supplied with every product to which it is relevant,関連するすべての製品に提供される情報
Information Technology,情報技術
information that enters or exits the application and that satisfies the user's information need,アプリケーションに出入りする情報、およびユーザーの情報ニーズを満たす情報
information that explains how to use a software product,ソフトウェア製品の使用方法を説明する情報
information that is delivered as an integral part of a piece of software,ソフトウェアの不可欠な部分として提供される情報
information that is supplied with the software to help the users in their use of that software,ユーザーがそのソフトウェアを使用する際に役立つ、ソフトウェアとともに提供される情報
"information to describe, explain, or instruct how to use software",ソフトウェアの使用方法を説明、説明、または指示するための情報
information-based domain,情報基盤領域
"infrastructure and processes necessary for the effective management, control and protection of the software assets within an organization, throughout all stages of their lifecycle",ライフサイクルのすべての段階を通じて、組織内のソフトウェア資産を効果的に管理、制御、保護するために必要なインフラストラクチャとプロセス
ingrained way of doing business that an organization follows routinely as part of its corporate culture,組織が企業文化の一部として日常的に従う、根付いたビジネスのやり方
inherent ability of an organization to support continual process improvement,継続的なプロセス改善をサポートする組織の固有の能力
"inherent characteristic of a product, process, or system related to a requirement",要件に関連する製品、プロセス、またはシステムの固有の特性
inherent property of an instance that distinguishes it from all other instances,他のすべてのインスタンスと区別する、インスタンスの固有のプロパティ
inherent property or characteristic of an entity that can be distinguished quantitatively or qualitatively by human or automated means,人間または自動化された手段によって定量的または定性的に区別できる、エンティティの固有の特性または特性
"inherent, possibly accidental, trait, quality, or property of data.",データの固有の、おそらく偶然の、特性、品質、または特性。
"inherent, possibly accidental, trait, quality, or property of software.",ソフトウェアの固有の、おそらく偶然の、特性、品質、または特性。
initial capabilities document,初期機能ドキュメント
initial operational capability,初期運用能力
initial operational test and evaluation,初期動作テストと評価
"initial release or complete re-release of a document, as opposed to a revision resulting from issuing change pages to a previous release",以前のリリースに変更ページを発行した結果として生じる改訂とは対照的に、ドキュメントの初期リリースまたは完全な再リリース
"initial release or re-release of a computer software configuration item, associated with a complete compilation or recompilation of the computer software configuration item",コンピュータ ソフトウェア構成アイテムの完全なコンパイルまたは再コンパイルに関連付けられた、コンピュータ ソフトウェア構成アイテムの初期リリースまたは再リリース
initialized mode of program operations when a computer is turned on,コンピュータの電源を入れたときのプログラム動作の初期化モード
"initializing storage areas, clearing flags, rewinding tapes, opening and closing files",ストレージ領域の初期化、フラグのクリア、テープの巻き戻し、ファイルの開閉
input information source or output information destination that is outside the scope of the project life cycle.,プロジェクトのライフサイクルの範囲外にある入力情報のソースまたは出力情報の宛先。
"input or output, events signaled (input or output), external inputs or outputs, or access to passive objects",入力または出力、シグナル通知されたイベント (入力または出力)、外部入力または出力、またはパッシブ オブジェクトへのアクセス
input parameter value used in base choice testing that is normally selected based on being a representative or typical value for the parameter,基本選択テストで使用される入力パラメータ値。通常、パラメータの代表値または典型的な値に基づいて選択されます。
input sorts and output sort for an operator,演算子の入力ソートと出力ソート
input-process-output chart,インプットプロセスアウトプットチャート
"input, control, output, and mechanism",入力、制御、出力、機構
input/output,入出力
"insight necessary to manage objectives, goals, risks, and problems",目的、目標、リスク、問題を管理するために必要な洞察
"inspection checklists, metrics, problem reports",検査チェックリスト、測定基準、問題レポート
"Inspections are peer examinations led by impartial facilitators who are trained in inspection techniques. Determination of remedial or investigative action for an anomaly is a mandatory element of a software inspection, although the solution could be determined outside the inspection meeting. Types include code inspection and design inspection.",検査は、検査技術の訓練を受けた公平な進行役が主導するピア試験です。異常に対する是正措置または調査措置の決定はソフトウェア検査の必須の要素ですが、解決策は検査会議の外で決定される可能性があります。種類には、コード検査と設計検査があります。
"Install can apply to executable or non-executable software, or related assets such as fonts. It can apply to installs on clients/local devices and/or server-side installs, for example as part of a service type software asset provision",インストールは、実行可能または非実行可能ソフトウェア、またはフォントなどの関連資産に適用できます。たとえば、サービス タイプのソフトウェア資産プロビジョニングの一部として、クライアント/ローカル デバイスへのインストールやサーバー側のインストールに適用できます。
installation and customization of packaged software,パッケージソフトのインストールとカスタマイズ
instance of a meta-model element,メタモデル要素のインスタンス
instance of applying a measurement procedure to produce a value for a base measure.,測定手順を適用して基本メジャーの値を生成するインスタンス。
instance whose identity is known at the time of writing,執筆時点で身元がわかっているインスタンス
instance whose identity is unknown at the time of writing,執筆時点では身元が不明なインスタンス
Instances of a meta-attribute occur in a model as data values,メタ属性のインスタンスはデータ値としてモデル内に発生します。
Instances of a meta-meta-attribute occur in a metamodel as meta-data valu,メタメタ属性のインスタンスは、メタデータ値としてメタモデル内に発生します。
instant at which a computer program begins to execute,コンピュータプログラムが実行を開始する瞬間
instantiating a cluster from a cluster checkpoint,クラスターチェックポイントからクラスターをインスタンス化する
instantiation of the formal diagram structure that consists only of semantically and syntactically valid IDEF0 graphical statements,意味的および構文的に有効な IDEF0 グラフィカル ステートメントのみで構成される正式なダイアグラム構造のインスタンス化
Institute of Electrical and Electronics Engineers,電気電子学会
instructional procedure in which the user exercises software functions using sample data that is supplied with the software or documentation,ソフトウェアまたはドキュメントに付属のサンプル データを使用して、ユーザーがソフトウェア機能を実行する指示手順
instructions on how to print the current document,現在のドキュメントを印刷する方法の説明
instructions that enable an organization to adapt standard processes appropriately to meet specific needs,組織が特定のニーズに合わせて標準プロセスを適切に適応できるようにするための指示
"instrument that can be used during evaluation to collect data, to perform interpretation of data or to automate part of the evaluation",評価中にデータの収集、データの解釈の実行、または評価の一部の自動化に使用できる機器
Insure is used only for insurance matters.,Insure は保険に関する場合にのみ使用されます。
"integer number, placed inside a small square, that unambiguously identifies a model note in a specific diagram",特定のダイアグラム内のモデル注記を明確に識別する、小さな正方形の中に配置される整数
"integers, real numbers, and character strings",整数、実数、文字列
integrated circuit customized for a particular use,特定の用途に合わせてカスタマイズされた集積回路
integrated circuit that tracks the current time in human units,人間単位で現在時刻を追跡する集積回路
integrated collection of software tools accessed via a single command language to provide programming support capabilities throughout the software life cycle,単一のコマンド言語を介してアクセスできるソフトウェア ツールの統合コレクションで、ソフトウェア ライフ サイクル全体にわたってプログラミング サポート機能を提供します。
integrated development environment,統合開発環境
integrated master plan,統合マスタープラン
integrated master schedule,統合されたマスタースケジュール
integrated product team,統合製品チーム
integrated programming support environment,統合プログラミング支援環境
"Integrated team members provide skills and advocacy appropriate to all phases of the work products' life and are collectively responsible for delivering work products as specified. An integrated team includes empowered representatives from organizations, disciplines, and functions that have a stake in the success of the work products.",統合されたチームメンバーは、作業成果物のライフサイクルのすべての段階に適切なスキルと権利擁護を提供し、指定されたとおりに作業成果物を提供することに集団的に責任を負います。統合されたチームには、成果物の成功に関与する組織、分野、部門からの権限を与えられた代表者が含まれます。
integration of office activities by means of an information processing system,情報処理システムによる事務活動の統合
integration readiness review,統合準備状況レビュー
"integration, verification, validation",統合、検証、検証
"Intellectual property can be protected by patents, copyrights, trademarks, or trade secrets.",知的財産は、特許、著作権、商標、または企業秘密によって保護されます。
intellectual property rights,知的財産権
intended outcome,意図された結果
"intended outcome of user interaction with a product [ISO/IEC 25062:2006 Software engineering — Software product Quality Requirements and Evaluation (SQuaRE) — Common Industry Format (CIF) for usability test reports, 4.8] [SOURCE: ISO 9241-11",ユーザーと製品の対話によって意図された結果 [ISO/IEC 25062:2006 ソフトウェア エンジニアリング — ソフトウェア製品の品質要件および評価 (SQuaRE) — ユーザビリティ テスト レポート用の業界共通フォーマット (CIF)、4.8] [出典: ISO 9241-11
intent that is first in importance,まず重要な意図
inter-integrated circuit bu,集積回路間ユニット
interacting combination of elements to accomplish a defined objective,定義された目的を達成するための要素の相互作用の組み合わせ
"interaction (invocation) initiated by a client object, resulting in the conveyance of information from that client object to a server object, requesting a function to be performed by that server object",クライアント オブジェクトによって開始される対話 (呼び出し)。その結果、そのクライアント オブジェクトからサーバー オブジェクトに情報が伝達され、そのサーバー オブジェクトによって実行される機能が要求されます。
interaction between a client object and a server object which is either an interrogation or an announcement,クライアント オブジェクトとサーバー オブジェクト間の対話 (問い合わせまたはアナウンス)
interaction between a user and an interactive system as a sequence of user actions (inputs) and system responses (outputs) in order to achieve a goal,目標を達成するための、ユーザーのアクション (入力) とシステムの応答 (出力) のシーケンスとしてのユーザーと対話型システムの間の対話。
interaction between objects in which information about new or potential contracts is exchanged via a third -party object,新規または潜在的な契約に関する情報がサードパーティのオブジェクトを介して交換されるオブジェクト間の対話
"interaction consisting of one interaction, the invocation, initiated by a client object, resulting in the conveyance of information from that client object to a server object, and requesting a function to be performed by the server object, followed by a second interaction, the termination, initiated by the server object, resulting in the conveyance of information from the server object to the client object in response to the invocation",クライアント オブジェクトによって開始され、そのクライアント オブジェクトからサーバー オブジェクトに情報が伝達され、サーバー オブジェクトによって実行される機能が要求される 1 つの対話 (呼び出し) と、その後に続く 2 番目の対話 (終了) で構成される対話。サーバー オブジェクトによって開始され、呼び出しに応答してサーバー オブジェクトからクライアント オブジェクトに情報が伝達されます。
interaction point defined in an architecture for selection as a conformance point in a specification which is compliant with that architecture,アーキテクチャに準拠する仕様の適合ポイントとして選択するためにアーキテクチャで定義された対話ポイント
interaction that is allowed by one unit and controlled by another unit,あるユニットによって許可され、別のユニットによって制御される相互作用
"interaction with the trading function in which a service offer is advertised, by adding the service offer to an identified set of service offers",識別されたサービス オファーのセットにサービス オファーを追加することにより、サービス オファーが宣伝される取引機能との対話
interaction with the trading function which searches an identified set of service offers to discover interfaces at which a service satisfying a specified type is available,特定のサービスオファーのセットを検索して、指定されたタイプを満たすサービスが利用可能なインターフェイスを発見する取引機能との対話
"interactive or non-interactive object containing information represented by text, image, video, sound, or other media",テキスト、画像、ビデオ、サウンド、またはその他のメディアで表される情報を含むインタラクティブまたは非インタラクティブなオブジェクト
"interconnection relationship in a build specification that identifies a port of one unit with a port of another (structural peer) unit and indicates that interactions output from one are input to the other, and vice versa",ビルド仕様における相互接続関係。あるユニットのポートを別の (構造的ピア) ユニットのポートと識別し、一方からの相互作用出力が他方への入力、またはその逆であることを示します。
"interdisciplinary approach governing the total technical and managerial effort required to transform a set of stakeholder needs, expectations, and constraints into a solution, and to support that solution throughout its life",利害関係者の一連のニーズ、期待、制約をソリューションに変換し、そのソリューションをその存続期間全体にわたってサポートするために必要な技術的および管理的労力全体を管理する学際的なアプローチ。
"interdisciplinary function that mediates between the domains of the acquirer and supplier to establish and maintain the requirements to be met by the system, software or service of interest",対象となるシステム、ソフトウェア、またはサービスが満たすべき要件を確立および維持するために、取得者と供給者のドメイン間を仲介する学際的な機能
"interdisciplinary technical and management process for integrating human considerations with and across all system elements, an essential enabler to systems engineering practice",人間の考慮事項をすべてのシステム要素に統合するための学際的な技術および管理プロセスであり、システム エンジニアリングの実践を可能にする重要な要素です。
interest in something relevant to one or more of its stakeholders,1 人以上の利害関係者に関連するものへの関心
interest rate that has been adjusted for more or less frequent compounding,多かれ少なかれ複利計算が行われるように調整された金利
Interface Control Working Group,インターフェース制御ワーキンググループ
Interface Definition Language,インターフェース定義言語
interface design document,インターフェース設計書
interface in which all the interactions are flows,すべてのインタラクションがフローとなるインターフェース
interface in which all the interactions are operations,すべてのインタラクションが操作であるインターフェイス
interface in which all the interactions are signals,すべてのインタラクションが信号となるインターフェース
interface of a data repository allowing access to data,データへのアクセスを可能にするデータ リポジトリのインターフェイス
interface of a protocol object that can be bound to an interface of either an interceptor object or another protocol object at an interworking reference point,インターワーキング参照点でインターセプタ オブジェクトまたは別のプロトコル オブジェクトのいずれかのインターフェイスにバインドできるプロトコル オブジェクトのインターフェイス
interface on a unit's boundary that allows a subset of the interactions that can be exchanged with another unit,別のユニットと交換できる対話のサブセットを可能にするユニットの境界上のインターフェース
interface requirements specification.,インターフェース要件仕様。
interface signature for a signal interface,信号インターフェイスのインターフェイス署名
interface signature for a stream interface,ストリームインターフェースのインターフェース署名
interface signature for an operation interface,操作インターフェースのインターフェース署名
"interface template for either a signal interface, a stream interface, or an operation interface",信号インターフェイス、ストリーム インターフェイス、または操作インターフェイスのインターフェイス テンプレート
interface that enables information to be passed between a human user and hardware or software components of a computer system,人間のユーザーとコンピュータ システムのハードウェアまたはソフトウェア コンポーネントの間で情報の受け渡しを可能にするインターフェース
"interface that manifests the component's or home's surface features to clients, allowing clients to navigate among the component's facets, and to connect to the component's ports, as defined by the component's or home's equivalent interface definition language",コンポーネントまたはホームの表面機能をクライアントに明示し、クライアントがコンポーネントのファセット間を移動し、コンポーネントまたはホームの同等のインターフェース定義言語で定義されているコンポーネントのポートに接続できるようにするインターフェース。
"interface-independent kind of skeleton, used by servers to handle requests whose signatures are possibly not known until run-time",インターフェースに依存しない種類のスケルトン。実行時まで署名が不明である可能性があるリクエストを処理するためにサーバーによって使用されます。
Internal attributes are those that relate to the internal organization of the software and its development.,内部属性は、ソフトウェアの内部組織とその開発に関連する属性です。
internal logical file,内部論理ファイル
"internal structure of the software life-cycle process, to include lifecycle phases, documentation, baselines, reviews, and products",ソフトウェア ライフサイクル プロセスの内部構造。ライフサイクル フェーズ、ドキュメント、ベースライン、レビュー、製品が含まれます。
"internal, external or quality in use measures or specific evaluation processes designed for developers, acquirers or independent evaluators",開発者、買収者、または独立した評価者向けに設計された内部、外部、または使用品質の測定または特定の評価プロセス
International Electrotechnical Commission,国際電気標準会議
International Function Point Users Group,国際ファンクションポイント利用者グループ
International Organization for Standardization,国際標準化機構
International Standard,国際規格
international standards organization that owns and maintains CORBA and UML standards,CORBA および UML 標準を所有および維持する国際標準化団体
"internationally agreed-to, harmonized standard which describes one or more profiles",1 つまたは複数のプロファイルを説明する、国際的に合意された調和のとれた標準
Internet Engineering Task Force,インターネットエンジニアリングタスクフォース
Internet Inter-ORB Protocol,インターネット ORB 間プロトコル
Internet Inter-ORB Protocol — Interoperable Object Reference,インターネット ORB 間プロトコル — 相互運用可能なオブジェクト リファレンス
Internet Protocol,インターネットプロトコル
interoperability agreement describing a common interpretation of one or more phenomena shared between two interacting things,2 つの相互作用するものの間で共有される 1 つまたは複数の現象の共通の解釈を記述する相互運用性協定
Interoperability is used in place of compatibility in order to avoid possible ambiguity with replaceability.,互換性の代わりに相互運用性が使用され、置き換え可能性に関する曖昧さの可能性を回避します。
Interoperable Object Reference,相互運用可能なオブジェクトリファレンス
interpretation of a theory for which all the axioms of the theory are true,理論のすべての公理が正しい理論の解釈
interrupt performed to permit execution of a process that has a higher priority than the process currently executing,現在実行中のプロセスよりも高い優先度を持つプロセスの実行を許可するために実行される割り込み
interrupt service routine,割り込みサービスルーチン
interval of arbitrary size in space at which an action can occur,アクションが発生する可能性のある空間内の任意のサイズの間隔
interval of arbitrary size in time at which an action can occur,アクションが発生する可能性のある任意のサイズの時間間隔
intrinsic property or condition that has the potential to cause harm or damage,危害や損害を引き起こす可能性のある固有の特性または状態
Inverse engineering provides a more abstract view of the system with the intent of recapturing design and requirements information.,インバース エンジニアリングは、設計と要件の情報を再取得することを目的として、システムのより抽象的なビューを提供します。
investment required just to start an activity,活動を始めるだけでも投資が必要
invitation for bid,入札の招待状
involves setting objectives and proposing initiatives for action,目標の設定と行動に向けた取り組みの提案が含まれます
ISO 9000-200,ISO9000-200
issue benchmarks activity,ベンチマーク活動を発行する
"It addresses how to determine whether a group of tasks, whose individual CPU utilization is known, will meet their deadlines.",個々の CPU 使用率がわかっているタスクのグループが期限に間に合うかどうかを判断する方法について説明します。
It also provides the basis for cost tracking and control.,また、コストの追跡と管理の基礎も提供します。
"It also supports various associated query, analysis, and report-generation capabilities",また、関連するさまざまなクエリ、分析、レポート生成機能もサポートしています。
"It can be assigned to a defect in the system. On a control chart, it is indicated by points beyond the control limits or non-random patterns within the control limits",システムの欠陥に割り当てられる可能性があります。管理図では、管理限界を超えた点または管理限界内の非ランダムなパターンによって示されます。
"It can be diagrammatic, symbolic, or textual.",それは図式、記号、またはテキストにすることができます。
It can be of interest to specify which actor initiates that action.,どのアクターがそのアクションを開始するかを指定すると興味深い場合があります。
It can be paper-based (paper form) or digital,紙ベース（紙の形式）でもデジタルでも構いません
It can be part or the whole of a single physical record or of a number of records.,単一の物理レコードまたは複数のレコードの一部または全体を指定できます。
"It can be retained for verification or training, and as a record.",検証やトレーニングのために、また記録として保持できます。
It can be written in the row which follows that of the table heading.,表の見出しの次の行に記述できます。
It consists of one or more time classes.,1 つ以上の時間クラスで構成されます。
"It contains a processor, RAM, ROM, clock, register, and I/O control unit.",これには、プロセッサ、RAM、ROM、クロック、レジスタ、および I/O 制御ユニットが含まれます。
It either declares a design idea to be compulsory or to be excluded.,これは、設計アイデアを強制するか除外するかを宣言します。
"It entails the specification, construction, testing, and delivery of a new application. During actualization, this project can be split up into a number of sub-projects. If these are carried out more or less in parallel, each being responsible for effectuating a certain sub-system of the total application, then each sub-project can be considered as an individual developmen project, if the sub-system itself is an application. Re-building an existing application, otherwise known as re-engineering, considered as development.",これには、新しいアプリケーションの仕様、構築、テスト、配信が伴います。実現中に、このプロジェクトはいくつかのサブプロジェクトに分割されることがあります。これらが多かれ少なかれ並行して実行され、それぞれがアプリケーション全体の特定のサブシステムを実行する責任を負っている場合、サブシステム自体がアプリケーションである場合、各サブプロジェクトは個別の開発者プロジェクトと見なすことができます。既存のアプリケーションを再構築することは、リエンジニアリングとも呼ばれ、開発とみなされます。
"It identifies test items, the features to be tested, the testing tasks, who will do each task, and any risks requiring contingency planning. Typical contents identify the items to be tested, tasks to be performed, responsibilities, schedules, and required resources for the testing activity.",テスト項目、テスト対象の機能、テストタスク、各タスクの実行者、緊急時対応計画を必要とするリスクを特定します。一般的な内容では、テスト対象の項目、実行すべきタスク、責任、スケジュール、およびテスト活動に必要なリソースが特定されます。
"It identifies the input, output, control logic, algorithms, and data structure of each individual low-level component of the software product and is the primary product of the detailed design phase.",これは、ソフトウェア製品の個々の低レベル コンポーネントの入力、出力、制御ロジック、アルゴリズム、およびデータ構造を識別し、詳細設計フェーズの主要な製品です。
"It includes or provides reference to a description of release contents, release schedule, release impacts, and release notifications.",これには、リリースの内容、リリース スケジュール、リリースの影響、リリース通知の説明が含まれているか、またはそれらへの参照が含まれています。
"It includes the platform, system software, utilities, and CASE tools installed.",これには、インストールされているプラ​​ットフォーム、システム ソフトウェア、ユーティリティ、CASE ツールが含まれます。
"IT infrastructure management includes all of the tasks, responsibilities and activities that aim for a correct technical operation of the information system, consisting of hardware, (system) software, and data sets. The IT infrastructure management organization is responsible for running the application software in the production environment.",IT インフラストラクチャ管理には、ハードウェア、(システム) ソフトウェア、およびデータ セットで構成される情報システムの正しい技術的運用を目的としたすべてのタスク、責任、および活動が含まれます。 IT インフラストラクチャ管理組織は、運用環境でアプリケーション ソフトウェアを実行する責任を負います。
"It involves transforming system requirements into a description of software requirements, performance parameters, and a software configuration using an iterative process of definition, analysis, trade-off studies, and prototyping",これには、定義、分析、トレードオフ研究、およびプロトタイピングの反復プロセスを使用して、システム要件をソフトウェア要件、パフォーマンス パラメーター、およびソフトウェア構成の記述に変換することが含まれます。
"It is a high-level description of the business informational needs. It is more general than a conceptual model, as it includes a holistic vision of a (system) context of the architecture.",これは、ビジネス情報のニーズを高レベルで説明したものです。これは、アーキテクチャの (システム) コンテキストの全体的なビジョンを含むため、概念モデルよりも一般的です。
"It is also used to describe error conditions, since errors can be considered a kind of alternative.",エラーは一種の代替手段と見なすことができるため、エラー状態を説明するためにも使用されます。
It is an internal logical file or an external interface file.,これは、内部論理ファイルまたは外部インターフェイス ファイルです。
It is made up of a header and a number of components. Components contain either data or data definition data.,これはヘッダーと多数のコンポーネントで構成されます。コンポーネントにはデータまたはデータ定義データが含まれます。
It is not a perpetual license and requires renewal to remain in force.,これは永久ライセンスではなく、有効性を維持するには更新が必要です。
It is possible for an output argument to have no value at the time a request is made.,リクエストが行われた時点では、出力引数に値が存在しない可能性があります。
it is read one time only and its data is consumed.,読み取られるのは 1 回だけであり、そのデータは消費されます。
It is the sequence of activities created by mapping the activities of IEEE Std 1074 onto a selected software project life cycle model (SPLCM).,これは、IEEE Std 1074 のアクティビティを選択したソフトウェア プロジェクト ライフ サイクル モデル (SPLCM) にマッピングすることによって作成された一連のアクティビティです。
"It is triggered by a data movement (an Entry) from a functional user that informs the piece of software that the functional user has identified a triggering event, and is complete when it has executed all that is required to be done in response to the triggering event.",これは、機能ユーザーからのデータ移動 (エントリ) によってトリガーされ、機能ユーザーがトリガー イベントを識別したことをソフトウェアに通知し、トリガー イベントに応じて実行する必要があるすべての処理を実行すると完了します。
It is used for classifying and understanding the body of knowledge.,知識体系を分類して理解するために使用されます。
"It prescribes all necessary functional characteristics, the tests required to demonstrate achievement of specified functional characteristics, the necessary interface characteristics with associated configuration items, the configuration item's key functional characteristics and its key lower-level configuration items, if any, and design constraints",必要なすべての機能特性、指定された機能特性の達成を実証するために必要なテスト、関連する構成アイテムとの必要なインターフェイス特性、構成アイテムの主要な機能特性とその主要な下位レベルの構成アイテム (存在する場合)、および設計制約を規定します。
"It prescribes all necessary physical or form, fit, and function characteristics of a configuration item, the selected functional characteristics designated for production acceptance testing, and the production acceptance tests.",これは、構成品目のすべての必要な物理的または形状、適合性、および機能特性、製造受け入れテスト用に指定された選択された機能特性、および製造受け入れテストを規定します。
"It provides the basis for bounding the operating space, system capabilities, interfaces and operating environment. The concept of operations frequently is embodied in long-range strategic plans and annual operational plans. In the latter case, the concept of operations in the plan covers a series of connected operations to be carried out simultaneously or in succession. The concept is designed to give an overall picture of the organization operations.",これは、動作空間、システム機能、インターフェイス、および動作環境を境界付けるための基礎を提供します。作戦の概念は、長期的な戦略計画や年間作戦計画に具体化されることがよくあります。後者の場合、計画における操作の概念には、同時にまたは連続して実行される一連の接続された操作が含まれます。このコンセプトは、組織運営の全体像を把握できるように設計されています。
It results in a vulnerability assessment.,その結果、脆弱性評価が行われます。
"It would not be appropriate to have a dependent state class instance by itself and unrelated to an instance of another class(es) and, furthermore, it makes no sense to change the instance(s) to which it relates.",依存状態クラスのインスタンスを単独で保持し、別のクラスのインスタンスと無関係にすることは適切ではありません。さらに、関連するインスタンスを変更することは意味がありません。
"item occurring in a design view that can be any of the following: design entity, design relationship, design attribute, or design constraint",デザイン ビューで発生する項目。デザイン エンティティ、デザイン関係、デザイン属性、デザイン制約のいずれかになります。
item or activity having a potential for a consequence,結果をもたらす可能性のある項目または活動
"item or aggregation of hardware, software, or both that is designated for configuration management and treated as a single entity in the configuration management process",構成管理用に指定され、構成管理プロセスにおいて 1 つのエンティティとして扱われるハードウェア、ソフトウェア、またはその両方のアイテムまたは集合体
"item or aggregation of software that is designed to be managed as a single entity and its underlying components, such as documentation, data structures, scripts",単一のエンティティとして管理されるように設計されたソフトウェアのアイテムまたは集合体、およびその基礎となるコンポーネント (ドキュメント、データ構造、スクリプトなど)
item that has been designed for use in multiple contexts,複数の状況で使用するために設計されたアイテム
item to be provided to an acquirer or other designated recipient as specified in an agreement,契約で指定された取得者またはその他の指定された受取人に提供される品目
"item, such as design, specifications, source code, documentation, test suites, or manual procedures, that has been designed for use in multiple contexts",複数のコンテキストで使用するために設計された項目 (設計、仕様、ソース コード、ドキュメント、テスト スイート、手動手順など)
"item, thing, or entity that has potential or actual value to an organization",組織にとって潜在的または実際の価値を持つアイテム、物、またはエンティティ
"iterative project management framework used in agile development, in which a team agrees on development items from a requirements backlog and produces them within a short duration of a few weeks",アジャイル開発で使用される反復的なプロジェクト管理フレームワーク。チームは要件のバックログから開発項目に同意し、数週間という短期間でそれらを作成します。
Its purpose is to prevent individual programmers from identifying so closely with their work that objective evaluation is impaired.,その目的は、個々のプログラマーが自分の仕事と密接に同一化しすぎて客観的な評価が損なわれることを防ぐことです。
Jackson System Design and Warnier-Orr method,Jackson System Design と Warnier-Orr 法
Java development kit,Java開発キット
Java Foundation Class,Java 基礎クラス
Java naming and directory interface,Java の命名とディレクトリ インターフェイス
Java Transaction API,JavaトランザクションAPI
job control language,ジョブ制御言語
joint acquirer-supplier review to evaluate the technical adequacies of the software architectural design as depicted in the software design descriptions,ソフトウェア設計の説明に示されているソフトウェア アーキテクチャ設計の技術的適切性を評価するための、買収者とサプライヤーの共同レビュー
joint capabilities integration and development system,共同能力統合開発システム
Joint Photographic Experts Group,共同写真専門家グループ
Joint Photographic Group,共同写真グループ
judgment of the degree of achievement of the process attribute for the assessed process,評価対象プロセスのプロセス属性の達成度の判定
"judgment provided based upon expertise in an application area, knowledge area, discipline, industry, etc. as appropriate for the activity being performed. Such expertise may be provided by any group or person with specialized education, knowledge, skill, experience, or training",実行される活動に適切な、応用分野、知識分野、分野、業界などの専門知識に基づいて提供される判断。このような専門知識は、専門的な教育、知識、スキル、経験、またはトレーニングを受けたグループまたは個人によって提供される場合があります。
"judicious use of means to effect a change, or a proposed change, to a product or service",製品またはサービスに対する変更、または変更提案を実現するための手段の賢明な使用
jump that takes place only when specified conditions are met,指定された条件が満たされた場合にのみ実行されるジャンプ
jump that takes place regardless of execution conditions,実行条件に関係なくジャンプする
junction at which a root arrow segment (going from source to use) divides into two or more arrow segments,ルート矢印セグメント (ソースから使用まで) が 2 つ以上の矢印セグメントに分かれる接合点
junction at which an arrow segment (going from source to use) merges with one or more other arrow segments to form a root arrow segment,矢印セグメント (ソースから使用まで) が 1 つ以上の他の矢印セグメントと結合してルート矢印セグメントを形成する接合部
key comprising of two or more attributes,2 つ以上の属性で構成されるキー
key performance parameter,主要なパフォーマンスパラメータ
key system attribute,キーシステム属性
"kilo-operations per second; that is, thousands of operations per secon",キロオペレーション/秒。つまり、1 秒あたり数千回の操作
knowledge concerning objects which are of relevance to management,管理に関連するオブジェクトに関する知識
knowledge discovery meta-model,知識発見メタモデル
"knowledge from accepted sources, including standards, academic sources, domain and industry bodies of knowledge and organizational knowledge",標準、学術情報源、ドメインおよび業界の知識体系、組織の知識など、認められた情報源からの知識
"knowledge that a particular contract is in place, and thus that a particular behavior of a set of objects is required",特定のコントラクトが存在し、したがって一連のオブジェクトの特定の動作が必要であるという知識
"knowledge that is exchangeable amongst users, about things, facts, concepts, and so on, in a universe of discourse",言説の世界において、物事、事実、概念などについて、ユーザー間で交換可能な知識
knowledge to be included in the study material of a software engineering licensing exam that a graduate would pass after completing four years of work experience,卒業生が 4 年間の実務経験を経た後に合格するソフトウェア エンジニアリング ライセンス試験の教材に含まれる知識
known only within a single routine or module,単一のルーチンまたはモジュール内でのみ知られる
known to multiple routines or modules,複数のルーチンまたはモジュールに認識される
"label associated with the net graph itself, rather than with an object of a net graph",ネット グラフのオブジェクトではなく、ネット グラフ自体に関連付けられたラベル
label represented as text near to the object it is associated with,関連付けられているオブジェクトの近くのテキストとして表されるラベル
"label that governs the form or shape of the object it is associated with, which, in contrast to an annotation, is typically not shown as text",関連付けられているオブジェクトの形式を制御するラベル。注釈とは対照的に、通常はテキストとして表示されません。
Labor resources are usually expressed as work hours.,労働資源は通常、労働時間として表されます。
labor resources required for the production of a specified output,指定された生産物の生産に必要な労働資源
"lack of staffing, strict deadlines, changing requirements",人員不足、厳しい納期、要件の変化
language designed to enable humans to communicate with computers,人間がコンピュータとコミュニケーションできるように設計された言語
language for the purpose of representing software application behavior descriptions,ソフトウェアアプリケーションの動作記述を表すことを目的とした言語
language in which the input to a machine-aided translation process is represente,機械支援翻訳プロセスへの入力が表現される言語
language in which the output from a machine-aided translation process is represente,機械支援翻訳プロセスからの出力が表現される言語
language in which the user states what is to be achieved without having to state specific instructions that the computer must execute in a given sequence,コンピュータが所定の順序で実行しなければならない特定の命令を述べることなく、ユーザーが達成すべきことを述べる言語。
language that can be recognized by the processing unit of a computer,コンピュータの処理装置が認識できる言語
language that can be used as its own metalanguage,独自のメタ言語として使用できる言語
language that cannot be used as its own metalanguage,独自のメタ言語として使用できない言語
language that describes the structure of XML information,XML情報の構造を記述する言語
language used to access information stored in a database,データベースに保存されている情報にアクセスするために使用される言語
language used to express commands to a computer system,コンピュータシステムへのコマンドを表現するために使用される言語
language used to express computer programs,コンピュータプログラムを表現するために使われる言語
"language used to identify a sequence of jobs, describe their requirements to an operating system, and control their execution",一連のジョブを識別し、オペレーティング システムにその要件を記述し、その実行を制御するために使用される言語
language used to specify some or all aspects of a language,言語の一部またはすべての側面を指定するために使用される言語
language whose rules are based on current usage without being specifically prescribed,特に規定されていない、現在の使用法に基づいてルールが定められている言語
language whose rules are based on usage rather than being pre-established prior to the language's use,ルールが言語の使用前に事前に確立されるのではなく、使用法に基づいている言語
language whose rules are explicitly established prior to its use,使用前にルールが明示的に確立されている言語
"large system that delivers unique capabilities, formed by integrating independently useful systems",独立して有用なシステムを統合して形成された、独自の機能を提供する大規模システム
larger and faster programmable ROM which allows data to be electrically erased from memory and rewritten many times,データをメモリから電気的に消去し、何度も書き換えることができる、より大きくて高速なプログラマブル ROM
Larger rlfs indicate better mitigation strategies.,rlf が大きいほど、より優れた緩和戦略を示します。
"largest change in a stimulus that produces no detectable change in the response of a measuring instrument, the change in the stimulus taking place slowly and monotonically",測定機器の応答に検出可能な変化をもたらさない刺激の最大の変化、ゆっくりと単調に起こる刺激の変化
last executable statement within a test item,テスト項目内の最後の実行可能ステートメント
late finish date,終了日が遅い
late start date,開始日が遅い
launching a process that can result in the authorization of a new project,新しいプロジェクトの承認につながる可能性のあるプロセスの開始
layered cache with progressively larger size and slower access,段階的にサイズが大きくなり、アクセスが遅くなる階層型キャッシュ
"layout chart, intended as an aid for the placing of rules and other pre-printed matter in the designing of forms, containing margin indicators and a network of lines indicating the locations of printed rules",レイアウト チャート。フォームの設計においてルールやその他の事前印刷物を配置するための補助として意図されており、マージン インジケーターと印刷されたルールの位置を示す線のネットワークが含まれます。
"leader of a chief programmer team; a senior-level programmer whose responsibilities include producing key portions of the software assigned to the team, coordinating the activities of the team, reviewing the work of the other team members, and having an overall technical understanding of the software being developed",チーフプログラマーチームのリーダー。チームに割り当てられたソフトウェアの主要部分の作成、チームの活動の調整、他のチームメンバーの作業のレビュー、開発中のソフトウェアの全体的な技術的理解などの責任を負う上級レベルのプログラマー
"legal agreement between two parties, the licensor and the licensee, as to the terms and conditions for the use or transfer of an intellectual property right from the licensor to the licensee",ライセンサーからライセンシーへの知的財産権の使用または譲渡に関する条件に関する、ライセンサーとライセンシーの二者間の法的合意
legal rights to use software in accordance with terms and conditions specified by the software licensor,ソフトウェア ライセンサーが指定した契約条件に従ってソフトウェアを使用する法的権利
"less commonly, a synonym for pause",あまり一般的ではありませんが、一時停止の同義語
letter that is the first character of a node number,ノード番号の最初の文字である文字
"letter, digit, or other symbol that is used to represent information",情報を表すために使用される文字、数字、またはその他の記号
level interim test status report.,レベルの中間テスト状況報告。
level of effort,努力のレベル
level of risk that is accepted in a given context based on the current values of society,現在の社会の価値観に基づいて、特定の状況において許容されるリスクのレベル
level test case.,レベルのテストケース。
level test design.,レベルテストのデザイン。
level test log.,レベルテストのログ。
level test plan.,レベルテスト計画。
level test procedure.],レベルテストの手順】
level test report.,レベルテストレポート。
license for a software entitlement granted in perpetuity,永久に付与されるソフトウェア使用権のライセンス
license for an entitlement that is for a limited amount of time,期間限定の資格のライセンス
license for products or components that are created or manufactured by one company and licensed by another company,ある会社によって作成または製造され、別の会社によってライセンス供与された製品またはコンポーネントのライセンス
"license for software use as originally purchased or procured, and which can typically be linked directly to purchase records",当初購入または調達されたソフトウェア使用のライセンス。通常は購入記録に直接リンクできます。
license rights for software which allow one full use of the software,ソフトウェアの完全な使用を 1 回限り許可するソフトウェアのライセンス権
license-free and platform-independent markup language that carries rules for generating text formats tha contain structured data,構造化データを含むテキスト形式を生成するためのルールを備えた、ライセンス不要でプラットフォームに依存しないマークアップ言語
life cycle consisting of a set of processes for specifying and managing the commonality and variability of a product line,製品ラインの共通性と変動性を指定および管理するための一連のプロセスで構成されるライフサイクル
life cycle consisting of a set of processes in which the application assets and member products of the product line are implemented and managed by reusing domain assets in conformance to the domain architecture and by binding the variability of the platform,ドメイン アーキテクチャに準拠してドメイン資産を再利用し、プラットフォームの可変性をバインドすることによって、アプリケーション資産と製品ラインのメンバー製品が実装および管理される一連のプロセスで構成されるライフ サイクル。
"life cycle process instances are enacted concurrently during the project, and the information items and artefacts produced by these process instances evolve concurrently",ライフサイクル プロセス インスタンスはプロジェクト中に同時に実行され、これらのプロセス インスタンスによって生成される情報項目とアーティファクトは同時に進化します。
life cycle sustainment plan,ライフサイクル持続計画
life-cycle cost,ライフサイクルコスト
life-cycle cost estimate,ライフサイクルコストの見積もり
"life-cycle phase in which a system's general architecture is developed, thereby fulfilling the requirements laid down by the software requirements document and detailing the implementation plan in response to it",システムの一般的なアーキテクチャを開発するライフサイクル段階。これにより、ソフトウェア要件文書で定められた要件を満たし、それに応じた実装計画の詳細を作成します。
likelihood of a safety-related system satisfactorily performing the required safety functions under stated conditions,安全関連システムが規定の条件下で必要な安全機能を十分に実行する可能性
limitation or implied requirement that constrains the design solution or implementation of the systems engineering process and is not changeable by the enterprise,設計ソリューションまたはシステム エンジニアリング プロセスの実装を制約し、企業が変更できない制限または暗黙の要件
"limitation or restraint placed on resource usage, such as what resource skills or disciplines are available and the amount of a given resource available during a specified time frame",どのようなリソースのスキルや分野が利用可能か、指定された時間枠内に利用可能な特定のリソースの量など、リソースの使用に課せられた制限または制限。
"limitation or restraint placed on the project budget, such as funds available over time",時間の経過とともに利用できる資金など、プロジェクトの予算に課せられる制限または制約
limits of acceptable risk associated with a hazard,危険に関連する許容可能なリスクの限界
linguistic construct containing one or more terms and predicates,1 つ以上の用語と述語を含む言語構造
linguistic construct r to an entity,エンティティに対する言語構成要素 r
LISP,LISP
"LISP, IPL",LISP、IPL
list displayed on a screen showing available functions from which a choice can be made,選択できる利用可能な機能を示すリストが画面に表示されます。
list in which items are appended to the last position of the list and retrieved from the first position of the list,項目がリストの最後の位置に追加され、リストの最初の位置から取得されるリスト
"list of acceptable and unacceptable behaviors adopted by a project team to improve working relationships, effectiveness, and communication",仕事上の関係、効率性、コミュニケーションを改善するためにプロジェクト チームが採用する許容可能な行動と許容できない行動のリスト
list of all the actions to be taken in the solution of a problem,問題を解決するためにとるべきすべてのアクションのリスト
list of all the conditions to be considered in the description of a problem,問題を説明する際に考慮すべきすべての条件のリスト
list of data items and information about those data items,データ項目のリストとそれらのデータ項目に関する情報
"list of questions, each of which is designed to check for conformity of a product, process or service to one or more provisions within a particular International Standard",質問のリスト。それぞれの質問は、製品、プロセス、またはサービスが特定の国際規格内の 1 つ以上の規定に適合しているかどうかを確認するように設計されています。
"list of the headings in a document in order of appearance, with location indicators (such as page numbers) shown for each heading",ドキュメント内の見出しを出現順に並べたリスト。各見出しに位置インジケーター (ページ番号など) が表示されます。
"list processing languages, information retrieval languages, simulation languages",リスト処理言語、情報検索言語、シミュレーション言語
"list that identifies each of the variables, labels, and other identifiers in a computer program and indicates which statements in the program define, set, or use each one",コンピューター プログラム内の各変数、ラベル、およびその他の識別子を識別し、プログラム内のどのステートメントがそれぞれを定義、設定、または使用するかを示すリスト
literal that denotes an instance in terms of its value,インスタンスを値で表すリテラル
literal value that is used by a program directly rather than being embedded in a named constant or variable,名前付き定数または変数に埋め込まれるのではなく、プログラムによって直接使用されるリテラル値
live fire test and evaluation,実弾試験と評価
"loader that reads absolute machine code into main memory, beginning at the initial address assigned to the code by the assembler or compiler, and performs no address adjustments on the code",アセンブラまたはコンパイラによってコードに割り当てられた最初のアドレスから開始して、絶対マシン コードをメイン メモリに読み取り、コードに対してアドレス調整を実行しないローダ
loader that reads relocatable code into main memory and adjusts the addresses in the code to reflect the storage locations into which the code has been loaded,再配置可能なコードをメイン メモリに読み取り、コードがロードされた格納場所を反映するようにコード内のアドレスを調整するローダー
Localization can be carried out separately from the translation process.,ローカリゼーションは、翻訳プロセスとは別に実行できます。
location at which there exists a set of interfaces,一連のインターフェイスが存在する場所
location/format in which such a collection is stored,そのようなコレクションが保存される場所/形式
logic device designed to be programmed after it is acquired,取得後にプログラムできるように設計されたロジックデバイス
logical component of an IDEF0 model that can be presented on a single sheet of paper,1 枚の紙に表現できる IDEF0 モデルの論理コンポーネント
"logical component of the data store, representing fundamental things of relevance to the user, and about which persistent information is stored",データ ストアの論理コンポーネント。ユーザーに関連する基本的な事項と、どの永続的な情報が保存されるかを表します。
logical expression indicating the input conditions that must be met in order for a particular program path to be executed,特定のプログラム パスを実行するために満たさなければならない入力条件を示す論理式
logical expression specifying a program state that must exist or a set of conditions that program variables must satisfy at a particular point during program execution.2. function or macro that complains loudly if a design assumption on which the code is based is not true,存在する必要があるプログラム状態、またはプログラム実行中の特定の時点でプログラム変数が満たさなければならない一連の条件を指定する論理式。コードの基礎となっている設計上の前提が真実でない場合に大声で文句を言う関数またはマクロ
logical expression specifying one or more conditions that must be met each time a particular point in a program loop is executed,プログラム ループの特定のポイントが実行されるたびに満たさなければならない 1 つ以上の条件を指定する論理式
logical expression specifying one or more conditions that program inputs must satisfy in order to be valid,プログラム入力が有効であるために満たさなければならない 1 つ以上の条件を指定する論理式
logical expression specifying one or more conditions that program outputs must satisfy in order for the program to be correct,プログラムが正しくなるためにプログラム出力が満たさなければならない 1 つ以上の条件を指定する論理式
"logical expression which evaluates to TRUE or FALSE, normally to direct the execution path in code",TRUE または FALSE に評価される論理式。通常はコード内の実行パスを指定します。
logical information model that specifies the modeling elements used within another (or the same) modeling notation,別の (または同じ) モデリング表記内で使用されるモデリング要素を指定する論理情報モデル
"logical organization of operations, applied specifically, used in the performance of particular measurements according to a given measurement method",特定の測定方法に従って特定の測定を実行する際に使用される、特に適用される操作の論理的構成
"logical organization of operations, described generically, used in measurement",測定に使用される、一般的に説明された操作の論理的構成
"logical portrayal of a physical, operational, or conceptual image or situation",物理的、操作的、概念的なイメージや状況の論理的な描写
logical predicate involving one or more behavior model elements,1 つ以上の動作モデル要素を含む論理述語
logical restrictions (conditions) on actions,動作に対する論理的な制限（条件）
logical sequence of general steps to describe the process of comparing one or more attributes against a reference attribute with respect to a specified scale,指定されたスケールに関して 1 つまたは複数の属性を参照属性と比較するプロセスを記述する一般的な手順の論理シーケンス
"logical sequence of operations, described generically, used in quantifying an attribute with respect to a specified scale",指定されたスケールに関して属性を定量化する際に使用される、一般的に記述された操作の論理シーケンス
"logical sequence of operations, described generically, used in the performance of measurements",測定の実行に使用される、一般的に記述された操作の論理シーケンス
"logical structure of the terms used to describe a domain of knowledge, including both the definitions of the applicable terms and their relationships",知識の領域を説明するために使用される用語の論理構造。該当する用語の定義とそれらの関係の両方が含まれます。
logical subset of the test item(s) that could be treated independently of other feature sets in the subsequent test design activities,後続のテスト設計アクティビティで他の機能セットとは独立して扱うことができるテスト項目の論理サブセット
"logically coherent fragment of a design view, using selected graphical icons and conventions for visual representation from an associated design language, to be used for representing selected design elements of interest for a system under design from a single viewpoint (diagram type)",設計ビューの論理的に一貫した断片。関連する設計言語から視覚的に表現するための選択されたグラフィカル アイコンと規則を使用し、単一の視点 (図タイプ) から設計中のシステムに関係する選択された設計要素を表現するために使用されます。
logically coherent grouping of STL sentences that describes a set of software concepts,一連のソフトウェア概念を説明する STL 文の論理的に一貫したグループ化
logically related collection of design elements,論理的に関連した設計要素のコレクション
logically separable part of a computer program,コンピュータプログラムの論理的に分離可能な部分
logically separable part of a program,プログラムの論理的に分離可能な部分
loop control that is executed after the loop body,ループ本体の後に実行されるループ制御
loop control that is executed before the loop body,ループ本体の前に実行されるループ制御
loop that has no exit,出口のないループ
loop that has no exit and whose execution can be interrupted only by intervention from outside the computer program or procedure in which the loop is located,出口がなく、ループが配置されているコンピュータプログラムまたはプロシージャの外部からの介入によってのみ実行を中断できるループ。
loopback of output from one function to be control for another function in the same diagram,ある関数からの出力をループバックして、同じダイアグラム内の別の関数の制御にする
loopback of output from one function to be input for another function in the same diagram,同じダイアグラム内の別の関数の入力となる、ある関数からの出力のループバック
loopback of output from one function to be mechanism for another function in the same diagram,ある関数からの出力をループバックして、同じ図内の別の関数のメカニズムにする
"loosely, an interrupt request",大まかに言えば、割り込み要求
"loosely, any executable statement in a computer program",大まかに言うと、コンピューター プログラム内の実行可能なステートメント
"loosely, input data",大まかに入力データ
low-priority compute-bound task that consumes spare CPU cycl,予備の CPU サイクルを消費する、優先度の低いコンピューティング バウンド タスク
low-profile quad flat packag,薄型クアッドフラットパッケージ
low-rate initial production,低レートの初期生産
lowest level for which data is collected,データが収集される最低レベル
lowest level of achievement in a scale of organizational process maturity,組織プロセスの成熟度における最低レベルの達成度
lowest rate of return at which an organization will consider investing; the interest rate used in business decision analysis,組織が投資を検討する最低収益率。ビジネス上の意思決定分析に使用される金利
"magnitude of a risk or combination of risks, expressed in terms of the combination of consequences and their likelihood",リスクまたはリスクの組み合わせの大きさ。結果とその可能性の組み合わせで表現されます。
main storage portion of a virtual storage system,仮想ストレージ システムのメイン ストレージ部分
maintain repository activity,リポジトリアクティビティを維持する
"Maintainability includes installation of updates and upgrades. Modifications include corrections, improvements or adaptation of the software to changes in environment, and in requirements and functional specifications. Modifications include those carried out by specialized support staff, and those carried out by business or operational staff, or end users.",保守性には、アップデートとアップグレードのインストールが含まれます。変更には、環境の変化、要件および機能仕様の変化に対するソフトウェアの修正、改善、または適応が含まれます。変更には、専門のサポート スタッフによって実行されるものと、ビジネス スタッフ、運用スタッフ、またはエンド ユーザーによって実行されるものが含まれます。
maintenance performed for the purpose of preventing problems before they occur,トラブルを未然に防ぐことを目的としたメンテナンス
maintenance performed to correct faults in hardware or software,ハードウェアまたはソフトウェアの障害を修正するために実行されるメンテナンス
"Major characteristics include input/output requirements, amount and kinds of computation, and computer resources required.",主な特徴には、入出力要件、計算の量と種類、必要なコンピュータ リソースが含まれます。
"Major milestones for software projects can include an acquirer or managerial sign-off, baselining of a specification, completion of system integration, and product delivery. Minor milestones can include baselining of a software module or completion of a chapter of the user manual.",ソフトウェア プロジェクトの主要なマイルストーンには、買収者または管理者の承認、仕様のベースライン設定、システム統合の完了、製品の納品などが含まれます。マイナー マイルストーンには、ソフトウェア モジュールのベースライン設定やユーザー マニュアルの章の完了などが含まれる場合があります。
make a measurement,測定する
"Making an investment means that the same money cannot be invested elsewhere, where it could be earning the MARR",投資を行うということは、同じ資金を他の場所に投資することができず、MARR を獲得できる可能性があることを意味します。
"making preference decisions (e.g., evaluation, prioritization, and selection) of available alternatives characterized by multiple criteria",複数の基準によって特徴付けられる利用可能な代替案の優先順位の決定 (評価、優先順位付け、選択など) を行う
"making, altering, or adapting a process description for a particular end",特定の目的のためにプロセス記述を作成、変更、または適合させること
malicious action or interaction with the system or its environment that has the potential to result in a fault or an error (and thereby possibly in a failure) or an adverse consequence,障害やエラー (おそらくは障害) または悪影響をもたらす可能性のある、システムまたはその環境との悪意のある行為または相互作用
man-machine interfac,マンマシンインターフェース
manage benchmarking business level activity,ビジネスレベルのアクティビティのベンチマークを管理する
manage benchmarking program level activity,ベンチマークプログラムレベルのアクティビティを管理する
Manageability involves the transparency and manageability of applications from an infrastructure point of view.,管理性には、インフラストラクチャの観点から見たアプリケーションの透明性と管理性が含まれます。
managed network operating within an organization with controlled and limited access,アクセスが制御され制限された組織内で運用される管理されたネットワーク
Management Information Model,管理情報モデル
management information system,経営情報システム
Management is subject to the policy guidance and monitoring set through corporate governance.,経営陣は、コーポレート・ガバナンスを通じて定められた政策指針と監視の対象となります。
management level or levels responsible for managing one or more data processing or information systems organizations,1 つ以上のデータ処理または情報システム組織の管理を担当する管理レベル
"management of activities involving hiring, retaining, promoting, training, and terminating personnel",人材の採用、維持、昇進、訓練、解雇に関わる活動の管理
"management of documents, including identification, acquisition, processing, storage, and dissemination.",識別、取得、処理、保管、配布を含む文書の管理。
management of objects which support the communication between objects within an ODP system,ODP システム内のオブジェクト間の通信をサポートするオブジェクトの管理
"management of the activities surrounding the release of one or more versions of software to one or more customers, including identifying, packaging, and delivering the elements of a product",製品の要素の特定、パッケージ化、配信を含む、1 つまたは複数の顧客へのソフトウェアの 1 つまたは複数のバージョンのリリースに関する活動の管理
"Management system elements can include strategic planning, decision making, and other processes for dealing with risk. The culture of an organization is reflected in its risk management system.",管理システム要素には、戦略計画、意思決定、およびリスクに対処するためのその他のプロセスが含まれる場合があります。組織の文化はリスク管理システムに反映されます。
management system for relational database,リレーショナルデータベースの管理システム
management system to direct and control the provision of one or more services,1 つ以上のサービスの提供を指示および制御するための管理システム
management-oriented attribute of software that contributes to its quality,ソフトウェアの品質に貢献する、ソフトウェアの管理指向の特性
managerial tasks relate to variability and has two dimensions: variability dimension and asset dimension,管理タスクは変動性に関連しており、変動性の側面と資産の側面という 2 つの側面があります。
manifestation of an error in software,ソフトウェアのエラーの兆候
manner and degree of interdependence between software modules,ソフトウェアモジュール間の相互依存性の方法と程度
manner and degree to which the tasks performed by a single software module are related to one another,単一のソフトウェア モジュールによって実行されるタスクが相互に関連する方法と程度
manner in which the assets are organized for ease of search and extraction within a reuse library,再利用ライブラリ内での検索と抽出を容易にするためにアセットを編成する方法
manual simulation of program execution to detect faults through step-by-step examination of the source program for errors in function or syntax.,プログラム実行の手動シミュレーション。関数または構文のエラーについてソース プログラムを段階的に検査することで障害を検出します。
Many systems follow the optimistic strategy of combining all lines that do not conflict.,多くのシステムは、競合しないすべての行を結合するという楽観的な戦略に従います。
mapping from the (cross product of the) class itself and the instances of the input argument types to the (cross product of the) instances of the other (output) argument types,クラス自体 (の外積) と入力引数の型のインスタンスから、他の (出力) 引数の型の (外積) インスタンスへのマッピング
mapping from the (cross product of the) instances of the class and the instances of the input argument types to the (cross product of the) instances of the other (output) argument types,クラスのインスタンス (の外積) と入力引数の型のインスタンスから、他の (出力) 引数の型のインスタンス (の外積) へのマッピング
mapping from the class itself to the instances of a value class,クラス自体から値クラスのインスタンスへのマッピング
mapping from the instances of a class to the instances of a value class,クラスのインスタンスから値クラスのインスタンスへのマッピング
mapping of a parallel initiation of activities of an integral activity group that perform a distinct function and return to the initiating activity.,個別の機能を実行して開始アクティビティに戻る、統合アクティビティ グループのアクティビティの並行開始のマッピング。
mapping of an activity that processes all of its input information and generates all of its output information,すべての入力情報を処理し、すべての出力情報を生成するアクティビティのマッピング
marking of the net that can be reached from the initial marking by the occurrence of transitions,遷移の発生によって初期マーキングから到達可能なネットのマーキング
"MARR that has not been adjusted to address the risk in an alternative, because the risk is considered insignificant in the decision analysis",意思決定分析ではリスクが重要ではないとみなされるため、代替案でリスクに対処するために調整されていない MARR
mask used to enable or disable interrupts by retaining or suppressing bits that represent interrupt requests,割り込み要求を表すビットを保持または抑制することによって割り込みを有効または無効にするために使用されるマスク
master test plan.,マスターテスト計画。
master test report.,マスターテストレポート。
material in or on which data can be recorded and from which data can be retrieved. Plural: media,データを記録したりそこからデータを取得したりできる素材。複数形：メディア
material repeated at the bottom of each page,各ページの下部に繰り返し記載されている内容
material repeated at the top of each page,各ページの上部に繰り返される資料
"material that appears at the end of printed documentation, such as an index",索引など、印刷された文書の最後に掲載される資料
"material that comes at the front of a printed book or manual, such as the title page and table of contents",タイトルページや目次など、印刷された本やマニュアルの先頭にある資料
"material, shape, size, weight",素材、形状、サイズ、重さ
mathematical or logical symbol that represents an action to be performed in an operation,操作で実行されるアクションを表す数学的または論理的記号
mathematical structure comprising a set of sets and a set of functions taking these sets as domains and co domains,一連の集合と、これらの集合を定義域および共域とする関数の集合から構成される数学的構造
mathematical structure comprising a set of sorts and a set of operators,一連のソートと一連の演算子で構成される数学的構造
"mathematically, a real number in the scale 0 to 1 attached to a random event, related to a long-run relative frequency of occurrence or to a degree of belief that an event will occur",数学的には、ランダムなイベントに付随する 0 から 1 のスケールの実数で、長期にわたる相対的な発生頻度、またはイベントが発生するという信念の程度に関連します。
matrix that identifies possible requests for database access and relates each request to information categories or elements in the database,データベース アクセスに対する考えられるリクエストを特定し、各リクエストをデータベース内の情報カテゴリまたは要素に関連付けるマトリックス
matrix that records the relationship between two or more products of the development process,開発プロセスの 2 つ以上の製品間の関係を記録するマトリックス
maximum amount of information that can be transferred on a given channel per unit of time; usually measured in bits per second or in baud.,特定のチャネル上で単位時間あたりに転送できる情報の最大量。通常はビット/秒またはボーで測定されます。
maximum number of items that can be held in a given computer memory; usually measured in words or bytes,特定のコンピュータ メモリに保持できるアイテムの最大数。通常はワードまたはバイトで測定されます
maximum number of items that can be held in a given storage device; usually measured in words or bytes,特定のストレージデバイスに保持できるアイテムの最大数。通常はワードまたはバイトで測定されます
"may indicate features at some intermediate milestones, such as features designed but not yet constructed",設計されているがまだ構築されていない機能など、いくつかの中間マイルストーンにある機能を示す場合があります。
mean time between failures,平均故障間隔
Mean time to failure (MTTF) is a direct metric of final system reliability.,平均故障時間 (MTTF) は、最終的なシステムの信頼性の直接的な指標です。
mean time to repair,修理にかかる平均時間
meaning of the syntactic components of a language,言語の構文要素の意味
means and conventions by which a programmer writing in a specific programming language accesses ORB capabilities,特定のプログラミング言語で作成するプログラマーが ORB 機能にアクセスするための手段と規則
means by which a user moves from one part of a software application to another2. process of accessing on-screen documentation and moving between different items of information,ユーザーがソフトウェア アプリケーションのある部分から別の部分に移動することを意味します2。画面上のドキュメントにアクセスし、さまざまな情報項目間を移動するプロセス
"means of communication, with syntax and semantics, consisting of a set of representations, conventions, and associated rules used to convey information",情報を伝達するために使用される一連の表現、規則、および関連する規則で構成される、構文とセマンティクスを備えた通信手段
"means of concrete representation for a particular type of a model, expressed as a grammar and suitable glyphs for its terminal symbols",特定のタイプのモデルを具体的に表現する手段。文法およびその終端記号に適したグリフとして表現されます。
means of delivering value for the customer by facilitating results the customer wants to achieve,顧客が達成したい結果を促進することで顧客に価値を提供する手段
means of describing a software design,ソフトウェア設計を記述する手段
means of modifying risk,リスクを修正する手段
means of synchronization between two tasks,2 つのタスク間の同期手段
means to describe and specify the tasks to be performed under the contract,契約に基づいて実行されるタスクを説明および指定することを意味します
measurable aspect of process quality,プロセス品質の測定可能な側面
measurable component of quality,品質の測定可能な要素
measurable criterion that identifies a quality attribute of a function or how well a functional requirement shall be accomplished,機能の品質属性、または機能要件がどの程度達成されるかを識別する測定可能な基準
measurable phenomenological characteristic of an interaction,相互作用の測定可能な現象学的特徴
measurable physical or abstract property of an entity,実体の測定可能な物理的または抽象的な特性
measurable property of a process quality characteristic,プロセス品質特性の測定可能な特性
measurable property of an entity which can be derived purely in terms of the entity itself,純粋に実体自体に関して導き出すことができる、実体の測定可能な特性
measurable property of an entity which can only be derived with respect to how it relates to its environment,環境との関係に関してのみ導き出すことができる、実体の測定可能な特性
measurable qualitative or quantitative attribute that is stipulated for a requirement,要件に対して規定されている測定可能な定性的または定量的な属性
"measure defined in terms of a property and the measurement method for quantifying it, including optionally the transformation by a mathematical function",プロパティに関して定義された尺度と、それを定量化するための測定方法。オプションで数学関数による変換も含まれます。
"measure defined in terms of an attribute and the measurement method for quantifying it, including optionally the transformation by a mathematical function",属性に関して定義された尺度と、それを定量化するための測定方法。オプションで数学関数による変換も含まれます。
measure defined in terms of an attribute and the method for quantifying it,属性に関して定義された尺度およびそれを定量化する方法
measure IT project activity,ITプロジェクトのアクティビティを測定する
"measure of a set of assets before an optimization, assigning relevant values to each group of assets being tracked",最適化前の資産セットの測定。追跡対象の資産の各グループに関連する値を割り当てます。
measure of an attribute that does not depend upon a measure of any other attribute,他の属性の尺度に依存しない属性の尺度
measure of an attribute that is derived from measures of one or more other attributes,1 つ以上の他の属性の尺度から導出される属性の尺度
measure of effectiveness,有効性の尺度
measure of how closely connected two routines or modules are,2 つのルーチンまたはモジュールがどの程度緊密に接続されているかを示す尺度
measure of performance,パフォーマンスの尺度
"measure of the degree to which a product or system can be used by specific users to meet their needs to achieve specific goals with effectiveness, efficiency, freedom from risk, satisfaction and content coverage in specific contexts of use",特定のユーザーが製品やシステムを使用して、有効性、効率性、リスクの回避、満足度、および特定の使用状況におけるコンテンツの網羅性を備えた特定の目標を達成するというニーズを満たすことができる度合いの尺度
measure of the degree to which a set of static attributes of a software product satisfies stated and implied needs for the software product to be used under specified conditions,ソフトウェア製品の一連の静的属性が、指定された条件下でソフトウェア製品を使用するための明示的および暗黙的なニーズをどの程度満たしているかを示す尺度
"measure of the degree to which a software product enables the behavior of a system under specified conditions to satisfy stated and implied needs for the system, including the software to be used under specified conditions",ソフトウェア製品が、指定された条件下でシステムの動作を可能にし、指定された条件下で使用されるソフトウェアを含む、システムの明示的および黙示的なニーズを満たす程度を示す尺度
"measure of the degree to which a system or software product enables the behavior to satisfy stated and implied needs for the system, including the software to be used under specified conditions",システムまたはソフトウェア製品が、指定された条件下で使用されるソフトウェアを含む、システムの明示的および暗黙的なニーズを満たす動作を可能にする程度の尺度
"measure of the functionality provided to the users with the first release of the software, as measured by the development project function point count",ソフトウェアの最初のリリースでユーザーに提供される機能の尺度。開発プロジェクトの機能ポイント数によって測定されます。
"measure of the functionality that an application provides to the user, determined by the application function point count",アプリケーションがユーザーに提供する機能の尺度。アプリケーションの機能ポイント数によって決定されます。
"measure of the level of uncertainty or the level of impact at which a stakeholder may have a specific interest. Below that risk threshold, the organization will accept the risk. Above that risk threshold, the organization will not tolerate the risk",不確実性のレベル、または利害関係者が特定の利益を有する可能性がある影響のレベルの尺度。そのリスクしきい値を下回ると、組織はリスクを受け入れることになります。そのリスクしきい値を超えると、組織はリスクを許容しなくなります。
"measure of the product itself, either direct or indirect",製品自体の直接的または間接的な測定
"measure of value within a given value system, often measured on a scale of 0 to 100",特定の価値体系内での価値の尺度。多くの場合、0 から 100 のスケールで測定されます。
measure of vertical distance; there are approximately 28 points to the millimeter (72 points to the inch),垂直距離の尺度。ミリメートルには約 28 ポイント (インチには 72 ポイント)
measure that combines both the likelihood that a system hazard will cause an accident and the severity of that accident,システムハザードが事故を引き起こす可能性とその事故の重大度の両方を組み合わせた対策
measure that is defined as a function of two or more values of base measures,基本メジャーの 2 つ以上の値の関数として定義されるメジャー
measure that is defined as a measurement function of two or more values of quality measure elements,品質測定要素の 2 つ以上の値の測定関数として定義される測定
measure that provides an estimate or evaluation of specified attributes derived from a model with respect to defined information needs,定義された情報ニーズに関してモデルから導出された指定された属性の推定または評価を提供する尺度
"measure used to assess design progress, compliance to performance requirements, and technical risks for critical performance parameters",設計の進捗状況、性能​​要件への準拠、重要な性能パラメータの技術的リスクを評価するために使用される尺度
measured system consisting of more than one piece of software,複数のソフトウェアから構成される測定システム
mechanism for dividing a browser window into independent windows for displaying different content or different parts of the same content (document),異なるコンテンツまたは同じコンテンツ (ドキュメント) の異なる部分を表示するためにブラウザ ウィンドウを独立したウィンドウに分割するメカニズム
mechanism for identifying resources on the Internet (such as web pages) by specifying the address of the resource and the access protocol used,リソースのアドレスと使用されるアクセス プロトコルを指定することによって、インターネット上のリソース (Web ページなど) を識別するメカニズム
mechanism or piece of equipment designed to serve a purpose or perform a function,目的を果たす、または機能を実行するように設計された機構または装置
Media Access Control,メディアアクセス制御
"medium, and the information recorded on it, that generally has permanence and can be read by a person or a machine.",媒体とそこに記録された情報。一般に永続性があり、人間または機械が読み取ることができます。
"meeting at which software code is presented to project personnel, managers, users, customers, or other interested parties for comment or approval",ソフトウェアコードがプロジェクト担当者、マネージャー、ユーザー、顧客、その他の関係者に提示され、コメントや承認を得る会議。
meeting stakeholder expectations that can be shown to be reasonable or merited,合理的または価値があると示される利害関係者の期待に応えること
"megaflops, a unit of measure of processing performance equal to one million floating-point operations per second",メガフロップス、1 秒あたり 100 万回の浮動小数点演算に等しい処理パフォーマンスの測定単位
member of a set of elements that constitutes a system,システムを構成する一連の要素のメンバー
"member of a set of elements that is used for the representation, organization, or control of data",データの表現、編成、または制御に使用される一連の要素のメンバー
member of an object set and an instance of an object typ,オブジェクト セットのメンバーとオブジェクト タイプのインスタンス
"member of the organization's management who authorized, approves, promotes, and obtains the funding and other resources for the reuse program",再利用プログラムを承認、承認、促進し、資金やその他のリソースを取得する組織の経営陣のメンバー
"member of the technical community who is skilled and trained to define problems and to analyze, develop, and express algorithms",問題を定義し、アルゴリズムを分析、開発、表現するスキルと訓練を受けた技術コミュニティのメンバー
"members of an agile development team working together under the scrum process, usually led by the scrum master and project owner",スクラム プロセスの下で協力するアジャイル開発チームのメンバー。通常はスクラム マスターとプロジェクト オーナーが主導します。
members of the organizational unit who participate in providing information during an appraisal,評価中に情報の提供に参加する組織単位のメンバー
"membership governed, non-profit organization committed to promoting and supporting function point analysis and other software measurement techniques. The IFPUG maintains the definition of the direct descendent of the Albrecht 1984 FPA method",メンバーシップによって管理される非営利団体で、ファンクション ポイント分析やその他のソフトウェア測定技術の促進とサポートに取り組んでいます。 IFPUG は、Albrecht 1984 FPA メソッドの直接の子孫の定義を維持しています。
memorandum of understanding,覚書
message digest 5,メッセージダイジェスト5
Message encompasses requests to meet responsibilities as well as simple informative communications.,メッセージには、単純な情報伝達だけでなく、責任を果たすための要求も含まれます。
message issued by a client to cause a service to be performed,サービスを実行させるためにクライアントによって発行されるメッセージ
meta-entity that inherits all of the meta-attributes and meta-relationships of its immediate and indirect supertype meta-entity,直接および間接のスーパータイプ メタ エンティティのすべてのメタ属性とメタ関係を継承するメタ エンティティ
meta-entity that provides additional attribution for another meta-object,別のメタオブジェクトに追加の属性を提供するメタエンティティ
meta-meta-attribute that uniquely identifies a meta-object in the metamodel section of a transfer,meta-meta-attribute 転送のメタモデルセクション内のメタオブジェクトを一意に識別します
meta-model element (as well as the corresponding model elements) that is a container for a KDM view,KDM ビューのコンテナーであるメタモデル要素 (および対応するモデル要素)
"meta-model element (as well as the corresponding model elements) that represents a thing of significance of the system of interest, about which information needs to be known or held",メタモデル要素 (および対応するモデル要素) は、関心のあるシステムの重要なものを表し、その情報について知るか保持する必要があります。
meta-model element (as well as the corresponding model elements) that represents some semantic association between elements of the system of interest,対象となるシステムの要素間の何らかの意味的な関連を表すメタモデル要素 (および対応するモデル要素)
Meta-Object Definition Language,メタオブジェクト定義言語
meta-object facility,メタオブジェクト機能
meta-type that acts as a manager for instances of a specified component type,指定されたコンポーネントタイプのインスタンスのマネージャーとして機能するメタタイプ
metamodel defining the basic concepts and structure of net graph models that are common to all versions of Petri nets,ペトリ ネットのすべてのバージョンに共通するネット グラフ モデルの基本概念と構造を定義するメタモデル
metamodel Vm for a subset of IDEFobject is a view of the constructs in the subset that is expressed using those constructs such that there exists a valid instance of Vm that is a description of Vm itself,IDEFobject のサブセットのメタモデル Vm は、Vm 自体の記述である Vm の有効なインスタンスが存在するように、それらの構成要素を使用して表現されるサブセット内の構成要素のビューです。
Method engineers create methodologies from metamodels via generation.,メソッド エンジニアは、メタモデルから生成を通じて方法論を作成します。
method for measuring functional size as defined in ISO/IEC 29026:2009,ISO/IEC 29026:2009 で定義されている機能サイズの測定方法
"method for passing parameters, in which the calling module provides to the called module a symbolic expression representing the parameter to be passed, and a service routine evaluates the expression and provides the resulting value to the called module",パラメーターを渡すためのメソッド。呼び出し側モジュールが、渡されるパラメーターを表すシンボリック式を呼び出されたモジュールに提供し、サービス ルーチンがその式を評価して、結果の値を呼び出されたモジュールに提供します。
method for web page construction to detect the user's screen size and orientation and dynamically change the layout accordingly,ユーザーの画面サイズと方向を検出し、それに応じてレイアウトを動的に変更する Web ページ構築方法
method of addressing in which the operation field of a computer instruction implies the address of the operands,コンピュータ命令の演算フィールドがオペランドのアドレスを意味するアドレス指定方法
method of implied addressing in which the operands for a computer instruction are understood to be in the storage locations following the locations of the operands used for the last instruction executed,コンピュータ命令のオペランドが、最後に実行された命令に使用されたオペランドの位置に続く記憶位置にあると理解される暗黙のアドレス指定方法
method of implied addressing in which the operation field of a computer instruction is understood to address the operands of the last instruction executed,コンピュータ命令の演算フィールドが最後に実行された命令のオペランドをアドレス指定するものと理解される暗黙のアドレス指定方法
"method of measuring quality that consists of noting the presence (or absence) of some characteristic (attribute) in each of the units under consideration. After each unit is inspected, the decision is made to accept a lot, reject it, or inspect another unit",品質を測定する方法。検討中の各ユニットにおける何らかの特性 (属性) の有無に注目することから成ります。各ユニットが検査された後、ロットを受け入れるか、拒否するか、または別のユニットを検査するかが決定されます。
"method of passing parameters, in which the calling module provides to the called module the actual value of the parameter to be passed",パラメーターを渡すメソッド。呼び出し側モジュールが呼び出されたモジュールに、渡されるパラメーターの実際の値を提供します。
method of recording data in ROM which can only be written once,一度だけ書き込み可能なROMにデータを記録する方式
method that combines a set of measurement values to create a composite value,一連の測定値を組み合わせて複合値を作成する方法
"method to evaluate the time sequence of logic signals, or the speed of a digital circuit",論理信号の時系列、またはデジタル回路の速度を評価する方法
method to keep data in volatile memory by rewriting the data before it disappears from the memory,データがメモリから消える前に書き換えることによって、データを揮発性メモリに保持する方法
method to search operand position in the instruction set architecture for a central processing unit,中央処理装置の命令セット アーキテクチャ内のオペランドの位置を検索する方法
methods and skills required to carry out a specific activity,特定の活動を実行するために必要な方法とスキル
"methods and techniques for construction, manipulation, storage, and display of images by means of a computer",コンピュータによる画像の構築、操作、保存、表示のための方法と技術
metric applied during development and used to predict the values of a software quality factor,開発中に適用され、ソフトウェア品質係数の値を予測するために使用される指標
metric output or an element that is from the range of a metric,メトリック出力またはメトリックの範囲からの要素
metric that does not depend upon a measure of any other attribute,他の属性の尺度に依存しないメトリック
"metric used to measure characteristics of the methods, techniques, and tools employed in developing, implementing, and maintaining the software system",ソフトウェア システムの開発、実装、保守に使用される方法、技術、ツールの特性を測定するために使用される指標
metric used to measure the characteristics of any intermediate or final product of the software development process,ソフトウェア開発プロセスの中間製品または最終製品の特性を測定するために使用される指標
metric value of a validated metric that is used to identify software that has unacceptable quality,許容できない品質を持つソフトウェアを識別するために使用される検証済みのメトリックのメトリック値
"metric values used to classify software into the categories of acceptable, marginal, or unacceptable",ソフトウェアを許容、限界、または許容不可能のカテゴリに分類するために使用されるメトリック値
metric whose values have been statistically associated with corresponding quality factor values,値が対応する品質係数値と統計的に関連付けられている指標
microcircuit unit with connectors (pins) arranged in two rows,コネクタ（ピン）が2列に配置された超小型回路ユニット
microcomputer design or computer program,マイコン設計またはコンピュータプログラム
"microcomputer module used in application development, e.g., to benchmark software, prototype applications, and debug algorithms for computer systems",ソフトウェアのベンチマーク、アプリケーションのプロトタイプ、コンピュータ システムのアルゴリズムのデバッグなど、アプリケーション開発で使用されるマイクロコンピュータ モジュール
microcomputer primarily intended for stand-alone use by an individual,主に個人によるスタンドアロン使用を目的としたマイクロコンピュータ
microcomputer that can be hand-carried for use in more than one location,持ち運びが可能で複数の場所で使用できるマイコン
microcontroller unit,マイコンユニット
microcontroller unit to generate timed pulses,タイミングパルスを生成するマイクロコントローラーユニット
microinstruction capable of specifying a limited number of simultaneous operations needed to carry out a machine language instruction,機械語命令を実行するために必要な限られた数の同時操作を指定できるマイクロ命令
microinstruction that specifies a set of simultaneous operations needed to carry out a given machine language instruction,特定の機械語命令を実行するために必要な一連の同時操作を指定するマイクロ命令
microinstruction that specifies one of a sequence of operations needed to carry out a machine language instruction,機械語命令を実行するために必要な一連の操作の 1 つを指定するマイクロ命令
microprocessor designed to perform digital signal processing,デジタル信号処理を実行するように設計されたマイクロプロセッサ
microprogrammed computer in which microprograms can be created or altered by the user,ユーザーがマイクロプログラムを作成または変更できる、マイクロプログラムされたコンピューター
microprogramming technique in which different microoperations are encoded as different values in the same field of a microinstruction,異なるマイクロオペレーションをマイクロ命令の同じフィールド内の異なる値としてエンコードするマイクロプログラミング手法
"microprogramming technique in which different microoperations can be encoded identically into the same field of a microinstruction, and the one that is executed depends upon the value in another field internal or external to the microinstruction.",異なるマイクロ操作をマイクロ命令の同じフィールドに同一にエンコードでき、実行される操作はマイクロ命令の内部または外部の別のフィールドの値に依存するマイクロプログラミング技術。
microprogramming technique in which the meaning of a field in a microinstruction depends on the value in an auxiliary register,マイクロ命令内のフィールドの意味が補助レジスタ内の値に依存するマイクロプログラミング手法
microprogramming technique in which the meaning of a field in a microinstruction is dependent on the value of another field in the microinstruction,マイクロ命令内のフィールドの意味がマイクロ命令内の別のフィールドの値に依存するマイクロプログラミング手法
"microword definition, data flow, timing constraints, and precedence constraints that characterize a given microprogrammed computer",特定のマイクロプログラムされたコンピュータを特徴付けるマイクロワード定義、データ フロー、タイミング制約、および優先順位制約
Migration is often used to achieve load balancing and reduce latency.,移行は、負荷分散を実現し、待ち時間を短縮するためによく使用されます。
milestone review to determine the acceptability of the detailed software design (as depicted in the detailed design description) to satisfy the requirements of the software requirements document,ソフトウェア要件文書の要件を満たすための詳細なソフトウェア設計 (詳細な設計の説明に示されている) の受け入れ可能性を判断するためのマイルストーン レビュー
million instructions per second,1秒あたり100万命令
million operations per second,1 秒あたり 100 万回のオペレーション
millions of floating point operations per second,1秒あたり数百万回の浮動小数点演算
miniature image file displayed for quick identification of a larger image or video file,より大きな画像またはビデオ ファイルをすばやく識別できるように表示される小型画像ファイル
minimum attractive rate of return,魅力的な最低収益率
minimum throughput required by the set of emulated users,エミュレートされたユーザーのセットに必要な最小スループット
missing functions that do not result in application failure (external design error) or errors resulting in a stop-run situation (code error,アプリケーション障害 (外部設計エラー) を引き起こさない機能の欠落、または停止/実行状況を引き起こすエラー (コードエラー)
mix of tasks typically run on a given computer system,通常、特定のコンピュータ システム上でさまざまなタスクが実行されます
"mode of ""Dialog"" or ""Batch"" in UNIX-based systems",UNIX ベースのシステムの「ダイアログ」または「バッチ」モード
mode of operation in which two or more computer programs are executed in an interleaved manner by a single processing unit,2つ以上のコンピュータプログラムが単一の処理装置によってインターリーブ方式で実行される動作モード
"mode of operation in which two or more processes are each assigned a small, fixed amount of continuous processing time on the same processor, and the processes execute in a round-robin manner, each for its allotted time, until all are completed",2 つ以上のプロセスに、同じプロセッサ上で少量の固定連続処理時間がそれぞれ割り当てられ、すべてのプロセスが完了するまで、割り当てられた時間ごとにラウンドロビン方式でプロセスが実行される動作モード
mode of operation in which two or more processes are executed concurrently by separate processing units that have access (usually) to a common main storage,(通常は) 共通の主記憶装置にアクセスできる別々の処理装置によって 2 つ以上のプロセスが同時に実行される動作モード
mode of operation in which two or more tasks are executed in an interleaved manner,2 つ以上のタスクがインターリーブ方式で実行される動作モード
mode of operation that permits two or more users to execute computer programs concurrently on the same computer system by interleaving the execution of their program,プログラムの実行をインターリーブすることにより、2 人以上のユーザーが同じコンピュータ システム上でコンピュータ プログラムを同時に実行できるようにする動作モード
model about data by which an interpretation of the data can be obtained in the modeling tool industry,モデリングツール業界においてデータの解釈を得ることができるデータに関するモデル
"model comprising definitions of processes in a domain of application described in terms of process purpose and outcomes, together with an architecture describing the relationships between the processes",プロセスの目的と結果の観点から記述されるアプリケーションのドメイン内のプロセスの定義と、プロセス間の関係を記述するアーキテクチャから構成されるモデル
"model comprising definitions of processes in a lifecycle described in terms of process purpose and outcomes, together with an architecture describing the relationships between the processes",プロセスの目的と結果の観点から記述されたライフサイクル内のプロセスの定義と、プロセス間の関係を記述するアーキテクチャから構成されるモデル
"model containing detailed definitions of the meta-entities, meta-relationships and meta-attributes whose instances appe in the model section of a CDIF transfer",メタ エンティティ、メタ関係、およびメタ属性の詳細な定義を含むモデル。そのインスタンスは CDIF 転送のモデル セクションに表示されます。
model defining the concepts and their relations for some modeling notation,いくつかのモデリング表記の概念とその関係を定義するモデル
model derived from one or more specified process assessment model(s) that identifies the process sets associated with the levels in a specified scale of organizational process maturity,組織プロセスの成熟度の指定されたスケールのレベルに関連付けられたプロセス セットを識別する、1 つ以上の指定されたプロセス評価モデルから派生したモデル。
Model Driven Architecture ®,モデル駆動アーキテクチャ®
model element that owns one or more distinct elements through the special owns(contains) relationships between the container element and owned elements,コンテナ要素と所有要素の間の特別な所有 (包含) 関係を通じて 1 つ以上の個別の要素を所有するモデル要素
model of an entity,エンティティのモデル
model of the concepts relevant to some endeavor,ある取り組みに関連する概念のモデル
"model of the software development process in which the constituent activities, typically a concept phase, requirements phase, design phase, implementation phase, test phase, and installation and checkout phase, are performed in that order, possibly with overlap but with little or no iteration",ソフトウェア開発プロセスのモデル。通常、コンセプト段階、要件段階、設計段階、実装段階、テスト段階、インストールおよびチェックアウト段階の構成アクティビティがこの順序で実行され、重複する可能性はありますが、反復はほとんどまたはまったくありません。
"model of the software development process in which the constituent activities, typically requirements analysis, preliminary and detailed design, coding, integration, and testing, are performed iteratively until the software is complete",ソフトウェア開発プロセスのモデル。通常、要件分析、予備設計および詳細設計、コーディング、統合、テストなどの構成アクティビティが、ソフトウェアが完成するまで繰り返し実行されます。
model page that contains a context diagram or a decomposition diagram,コンテキスト図または分解図を含むモデル ページ
model page that contains definitions for the arrow labels and box names in a specific diagram,特定の図の矢印ラベルとボックス名の定義を含むモデル ページ
model page that contains pictorial and graphical information (in contrast to text) about a specific diagram,特定の図に関する絵やグラフィック情報 (テキストとは対照的に) を含むモデル ページ
model page that contains textual material related to a specific diagram,特定の図に関連するテキスト素材を含むモデル ページ
"Model pages include diagram, text, FEO, and glossary pages.",モデル ページには、図、テキスト、FEO、および用語集のページが含まれます。
"model suitable for the purpose of assessing a specified process quality characteristic, based on one or more process reference models",1 つ以上のプロセス参照モデルに基づいて、指定されたプロセス品質特性を評価する目的に適したモデル
model that accepts the same inputs and produces the same outputs as a given system,特定のシステムと同じ入力を受け入れ、同じ出力を生成するモデル
model that behaves or operates like a given system when provided a set of controlled inputs,一連の制御された入力が提供された場合に、特定のシステムのように動作または動作するモデル
"model that contains the essential elements of effective processes for one or more disciplines and describes an evolutionary improvement path from ad hoc, immature processes to disciplined, mature processes with improved quality and effectiveness",1 つ以上の分野の効果的なプロセスの必須要素を含み、その場限りの未熟なプロセスから品質と有効性が向上した規律ある成熟したプロセスへの進化的な改善パスを記述するモデル。
model that describes a system's functional requirements in terms of use cases,ユースケースの観点からシステムの機能要件を説明するモデル
model that describes an interrelated set of classes (and/or subject domains) along with their relationships and responsibilities,相互に関連するクラス (および/またはサブジェクト ドメイン) のセットを、それらの関係と責任とともに記述するモデル
model that describes individual requests or patterns of requests among objects,オブジェクト間の個々のリクエストまたはリクエストのパターンを記述するモデル
"model used in computer performance evaluation, depicting resource utilization and performance measures for anticipated or actual workloads in a computer system",コンピュータのパフォーマンス評価に使用されるモデル。コンピュータ システム内の予想されるワークロードまたは実際のワークロードに対するリソースの使用率とパフォーマンスの尺度を示します。
modeled function located within the hierarchical graph structure of an IDEF0 model by its designated node number,指定されたノード番号によってIDEF0モデルの階層グラフ構造内に位置するモデル化された関数
modeling and simulation,モデリングとシミュレーション
modification made directly to an object program without reassembling or recompiling from the source program,ソースプログラムからの再アセンブルや再コンパイルを行わずに、オブジェクトプログラムに直接行われる変更
modification of a software product after delivery to detect and correct latent faults in the software product before they are manifested as failures,納品後にソフトウェア製品を修正して、ソフトウェア製品の潜在的な欠陥を障害として現れる前に検出して修正すること
modification of a software product after delivery to detect and correct latent faults in the software product before they become operational faults,ソフトウェア製品の潜在的な欠陥を、動作上の欠陥になる前に検出して修正するために、納品後にソフトウェア製品を修正すること
"modification of a software product, performed after delivery, to keep a software product usable in a changed or changing environment",変更された環境または変化する環境でソフトウェア製品を使用可能な状態に保つために、納品後に実行されるソフトウェア製品の修正。
"modification of a system to correct faults, to improve performance, or to adapt the system to a changed environment or changed requirements",障害を修正したり、パフォーマンスを改善したり、変化した環境や要件にシステムを適応させたりするためのシステムの変更。
"modification of an information signal represented by a sequence of digits or symbols to affect the representation of discrete time, discrete frequency, or other attributes",離散時間、離散周波数、またはその他の属性の表現に影響を与える、一連の数字または記号で表される情報信号の変更
modification of existing software to enable it to operate with similar functional capability in a different environment,既存のソフトウェアを変更して、異なる環境でも同様の機能で動作できるようにすること
modification to a source or object program,ソースまたはオブジェクトプログラムの変更
modification to an existing software product to satisfy a new requirement,新しい要件を満たすために既存のソフトウェア製品を変更する
"modified-off-the-shelf [IEEE 1062-2015 IEEE Recommended Practice for Software Acquisition, 3",修正済み既製 [IEEE 1062-2015 ソフトウェア取得に関する IEEE 推奨プラクティス、3]
module in a microcontroller unit (MCU) that controls a system functional unit,システム機能ユニットを制御するマイクロコントローラーユニット (MCU) 内のモジュール
module or formulary to collect data,データを収集するためのモジュールまたは公式
moment of variability resolution,変動モーメントの分解能
more concrete representation of an entity,エンティティのより具体的な表現
"More formally, a use case defines a set of use case instances or scenarios.",より正式には、ユース ケースは一連のユース ケース インスタンスまたはシナリオを定義します。
More than one connected or isolated intranet can exist within an organization.,組織内には複数の接続または分離されたイントラネットが存在できます。
"most commonly, a synonym for stop",最も一般的には、停止の同義語
"motivated professional process improvement with understanding work (process) objectives, technology status quo, and outcomes from product use, not forced by anybody",誰かに強制されるものではなく、作業（プロセス）目標、技術の現状、製品使用による成果を理解した、動機づけられた専門的なプロセスの改善
Move A to B,A を B に移動
moving a cluster to a different capsule,クラスターを別のカプセルに移動する
Multimedia Conferencing (System),マルチメディア会議（システム）
multimedia data broadcast,マルチメディアデータ放送
"multiple attributes associated with each schedule activity that can be included within the activity list. Activity attributes include activity codes, predecessor activities, successor activities, logical relationships, leads and lags, resource requirements, imposed dates, constraints, and assumptions",アクティビティ リスト内に含めることができる各スケジュール アクティビティに関連付けられた複数の属性。アクティビティ属性には、アクティビティ コード、先行アクティビティ、後続アクティビティ、論理関係、リードとラグ、リソース要件、課せられた日付、制約、および仮定が含まれます。
multiple-attribute decision technique that allows better performance in some of the attributes to compensate for lower performance in one or more of the other attributes; use of trade-off,複数属性の決定手法。他の 1 つ以上の属性のパフォーマンスの低下を補うために、一部の属性のパフォーマンスを向上させることができます。トレードオフの使用
multiple-criteria decision-making model that does not allow criteria to compensate for each other in proportio to their weights,基準がそれぞれの重みに比例して相互に補正することを許可しない、複数基準の意思決定モデル
"multiple-criteria decision-making model, in which a composite measure is composed of individually weighte terms and where criteria (also referred to as attribute terms) with a high value can compensate for those of a low value in proportion to each weight",複数基準の意思決定モデル。このモデルでは、複合メジャーが個別に重み付けされた項で構成され、高い値の基準 (属性項とも呼ばれる) が各重みに比例して低い値の基準を補うことができます。
multiset of transition modes is concurrently enabled if all the involved input places contain enough tokens to satisfy the sum of all of the demands imposed on them by each input arc annotation evaluated for each transition mode in the multiset,関係するすべての入力場所に、マルチセット内の各遷移モードに対して評価された各入力アーク アノテーションによって課されるすべての要求の合計を満たすのに十分なトークンが含まれている場合、遷移モードのマルチセットが同時に有効になります。
multiset of values obtained when an input arc annotation is evaluated for a particular binding to variables,入力アーク注釈が変数への特定のバインディングに対して評価されるときに取得される値のマルチセット
mutual acknowledgment of terms and conditions under which a working relationship is conducted,労働関係を維持するための諸条件の相互承認
name assigned to a foreign key attribute to represent the use of the foreign key in the entity,エンティティ内での外部キーの使用を表すために外部キー属性に割り当てられた名前
name or identifier assigned to a computer program statement to enable other statements to refer to that statement,他のステートメントがそのステートメントを参照できるようにするために、コンピューター プログラムのステートメントに割り当てられた名前または識別子
name that more specifically names the nature of a related value class or state class,関連する値クラスまたは状態クラスの性質をより具体的に示す名前
"name, address, label, or distinguishing index of an object in a computer program",コンピュータプログラム内のオブジェクトの名前、アドレス、ラベル、または識別インデックス
named connection point into which events of a specified type can be pushed,指定されたタイプのイベントをプッシュできる名前付き接続ポイント
named connection point that describes the component's ability to use a reference supplied by some external agent,外部エージェントによって提供される参照を使用するコンポーネントの機能を説明する名前付き接続ポイント
"named connection point that emits events of a specified type to one or more interested event consumers, or to an event channel",指定されたタイプのイベントを 1 つ以上の関心のあるイベント コンシューマ、またはイベント チャネルに発行する名前付き接続ポイント
named set of one or more object types.,1 つ以上のオブジェクト タイプの名前付きセット。
named set of operations that characterize the behavior of an entity,エンティティの動作を特徴付ける一連の名前付き操作
named set of records stored or processed as a unit,単位として保存または処理される名前付きレコードのセット
namespace for the grouped elements,グループ化された要素の名前空間
"natural number (i.e., non-negative integer) which describes the number of repetitions of an item in a multise",複数の項目の繰り返しの数を表す自然数 (つまり、非負の整数)
navigation method that takes the user from one item of on-screen documentation to another item,ユーザーを画面上のドキュメントのある項目から別の項目に移動するナビゲーション方法
"navigational aid with a displayed series of hyperlinks which lead from the home page to the current page, allowing the user to return to previously viewed pages.",ホームページから現在のページにつながる一連のハイパーリンクが表示されるナビゲーション支援機能で、ユーザーは以前に表示したページに戻ることができます。
needed for memory with a circuit architecture in single stable state,単一安定状態の回路アーキテクチャを備えたメモリに必要
needs not stated but implied by other stated needs and needs not stated because they are considered to be evident or obvious.,ニーズは述べられていないが、他の述べられているニーズによって暗示されており、ニーズは明白または自明であると考えられているために述べられていない。
needs that can be specified as quality requirements by internal measures,社内対策により品質要件として特定できるニーズ
needs that have not been stated but are actual needs,明示されていないが実際のニーズであるニーズ
nested relationships between sets of test cases that directly reflect the hierarchic decomposition of the test objectives.,テスト目標の階層的分解を直接反映する、テスト ケースのセット間の入れ子になった関係。
"net graph and its associated annotations comprising place types, arc annotations and transition conditions, and their corresponding definitions in a set of declarations, and an initial marking of the net",ネット グラフと、場所タイプ、アーク注釈、遷移条件で構成されるそれに関連する注釈、および一連の宣言内のそれらに対応する定義、およびネットの初期マーキング
Network open ends are usually caused by missing logical relationships,ネットワークのオープンエンドは通常、論理関係の欠如によって引き起こされます
network or set of networks established and controlled by one or more organizations to meet specific organizational or business needs,特定の組織またはビジネスのニーズを満たすために 1 つ以上の組織によって確立および制御されるネットワークまたはネットワークのセット
"new development, modification, reuse, reengineering, maintenance, or any other activity that results in software products, and includes the testing, quality assurance, configuration management, and other activities applied to these products.",新規開発、変更、再利用、リエンジニアリング、メンテナンス、またはソフトウェア製品を生み出すその他の活動。これには、これらの製品に適用されるテスト、品質保証、構成管理、およびその他の活動が含まれます。
no-operatio,無操作
node associated with the end of an arc,円弧の端に関連付けられたノード
node associated with the start of an arc,円弧の始点に関連付けられたノード
"node of a net, taken from the place kind, normally represented by an ellipse in the net graph",ネットのノード。場所の種類から取得され、通常はネット グラフ内の楕円で表されます。
"node of a net, taken from the transition kind, and represented by a rectangle in the net graph",ネットのノード。遷移の種類から取得され、ネット グラフ内の四角形で表されます。
"node of a Petri net that is a representative of another node, possibly defined on another page of the net graph",別のノードを代表するペトリ ネットのノード。ネット グラフの別のページで定義されている可能性があります。
"node, cluster or capsule, which: a) contains a basic engineering object corresponding to a computational client object; and b) contains, or is potentially capable of containing, stub, binder and protocol objects in a channel supporting operations involving the client object",ノード、クラスター、またはカプセル。a) 計算クライアント オブジェクトに対応する基本エンジニアリング オブジェクトを含みます。 b) クライアント オブジェクトに関係する操作をサポートするチャネルにスタブ、バインダー、およびプロトコル オブジェクトが含まれているか、またはそれらのオブジェクトを含む可能性がある
"node, cluster or capsule, which: a) contains, or is potentially capable of containing, a basic engineering object that corresponds to a computational server object and stub, binder and protocol objects in a channel supporting operations involving the server object; or b) contains, or is a potentially capable of containing, a protocol object which (possibly via interactions with other engineering objects) can return a reply identifying another server-sid",ノード、クラスター、またはカプセル。a) サーバー オブジェクトが関与する操作をサポートするチャネル内の計算サーバー オブジェクトおよびスタブ、バインダー、およびプロトコル オブジェクトに対応する基本エンジニアリング オブジェクトを含む、または潜在的に含むことができる。または b) 別のサーバー SID を識別する応答を (おそらく他のエンジニアリング オブジェクトとの対話を介して) 返すことができるプロトコル オブジェクトを含む、または含む可能性がある
nominal annual interest rate,名目年利率
non-developmental item.,非開発アイテム。
non-empty set of data items associated with a place,場所に関連付けられた空でないデータ項目のセット
non-executable program statement that affects the assembler or compiler's interpretation of other statements in the program,プログラム内の他のステートメントに対するアセンブラまたはコンパイラの解釈に影響を与える、実行不可能なプログラム ステートメント
non-executable system or software product for reviewing,レビュー用の非実行可能システムまたはソフトウェア製品
non-fulfillment of a requirement,要件の不履行
non-functional product,機能しない製品
"Non-primary entities have only very few attributes, e.g. code, descriptio",非プライマリエンティティには非常に少数の属性しかありません。コード、説明
"non-volatile semiconductor storage device, from which data cannot be removed once it is writte",一度書き込んだデータを消去することができない不揮発性半導体記憶装置
nondisplaying formatting characters that are embedded within a block of free text,フリーテキストのブロック内に埋め込まれた非表示の書式設定文字
nonidentifying relationship in which an instance of the child entity can exist without being related to an instance of the parent entity,子エンティティのインスタンスが親エンティティのインスタンスに関連付けられずに存在できる非識別関係
nonidentifying relationship in which an instance of the child entity must be related to an instance of the parent entity,子エンティティのインスタンスが親エンティティのインスタンスに関連している必要がある非識別関係
nonpermanent output of information in audio or visual format,オーディオまたはビジュアル形式での情報の非永続的な出力
nonprocedural language in which a program is created as a result of interactive dialog between the user and the computer system,ユーザーとコンピュータシステム間の対話的な対話の結果としてプログラムが作成される非手続き型言語
nonprocedural language that permits the user to declare a set of facts and to express queries or problems that use these facts,ユーザーが一連の事実を宣言し、これらの事実を使用するクエリや問題を表現できるようにする非手続き型言語
nonprocedural language that permits the user to state a set of rules and to express queries or problems that use these rules,ユーザーが一連のルールを記述し、これらのルールを使用するクエリや問題を表現できるようにする非手続き型言語
"normally applies to manually executed testing, rather than the execution of an automated script",通常、自動スクリプトの実行ではなく、手動で実行されるテストに適用されます。
"Normally the task submission is defined internally by the submission of a special character (e.g. Carriage Return) or a character sequence at the end of the input string or at the end of several parts of the input string. Also it often happens that the task submission event is defined by the submission of the last character of any specified number characters in a string. For a classic batch task, the task submission is defined by the submission of the last character of the last string of the batch command sequence.",通常、タスクの送信は、入力文字列の末尾または入力文字列のいくつかの部分の末尾に特殊文字 (復帰など) または文字シーケンスを送信することによって内部的に定義されます。また、タスク送信イベントが、文字列内の指定された数の文字の最後の文字の送信によって定義されることもよくあります。従来のバッチ タスクの場合、タスクの送信は、バッチ コマンド シーケンスの最後の文字列の最後の文字を送信することによって定義されます。
"not a <GeneralPrintableChar>, "", #,], <EscapeCharacter> or <WhiteSpace>","<GeneralPrintableChar>、""、#,]、<EscapeCharacter>、または <WhiteSpace> ではありません。"
"not a detailed specification, but a description of accumulated wisdom and experience.",詳細な仕様ではなく、蓄積された知恵と経験の説明です。
not applicable,適用できない
not available,利用不可
"not only traditional CASE tools, but also requirements tools, verification and validation tools, design tools, and documentation tools.",従来の CASE ツールだけでなく、要件ツール、検証および検証ツール、設計ツール、および文書化ツールも含まれます。
"Note that if this is done, the result is not the functional size.",これを実行した場合、結果は機能的なサイズではないことに注意してください。
notice that renounces or repudiates a legal claim or right,法的請求または権利を放棄または拒否することを通知する
noun or noun phrase associated with an arrow segment to signify the arrow meaning of the arrow segment,矢印セグメントの矢印の意味を示すために、矢印セグメントに関連付けられた名詞または名詞句
number and arrangement of address fields in a computer instruction,コンピュータ命令におけるアドレスフィールドの数と配置
"number and arrangement of elements within an address, such as the elements needed to identify a particular channel, device, disk sector, and record in magnetic disk storage",アドレス内の要素の数と配置。特定のチャネル、デバイス、ディスク セクターを識別し、磁気ディスク ストレージに記録するために必要な要素など。
number and arrangement of fields in a computer instruction,コンピュータ命令におけるフィールドの数と配置
number of allowed instances of a participating data object from the viewpoint of the other participants in the relationship,関係の他の参加者の観点から見た、参加しているデータ オブジェクトの許可されたインスタンスの数
number of allowed instances of the relationship from the viewpoint of a single instance of the data object planning a role,役割を計画するデータオブジェクトの単一インスタンスの観点から見た、関係の許可されるインスタンスの数
number of defects per unit of product size,製品サイズ単位あたりの欠陥数
number of memory locations that a central processing unit can address,中央処理装置がアドレス指定できるメモリ位置の数
number of model elements regarded as a unit formed by traceability relationships to a single distinct element,単一の異なる要素へのトレーサビリティ関係によって形成される単位と見なされるモデル要素の数
"number of records, words, characters, or bits in a block",ブロック内のレコード、単語、文字、またはビットの数
number of roles that participate in a relationship,関係に参加する役割の数
"number of words, bytes, or bits needed to store a computer instruction",コンピューター命令を保存するために必要なワード、バイト、またはビットの数
number or category assigned to an attribute of an entity by making a measurement,測定を行うことによってエンティティの属性に割り当てられる番号またはカテゴリ
number or string that is used by a program directly rather than being embedded in a named constant or variable,名前付きの定数または変数に埋め込まれるのではなく、プログラムによって直接使用される数値または文字列
"number or symbol assigned to an entity by a mapping from the empirical world to the formal, relational world in order to characterize an attribute",属性を特徴付けるために、経験的な世界から形式的な関係的な世界へのマッピングによってエンティティに割り当てられる数字または記号
number that must be added to a relative address to determine the address of the storage location to be accessed,アクセスする記憶場所のアドレスを決定するために相対アドレスに追加する必要がある数値
"number, character, or group of characters that identifies a given device or storage location",特定のデバイスまたはストレージの場所を識別する番号、文字、または文字のグループ
"numbering system used by a project or organization to identify costs by category, such as labor, supplies, materials, and equipment",プロジェクトまたは組織が、労働力、消耗品、資材、設備などのカテゴリごとにコストを識別するために使用する番号付けシステム
"numbers of products or services to be delivered, data rights for delivered COTS nondevelopmental items, delivery dates, milestones with exit criteria, work constraints associated with training, site provisions, and deployment schedules.",納品される製品またはサービスの数、納品される COTS 非開発品目のデータ権利、納品日、終了基準のあるマイルストーン、トレーニングに関連する作業の制約、サイトの準備、導入スケジュール。
numeral used to represent one of the two digits in the binary numeration system; zero (0) or one (1),二進法における 2 桁のうちの 1 つを表すために使用される数字。ゼロ (0) または 1 (1)
numeric or string value that does not change during program execution,プログラムの実行中に変化しない数値または文字列値
numerical analysis of the effect on overall project objectives of identified risks,特定されたリスクがプロジェクト全体の目標に及ぼす影響の数値分析
"numerical or categorical result assigned to a base measure, derived measure, or indicator",基本メジャー、派生メジャー、またはインジケーターに割り当てられた数値またはカテゴリの結果
numerical or categorical result assigned to an indicator,インジケーターに割り当てられた数値またはカテゴリの結果
numerical target for a quality factor to be met in the final product,最終製品で満たすべき品質係数の数値目標
numerical target related to a quality factor to be met during system development,システム開発時に達成すべき品質係数に関する数値目標
"object (i.e., thing, event or concept) that occurs in a model (i.e., transfer)",モデル（つまり、伝達）内で発生するオブジェクト（つまり、物、出来事、または概念）
object adapter,オブジェクトアダプタ
object causing a communication,コミュニケーションを引き起こすオブジェクト
Object Constraint Language.,オブジェクト制約言語。
object expressed as a composition,合成として表現されたオブジェクト
object identifier,オブジェクト識別子
Object Management Group,オブジェクト管理グループ
Object Modeling Technique,オブジェクトモデリング手法
object providing the storage function,ストレージ機能を提供するオブジェクト
object reference.,オブジェクト参照。
Object references are never reused to identify another object.,オブジェクト参照が別のオブジェクトを識別するために再利用されることはありません。
object representing significant actions,重要なアクションを表すオブジェクト
Object Request Broker,オブジェクトリクエストブローカー
"object taking part in a communication, which is not the initiating object",通信に参加しているオブジェクト（開始オブジェクトではない）
"object template derived from the state and structure of an engineering object that can be used to instantiate another engineering object, consistent with the state of the original object at the time of checkpointing",エンジニアリング オブジェクトの状態と構造から派生したオブジェクト テンプレート。チェックポイント作成時の元のオブジェクトの状態と一致する、別のエンジニアリング オブジェクトをインスタンス化するために使用できます。
object template for a configuration of objects and any activity required to instantiate those objects and establish initial bindings,オブジェクトの構成用のオブジェクト テンプレート、およびそれらのオブジェクトをインスタンス化し、初期バインディングを確立するために必要なアクティビティ
"object template which comprises a set of computational interface templates which the object template can instantiate, a behavior specification, and an environment contract specification",オブジェクト テンプレートは、オブジェクト テンプレートがインスタンス化できる一連の計算インターフェイス テンプレート、動作仕様、および環境コントラクト仕様で構成されます。
object that can act as a factory and can provide the necessary environment for subsequent management of the components created by it,ファクトリとして機能し、それによって作成されたコンポーネントの後続の管理に必要な環境を提供できるオブジェクト
"object that encapsulates its own template, so that the template can be interrogated by interaction with the component",独自のテンプレートをカプセル化するオブジェクト。コンポーネントとの対話によってテンプレートを問い合わせることができます。
object that is to be characterized by measuring its attributes,属性を測定することによって特徴付けられるオブジェクト
"object that manages a repository of locations for interfaces, including locations of management functions for the cluster supporting those interfaces",インターフェースの場所のリポジトリを管理するオブジェクト (それらのインターフェースをサポートするクラスターの管理機能の場所を含む)
"object that, in response to an interaction initiated by its environment, creates a new object and returns a reference to it to the environment",環境によって開始された対話に応答して、新しいオブジェクトを作成し、そのオブジェクトへの参照を環境に返すオブジェクト
object to be modeled,モデル化されるオブジェクト
"object types of an object type set, regardless of how these object types can be collected, aggregated, grouped, bundled, or otherwise joined within the object type set",オブジェクト タイプ セットのオブジェクト タイプ。これらのオブジェクト タイプがオブジェクト タイプ セット内でどのように収集、集約、グループ化、バンドル、またはその他の方法で結合できるかは関係ありません。
object which is a sink of the information conveyed,伝達される情報のシンクであるオブジェクト
object which is the source of the information conveyed,伝達される情報の源であるオブジェクト
object which performs some service on behalf of a client object,クライアントオブジェクトに代わって何らかのサービスを実行するオブジェクト
object which requests that a service be performed by another object,別のオブジェクトによるサービスの実行を要求するオブジェクト
object with no thread of control,制御スレッドのないオブジェクト
object-interface-specific ORB component which assists an object adapter in passing requests to particula methods,オブジェクト アダプタがリクエストを特定のメソッドに渡すのを支援する、オブジェクト インターフェイス固有の ORB コンポーネント
object-oriented design,オブジェクト指向設計
"Objective evidence can be obtained through observation, measurement, test, or other means. [ISO 9000:2015]",客観的な証拠は、観察、測定、試験、またはその他の手段を通じて取得できます。 [ISO9000:2015]
objective function that characterizes the cost associated with different values of the decision variable,決定変数のさまざまな値に関連するコストを特徴付ける目的関数
objective function that characterizes the income generated by different values of the decision variable,決定変数のさまざまな値によって生成される収入を特徴付ける目的関数
objective measure associated with a risk factor to be mitigated,軽減すべきリスク要因に関連する客観的な尺度
"observable activity of a system, measurable in terms of quantifiable effects on the environment whether arising from internal or external stimulus",内部刺激または外部刺激から生じるかどうかにかかわらず、環境に対する定量化可能な影響の観点から測定可能な、システムの観察可能な活動。
"observable fact or state of affairs involving one or more entities, of which it is possible to assert or deny that it holds for those entities",1 つまたは複数のエンティティに関係する観察可能な事実または状況。それらのエンティティに当てはまると主張または否定することが可能です。
observable predicted behavior of the test item under specified conditions based on its specification or another source,仕様または別のソースに基づいた、指定された条件下でのテスト項目の観察可能な予測動作
observable result of achievement of a specified process attribute,指定されたプロセス属性の達成の観察可能な結果
observable result of the successful achievement ofthe process purpose,プロセスの目的がうまく達成されたことによる目に見える結果
"obtaining human and material resources necessary to perform project activities. Acquisition implies a cost of resources, and is not necessarily financial",プロジェクト活動を実行するために必要な人的および物的資源を確保する。取得にはリソースのコストが伴いますが、必ずしも金銭的なものではありません
occurrence of a particular set of circumstances,特定の一連の状況の発生
occurrence of an EventType,EventType の発生
ODP Type Repository,ODP タイプ リポジトリ
"of a service, any entity capable of requesting the service",サービスの、サービスを要求できる任意のエンティティ
"of a type, an <X> that satisfies the type",型の、その型を満たす <X>
"of an <X>, a predicate characterizing a collection of <X>s",<X> の、<X> のコレクションを特徴付ける述語
"of an <X>, a predicate defined in a template that holds for all the instantiations of the template and that expresses the requirements the instantiations of the template are intended to fulfill",<X> の、テンプレートで定義された述語。テンプレートのすべてのインスタンス化に対して保持され、テンプレートのインスタンス化が満たすことを目的とした要件を表します。
"of an <X>, instantiating by an action of objects in the model",<X> の、モデル内のオブジェクトのアクションによってインスタンス化される
"of an <X>, instantiating not achieved by an action of objects in the model",<X> のインスタンス化は、モデル内のオブジェクトのアクションによっては達成されません
"of an <X>, the action of destroying an instantiated <X>",<X> の、インスタンス化された <X> を破棄するアクション
"of an <X>, the set of all <X>s satisfying an <X> template type",<X> の、<X> テンプレート タイプを満たすすべての <X> のセット
"of an object, a collection of actions with a set of constraints on when they may occur",オブジェクトの、いつ発生するかについての一連の制約を持つアクションの集合。
"of an object, the part of the model which is not part of that object",オブジェクトの、そのオブジェクトの一部ではないモデルの部分
"of requirements for processes or data, agreed upon and understood by both the user and the software developer",ユーザーとソフトウェア開発者の両方によって合意および理解されたプロセスまたはデータの要件
"of software quality assurance (SQA), situation in which control of the SQA budget is vested in an organization independent of the development organization",ソフトウェア品質保証（SQA）の予算管理が開発組織から独立した組織に委ねられている状況
"of software quality assurance (SQA), situation in which SQA is free from technical, managerial, and financial influences, intentional or unintentional",ソフトウェア品質保証 (SQA) の状況、SQA が意図的か非意図的かにかかわらず、技術的、経営的、財務的影響を受けない状況
"of software quality assurance (SQA), situation in which the responsibility of the SQA effort is vested in an organization separate from the development and project management organizations",ソフトウェア品質保証（SQA）の責任が開発組織やプロジェクト管理組織とは別の組織に与えられている状況
"of software quality assurance (SQA), situation in which the SQA effort uses personnel who are not involved in the development of the system or its elements",ソフトウェア品質保証 (SQA) の、SQA の取り組みにシステムまたはその要素の開発に関与していない人員が使用される状況
Office of Government Commerce (UK),政府商務局 (英国)
Often a software developer works with other developers for a software manufacturer to create commercial applications. A software developer can also often work as an in-house developer of software for use by the software developer's own organization.,多くの場合、ソフトウェア開発者は、ソフトウェア メーカーの他の開発者と協力して商用アプリケーションを作成します。ソフトウェア開発者は、多くの場合、ソフトウェア開発者自身の組織で使用するソフトウェアの社内開発者として働くこともできます。
often based on look-up table architecture,多くの場合、ルックアップ テーブル アーキテクチャに基づいています
often by introducing a new commit that restores things to their previous state,多くの場合、物事を以前の状態に戻す新しいコミットを導入することによって行われます。
"often comprised of a number of activities, grouped into one or more test sub-processe",多くの場合、1 つ以上のテスト サブプロセスにグループ化された多数のアクティビティで構成されます。
"often contains a brief description of the change and its rationale; names of contributors, reviewers, or approvers; a reference to third-party software from which the change was obtained; a schedule for integrating it to other branches; and a reference to the issue identifier associated with the change",多くの場合、変更とその理論的根拠の簡単な説明が含まれます。寄稿者、査読者、または承認者の名前。変更の取得元となったサードパーティ ソフトウェアへの参照。他のブランチに統合するスケジュール。および変更に関連付けられた問題識別子への参照
often part of a requirements specification,多くの場合、要件仕様の一部です
"often part of a requirements specification. These characteristics typically include speed, accuracy, and memory usage.",多くの場合、要件仕様の一部です。これらの特性には通常、速度、精度、メモリ使用量が含まれます。
often performed at a customer site,多くの場合、顧客サイトで実行されます
often performed during development of the work products to identify defects for removal. The intent is to increase the quality of the work product as well as to reduce cost by fixing defects as soon as possible.,多くの場合、作業成果物の開発中に、除去すべき欠陥を特定するために実行されます。その目的は、欠陥をできるだけ早く修正することで作業成果物の品質を向上させ、コストを削減することです。
often performed only by users within the organization developing the software,多くの場合、ソフトウェアを開発している組織内のユーザーのみが実行します。
often performed using internal rate of return (IRR) as the basis of comparison,比較の基準として内部収益率 (IRR) を使用して実行されることが多い
often takes the form of a list of code labels encountered as the program executes,多くの場合、プログラムの実行時に発生するコード ラベルのリストの形式になります。
"often the root cause of a risk factor. In business decision making, uncertainty refers to unquantified variation; the probabilities of the variations cannot be used in the decision analysis.",多くの場合、危険因子の根本原因です。ビジネス上の意思決定において、不確実性とは定量化されていない変動を指します。変動の確率は意思決定分析では使用できません。
"often used also to refer to work effort as well as, or instead of, money.",お金だけでなく、またはお金の代わりに、仕事の努力を指すこともよくあります。
often used for caches or main memory in a computer and embedded in an MCU chip. Compare to a CD where data is stored and accessed sequentially.,コンピュータのキャッシュやメイン メモリによく使用され、MCU チップに組み込まれます。データが保存され、順次アクセスされる CD と比較してください。
often used for solving scientific and engineering problems,科学および工学の問題を解決するためによく使用されます
often used for testing or debugging,テストやデバッグによく使用されます
"omission or misinterpretation of user requirements in a software specification, incorrect translation, or omission of a requirement in the design specification",ソフトウェア仕様におけるユーザー要件の省略または誤解、誤った翻訳、または設計仕様における要件の省略
"On a control chart, it appears as part of the random process variation (i.e., variation from a process that would be considered normal or not unusual), and is indicated by a random pattern of points within the control limits.",管理図では、ランダムなプロセス変動 (つまり、正常または異常ではないと考えられるプロセスからの変動) の一部として表示され、管理限界内の点のランダム パターンによって示されます。
"On the occurrence of the transition, the following actions occur indivisibly 1. for each input place of the transition the enabling tokens of the input arc with respect to that mode are subtracted from the input place's marking, and 2. for each output place of the transition the multiset of tokens of the evaluated output arc expression is added to the marking of the output place. A place can be both an input place and an output place of the same transition.",遷移が発生すると、次のアクションが不可分に発生します。1. 遷移の各入​​力場所について、そのモードに関する入力アークの有効化トークンが入力場所のマーキングから減算されます。2. 遷移の各出力場所について、評価された出力アーク式の複数セットのトークンが出力場所のマーキングに追加されます。場所は、同じトランジションの入力場所と出力場所の両方になることができます。
"on-line, off-line, and maintenance mod",オンライン、オフライン、メンテナンスモジュール
on-screen help provided with the softwar,ソフトウェアに付属の画面上のヘルプ
one alternative that is used to realize particular variation points,特定の変化点を実現するために使用される代替手段の 1 つ
One auditor of the audit team is appointed as the audit team leader. The audit team can include auditors-i training.,監査チームの監査人 1 名が監査チームリーダーに任命されます。監査チームには、auditors-i トレーニングを含めることができます。
"One can often distinguish the trunk from other branches by the version numbers used for identifying its files, which are shorter than those of all other branches.",多くの場合、トランクと他のブランチは、ファイルの識別に使用されるバージョン番号によって区別できます。バージョン番号は、他のすべてのブランチのバージョン番号よりも短いです。
one element (numbered list item) in a procedure that tells a user to perform an action (or actions),ユーザーにアクションを実行するよう指示するプロシージャ内の 1 つの要素 (番号付きリスト項目)
"One entity (the generic entity) represents the complete set of things and the other (category entity) represents a subtype or sub-classification of those things. The category entity can have one or more attributes, or relationships with instances of another entity, not shared by all generic entity instances. Each instance of the category entity is simultaneously an instance of the generic entity. [key style]",1 つのエンティティ (一般エンティティ) は物事の完全なセットを表し、もう 1 つ (カテゴリ エンティティ) はそれらの物事のサブタイプまたは下位分類を表します。カテゴリ エンティティは、すべての汎用エンティティ インスタンスで共有されるわけではない、1 つ以上の属性、または別のエンティティのインスタンスとの関係を持つことができます。カテゴリ エンティティの各インスタンスは同時に汎用エンティティのインスタンスでもあります。 【キースタイル】
one occurrence of a function's transformation of some subset of its inputs into some subset of its outputs,関数による入力の一部の部分集合から出力の一部の部分集合への変換が 1 回発生すること
one of a set of real or abstract things represented by an entity,エンティティによって表現される一連の現実または抽象的なものの 1 つ
"one of the characters 0, 1 …, F in the hexadecimal numeration system",16 進数体系の文字 0、1 …、F のいずれか
one of the defining points of a schedule network; a junction point joined to some or all of the other dependency lines,スケジュール ネットワークの定義点の 1 つ。他の依存関係線の一部またはすべてに結合された接合点
one of the parts of a compound or complex whole,化合物または複雑な全体の部分の 1 つ
one of the parts that make up a system,システムを構成する部品の一つ
one of the subsystems or combinations of subsystems that make up an overall system,システム全体を構成するサブシステムの 1 つ、またはサブシステムの組み合わせ
"one of three categories that FPA assigns to a transactional function external input, external output, and external inquiry",FPA がトランザクション機能に割り当てる 3 つのカテゴリの 1 つ、外部入力、外部出力、および外部問い合わせ
One of three earned value management types of activities used to measure work performance,仕事のパフォーマンスを測定するために使用される 3 つの達成価値管理アクティビティのうちの 1 つ
One of three EVM types of activities used to measure work performance,作業パフォーマンスの測定に使用される 3 つの EVM タイプのアクティビティのうちの 1 つ
one of two categories that FPA assigns to a data function; internal logical file and external interface file,FPA がデータ関数に割り当てる 2 つのカテゴリのうちの 1 つ。内部論理ファイルと外部インターフェースファイル
"one or more auditors conducting an audit, supported if needed by technical experts",1 人以上の監査人が監査を実施し、必要に応じて技術専門家がサポート
"one or more characters, within or attached to a set of data, that identify or describe the data",データのセット内またはデータのセットに付加された、データを識別または説明する 1 つ以上の文字
"one or more computer systems and communication systems together with associated organizational resources such as human, technical, and financial resources that provide and distribute information",1 つ以上のコンピュータ システムおよび通信システムと、情報を提供および配布する人的、技術的、財政的リソースなどの関連する組織リソース
"one or more computers, peripheral equipment, and software that perform data processing",データ処理を実行する 1 つ以上のコンピュータ、周辺機器、およびソフトウェア
"one or more data processing systems and devices, such as office and communication equipment, that perform information processing",情報処理を実行する 1 つまたは複数のデータ処理システムおよびデバイス (オフィス機器や通信機器など)
one or more indicators and their associated interpretations that address an information need,情報ニーズに対応する 1 つ以上の指標とそれに関連する解釈
one or more individuals who jointly perform a process assessment,プロセス評価を共同で実行する 1 人以上の個人
One or more iterations comprise an instance.,1 つ以上の反復がインスタンスを構成します。
one or more numerical or text values that identify characteristics of the work or in some way categorize the schedule activity that allows filtering and ordering of activities within reports,作業の特性を識別する、またはレポート内のアクティビティのフィルタリングと順序付けを可能にする何らかの方法でスケジュールアクティビティを分類する 1 つ以上の数値またはテキスト値
One or more of the specific goals of the process are not satisfied.,プロセスの特定の目標の 1 つ以上が満たされていません。
one or more properties used by an algorithm for the realization of a responsibility,責任を実現するためにアルゴリズムによって使用される 1 つまたは複数のプロパティ
one or more service operations to support life cycle activities for the SEE,SEE のライフサイクル アクティビティをサポートする 1 つ以上のサービス操作
one or more tasks submitted to the SUT in a defined sequence,定義された順序で SUT に送信される 1 つ以上のタスク
"One unit controls the initiation of this exchange, subordinating the other unit(s) to itself. Such a subordinating exchange is possible even if the subordinated unit generated the stimulus that triggered the initiating unit's behavior.",1 つのユニットがこの交換の開始を制御し、他のユニットをそれ自体に従属させます。このような従属交換は、従属ユニットが開始ユニットの行動を引き起こす刺激を生成した場合でも可能です。
one who has rights to perform repo surgery.,レポ手術を行う権利を持っている人。
one-time password,ワンタイムパスワード
one-time programming,ワンタイムプログラミング
"ongoing cycle of process improvement programs to strengthen and improve the processes supporting business and include one or several improvement projects or initiatives, which can be implemented in series or in parallel",ビジネスをサポートするプロセスを強化および改善するためのプロセス改善プログラムの継続的なサイクル。これには、直列または並行して実施できる 1 つまたは複数の改善プロジェクトまたは取り組みが含まれます。
ongoing execution of activities that produce the same product or provide a repetitive service,同じ製品を生産したり、反復的なサービスを提供したりする活動を継続的に実行すること
online function that displays an overview of entity type occurrences that possibly satisfy a certain selection criterion,特定の選択基準を満たす可能性のあるエンティティ タイプの出現の概要を表示するオンライン関数
Only quantities expressed in the same units of measurement are directly comparable. Examples of units include the number of faults and the number of failures. Hour and meter are also units of measure. Units of measurement have conventionally assigned names and symbols.,同じ測定単位で表現された量のみが直接比較可能です。単位の例には、障害の数や障害の数が含まれます。時間とメートルも測定単位です。測定単位には従来のように名前と記号が割り当てられています。
Open Distributed Processing,オープン分散処理
Open Distributed Processing Interface Definition Language,オープンな分散処理インターフェイス定義言語
Open Distributed Processing: Reference Model,オープン分散処理: 参照モデル
Open Distributed Processing: Reference Model.,オープン分散処理: 参照モデル。
Open Software Foundation,オープンソフトウェア財団
Open System Environment,オープンシステム環境
Open Systems Interconnection,オープンシステム相互接続
"Operability corresponds to controllability, (operator) error tolerance, and conformity with user expectations as defined in ISO 9241-110",操作性は、ISO 9241-110 で定義されている制御性、(オペレータ) エラー許容度、およびユーザーの期待への適合性に対応します。
operating mode which saves power when a microcontroller unit is not in active use,マイクロコントローラーユニットがアクティブに使用されていないときに電力を節約する動作モード
operating system intended to handle transaction requests immediately upon receipt,トランザクション要求を受信するとすぐに処理することを目的としたオペレーティング システム
operating system software for an embedded computer system,組み込みコンピュータ システム用のオペレーティング システム ソフトウェア
"operating systems, assemblers, utilities",オペレーティング システム、アセンブラ、ユーティリティ
"operating technique in which there are no stops between the assembling, linking, loading, and execution of a computer program",コンピュータプログラムのアセンブル、リンク、ロード、実行の間に停止がない操作技術
"operating technique in which there are no stops between the compiling, linking, loading, and execution of a computer program",コンピュータプログラムのコンパイル、リンク、ロード、実行の間に停止がない操作技術
operating technique in which there are no stops between the loading and execution phases of a computer program,コンピュータプログラムのロード段階と実行段階の間に停止がない操作技術
operating technique of a data processing system that provides for the interleaving in time of two or more processes in one processor,1 つのプロセッサーで 2 つ以上のプロセスを時間的にインターリーブするデータ処理システムの操作技術
operation interface consuming announcements carrying notifications of typed events,型指定されたイベントの通知を伝達するアナウンスを消費する操作インターフェイス
operation interface in which a computational component plays a client role,計算コンポーネントがクライアントの役割を果たす操作インターフェース
operation interface in which a computational component plays a server role,計算コンポーネントがサーバーの役割を果たす操作インターフェース
operation interface originating announcements carrying notifications of typed events,型指定されたイベントの通知を伝えるアナウンスを発信する操作インターフェイス
"operation of two information processing systems, a given one and its intended replacement, with the same application and source data, for comparison and confidence",比較と信頼性を目的とした、同じアプリケーションとソース データを使用した 2 つの情報処理システム (特定のシステムとその代替システム) の操作
operational concept,運用コンセプト
operational concept document.,運用コンセプトドキュメント。
operational fault or event or anything that could change the state of the system,動作上の障害、イベント、またはシステムの状態を変更する可能性のあるもの
operational measure of success that is closely related to the achievement of the operational objective being evaluated in the intended operational environment under a specified set of conditions,指定された一連の条件下で意図された運用環境で評価される運用目標の達成に密接に関連する運用上の成功の尺度。
Operational scenarios are used to evaluate the requirements and design of the system and to verify and validate the system.,運用シナリオは、システムの要件と設計を評価し、システムを検証および検証するために使用されます。
"operational software product that differs from similar products in terms of capability, environmental requirements, and configuration",機能、環境要件、構成の点で類似の製品とは異なる運用ソフトウェア製品
operational test,動作テスト
operational test and evaluation,動作試験と評価
operational test readiness review,運用テストの準備状況のレビュー
operational version of a system or component that incorporates a specified subset of the capabilities that the final product will provide,最終製品が提供する機能の指定されたサブセットを組み込んだシステムまたはコンポーネントの運用バージョン
"operational, in service, and in use",運用中、サービス中、使用中
operations and support,運営とサポート
"operators, recipients of the results of operating the system or software; a bank customer who visits a branch, receives a paper statement, or carries out telephone banking using a call center",オペレータ、システムまたはソフトウェアの操作結果の受信者。支店を訪れ、紙の明細を受け取るか、コールセンターを使用してテレホンバンキングを行う銀行顧客
"optical disk which can be read, but not erased or rewritten",読み取りはできるが、消去または再書き込みはできない光ディスク
optimization concept whereby the tasks in a system can be merged in a systematic way.,システム内のタスクを体系的な方法でマージできる最適化コンセプト。
optional list of unconditional actions to be executed sequentially before the first condition is examined,最初の条件が検査される前に連続して実行される無条件アクションのオプションのリスト
ORB component which moves a request from a client to the appropriate adapter for the target object,クライアントからのリクエストをターゲット オブジェクトの適切なアダプタに移動する ORB コンポーネント
order submitted to the system under test (SUT) by a user or an emulated user demanding the execution of a data processing operation according to a defined algorithm to produce specific output data from specific input data and (if requested) stored data,ユーザーまたはエミュレートされたユーザーによってテスト対象システム (SUT) に送信され、特定の入力データおよび (要求された場合) 保存されたデータから特定の出力データを生成するために、定義されたアルゴリズムに従ってデータ処理操作の実行を要求するオーダー
"ordered display or printout of data items, program statements, or other information",データ項目、プログラムステートメント、またはその他の情報の順序付けされた表示または印刷出力
ordered list of arguments used in a call to a software module,ソフトウェアモジュールの呼び出しで使用される引数の順序付きリスト
"ordered set of instructions and associated data stored in a way that is functionally independent of main storage, usually in a ROM",主記憶装置から機能的に独立した方法で、通常は ROM に保存される命令と関連データの順序付きセット
"ordered set of values, continuous or discrete, or a set of categories to which the attribute is mapped",順序付けられた値のセット (連続または離散)、または属性がマップされるカテゴリのセット
"ordering of classes, in which a subclass is a specialization of its superclass",クラスの順序付け。サブクラスはそのスーパークラスを特殊化したものです。
"ordering, interfaces, interdependencies, and other relationships among the process elements in a standard process",標準プロセスにおけるプロセス要素間の順序、インターフェース、相互依存関係、その他の関係
orderly combination of views and categories related to software.,ソフトウェアに関連するビューとカテゴリの秩序ある組み合わせ。
"orderly, documented collection of information which is pertinent to the assessment and adds to the understanding and verification of the process profiles generated by the assessment",評価に関連し、評価によって生成されたプロセスプロファイルの理解と検証を強化する、秩序ある文書化された情報の収集。
organization being audited,監査対象の組織
"organization by sources of risk (e.g., using the RBS), the area of the project affected (e.g., using the WBS), or other useful category (e.g., project phase) to determine the areas of the project most exposed to the effects of uncertainty",リスク源（例：RBS の使用）、影響を受けるプロジェクトの領域（例：WBS の使用）、またはその他の有用なカテゴリ（例：プロジェクトのフェーズ）ごとに整理して、不確実性の影響に最もさらされるプロジェクトの領域を決定します。
organization entering into an agreement,協定を結ぶ組織
organization or CASE tool that supplies or acquires SEE services,SEE サービスを提供または取得する組織または CASE ツール
organization or individual that enters into an agreement with the acquirer for the supply of a product or service,製品またはサービスの供給に関して取得者と契約を結ぶ組織または個人
"organization or part of an organization or individual that enters into an agreement with the application management organization for the supply of a product, service, materials, or human capacity",製品、サービス、資材、人材の供給に関してアプリケーション管理組織と契約を結ぶ組織、または組織の一部、または個人
organization or part of an organization that receives a service or services or products of the application management organization,アプリケーション管理組織のサービスまたは製品を受け取る組織または組織の一部
organization or person that receives a product or service,製品またはサービスを受け取る組織または個人
organization or person who buys the software package,ソフトウェア パッケージを購入する組織または個人
organization or team implementing agile development methods and approaches,アジャイル開発手法とアプローチを実装する組織またはチーム
organization responsible for operation of the website and delivery of site content to users,ウェブサイトの運営とユーザーへのサイトコンテンツの配信を担当する組織
"organization responsible for specifying the systems and software quality requirements as well as managing and implementing the quality evaluation activities through the provision of technology, tools, experiences, and management skills",システムおよびソフトウェアの品質要件を指定し、テクノロジー、ツール、経験、および管理スキルの提供を通じて品質評価活動を管理および実施する責任を負う組織
organization responsible for the platform,プラットフォームを担当する組織
organization responsible for the site content and site design,サイトのコンテンツとサイトのデザインを担当する組織
organization that manages and delivers a service or services to the customer,サービスを管理し、顧客に提供する組織
organization that performs an evaluation,評価を行う組織
organization that performs implementation tasks,実装タスクを実行する組織
organization that performs maintenance activities,保守活動を行う組織
organization that purchases goods or services with an intention of selling them to another customer and possibly supporting them.,別の顧客に販売し、場合によってはサポートすることを目的として商品やサービスを購入する組織。
"organization's overall plan of development, describing the effective use of resources in support of the organization in its future activities",組織の全体的な開発計画。将来の活動における組織をサポートするためのリソースの効果的な使用について説明します。
organizational breakdown structure.,組織内訳構造。
Organizational maturity can be measured via appraisals.,組織の成熟度は評価によって測定できます。
organizational process asset,組織プロセス資産
organizational requirements which are met by CASE tool characteristics,CASEツールの特性によって満たされる組織の要件
"organizational structure, responsibilities, procedures, processes, and resources used for implementing the maintenance plan",保守計画の実施に使用される組織構造、責任、手順、プロセス、およびリソース
organizational unit that is responsible for application management for one or more applications,1 つ以上のアプリケーションのアプリケーション管理を担当する組織単位
organized and persistent collection of data and information that allows for its retrieval,検索を可能にするデータと情報の組織的かつ永続的な収集
organized and persistent data storage that allows data retrieval,データの取得を可能にする、整理された永続的なデータ ストレージ
organized collection of structured data,組織化された構造化データのコレクション
organized process for identifying and handling risk factors,リスク要因を特定し、対処するための組織化されたプロセス
"organized, analytic process to identify what might cause harm or loss (identify risks); to assess and quantify the identified risks; and to develop and, if needed, implement an appropriate approach to prevent or handle causes of risk that could result in significant harm or loss",害や損失を引き起こす可能性のあるものを特定するための組織化された分析プロセス (リスクを特定する)。特定されたリスクを評価し、定量化する。重大な危害や損失をもたらす可能性のあるリスクの原因を防止または対処するための適切なアプローチを開発し、必要に応じて実装すること
"organized, systematic approach to determining the risk factors associated with a planned activity, project, or program",計画された活動、プロジェクト、またはプログラムに関連するリスク要因を決定するための、組織的かつ系統的なアプローチ
"original equipment manufacturer (OEM), reseller, vendor",相手先商標製品製造業者 (OEM)、再販業者、ベンダー
original equipment manufacturer.,OEMメーカー。
originating instance of the software that is used to install the software and to create distribution copies,ソフトウェアのインストールと配布コピーの作成に使用されるソフトウェアの元のインスタンス
"Other common names for characteristic entity are attributive entity and dependent entity. Each instance of a characteristic meta-entity is logically only related to one instance of one other meta-object, therefore an importer coul incorporate the meta-attributes of a characteristic meta-entity with those of the 'owning' meta-object, where the owning m object is the one to which the characteristic meta-entity is related with a cardinality of 1:1",特性エンティティの他の一般的な名前は、属性エンティティと依存エンティティです。特性メタエンティティの各インスタンスは、論理的には他の 1 つのメタオブジェクトの 1 つのインスタンスにのみ関連するため、インポーターは、特性メタエンティティのメタ属性を「所有」メタオブジェクトのメタ属性に組み込むことができます。ここで、所有する m オブジェクトは、特性メタエンティティが 1:1 のカーディナリティで関連付けられているオブジェクトです。
outcome of an event,イベントの結果
outcome of an event affecting objectives,目標に影響を与えるイベントの結果
output of a specific application engineering process (e.g. application realization) that can be exploited in other lifecycle processes of application engineering and can be adapted as a domain asset based on a product management decision,特定のアプリケーション エンジニアリング プロセス (アプリケーションの実現など) の出力。アプリケーション エンジニアリングの他のライフサイクル プロセスで利用でき、製品管理の決定に基づいてドメイン資産として適応できます。
output of creative human thought process that has some intellectual or informational value,何らかの知的価値または情報価値を持つ人間の創造的な思考プロセスの出力
output of domain engineering life cycle processes that can be reused in producing products during application engineering,アプリケーション エンジニアリング中に製品を製造する際に再利用できるドメイン エンジニアリング ライフ サイクル プロセスの出力
"output of the software development activities (e.g., document, code, or model)",ソフトウェア開発活動の出力 (ドキュメント、コード、モデルなど)
"outputs to hardware, changes to data, reports, and communication messages sent",ハードウェアへの出力、データの変更、レポート、および送信された通信メッセージ
overall plan and direction for performing design,設計を行うための全体計画と方向性
"package of evaluation technology for measuring software quality characteristics, subcharacteristics, or attributes",ソフトウェアの品質特性、部分特性、または属性を測定するための評価技術のパッケージ
"page of a website through which users typically enter the website, and whose URL is typically published or linked as the main web address of the site or organization",ユーザーが通常 Web サイトにアクセスする Web サイトのページで、その URL は通常、サイトまたは組織のメイン Web アドレスとして公開またはリンクされます。
page on a website with no link from the home page or other page on the website,ホームページまたはウェブサイト上の他のページからのリンクがないウェブサイト上のページ
page reference attached to a call arrow,呼び出し矢印に添付されたページ参照
pair comprising the transition and a mode,遷移とモードで構成されるペア
"pair of classes that are distinct, are not mutually exclusive and have a common generic ancestor class and for which neither is a generic ancestor of the other",別個であり、相互に排他的ではなく、共通のジェネリック祖先クラスを持ち、どちらも他方のジェネリック祖先ではないクラスのペア
"pair of interactions in which the first interaction is generated by a unit as a stimulus to some other unit, in expectation that a second interaction will be generated as a response from that other unit (or even a third unit) to benefit the initiating unit for a particular purpose",特定の目的のために開始ユニットに利益をもたらすために、その他のユニット (または 3 番目のユニット) からの応答として 2 番目のインタラクションが生成されることを期待して、最初のインタラクションが他のユニットへの刺激としてユニットによって生成されるインタラクションのペア。
"pair of short shallow arcs, resembling a pair of left and right parentheses characters, that bracket the arrowhead or the arrowtail of an arrow segment",矢印セグメントの矢尻または矢尻を囲む、左右の括弧文字のペアに似た、一対の短く浅い弧。
"Parameters can include the number of items that can be stored, the number of concurrent users, the communication bandwidth, throughput of transactions, and size of database.",パラメータには、保存できるアイテムの数、同時ユーザーの数、通信帯域幅、トランザクションのスループット、データベースのサイズなどを含めることができます。
"part of a computer program, often a single instruction or address, which passes control and parameters between separate modules of the program",コンピュータプログラムの一部で、多くの場合、プログラムの別々のモジュール間で制御とパラメータを渡す単一の命令またはアドレス
part of a loop that accomplishes the loop's primary purpose,ループの主な目的を達成するループの一部
part of a loop that determines whether to exit from the loop,ループを終了するかどうかを決定するループの一部
"part of a microcontroller unit that produces clock signals, adjustable through programming",クロック信号を生成するマイクロコントローラーユニットの一部で、プログラミングを通じて調整可能
part of a use case that describes its alternative implementations,代替実装を説明するユースケースの一部
part of a use case that describes its most common implementation,最も一般的な実装を説明するユースケースの一部
part of an application that provides facilities for users to carry out their tasks,ユーザーがタスクを実行するための機能を提供するアプリケーションの一部
part of an object module or load module that identifies the addresses that must be adjusted when a relocation occurs,再配置が発生したときに調整する必要があるアドレスを識別するオブジェクト モジュールまたはロード モジュールの一部
part of an organization that is the subject of measurement,測定の対象となる組織の一部
part of quality management focused on providing confidence that quality requirements will be fulfilled,品質要件が満たされるという確信を与えることに重点を置いた品質管理の一部
"part of the equipment (hardware, software and materials) for which usability is to be specified or evaluated",ユーザビリティを指定または評価する機器（ハードウェア、ソフトウェア、材料）の一部
part of the hierarchical definition of a syntax that is further decomposed in the hierarchy,階層内でさらに分解された構文の階層定義の一部
part of the hierarchical definition of a syntax that is not further decomposed in the hierarchy,階層内でさらに分解されない構文の階層定義の一部
"part of the label of a relationship that names the relationship in a way that a sentence can be formed by combining the first class name, the verb phrase, the cardinality expression, and the second class name or role name",最初のクラス名、動詞句、基数表現、および 2 番目のクラス名またはロール名を組み合わせて文を形成できる方法で関係に名前を付ける関係のラベルの一部
part of the Test Plan that describes the approach to testing for a specific test project or test sub-process or su processes,特定のテスト プロジェクト、テスト サブプロセス、または su プロセスのテストへのアプローチを説明するテスト計画の一部
partially completed software subsystem that can be extended by appropriately instantiating some specific plug-in,特定のプラグインを適切にインスタンス化することで拡張できる、部分的に完成したソフトウェア サブシステム
partially ordered set of enterprise activities that can be executed to achieve some desired end-result in pursuit of a given objective of an organization,組織の所与の目的を追求するために、何らかの望ましい最終結果を達成するために実行できる、部分的に順序付けられた一連の企業活動
participation of an entity in a relationship,関係へのエンティティの参加
particular computing system tool or CASE tool that is the focus for a description of interconnections and tool content,相互接続とツールの内容の説明に焦点を当てた特定のコンピューティング システム ツールまたは CASE ツール
particular method that will be employed to pick the particular test case values.,特定のテスト ケース値を選択するために使用される特定の方法。
"particular quantity defined and adopted by convention, with which other quantities of the same kind are compared in order to express their magnitude relative to that quantity",慣例によって定義および採用された特定の量。その量に対する大きさを表すために、同じ種類の他の量と比較されます。
"particular quantity defined and adopted by convention, with which other quantities of the same kind are compared in order to express their magnitudes relative to that quantity",慣例によって定義および採用された特定の量。その量に対する大きさを表すために、同じ種類の他の量と比較されます。
particular quantity subject to measurement,測定対象となる特定の量
particular version of a configuration item that is made available for a specific purpose,特定の目的で使用できる構成アイテムの特定のバージョン
"particularly, but not exclusively, a modeling tool. Also, tool is used as a short form for software tool, and more specifically for CASE tool.",特に、これに限定されるわけではありませんが、モデリング ツールです。また、ツールはソフトウェア ツール、より具体的には CASE ツールの短縮形として使用されます。
Parties are responsible for their actions and the actions of their agents. Parties to an agreement are called the acquirer and the supplier.,当事者は、自らの行動およびその代理人の行動に対して責任を負います。契約の当事者は取得者および供給者と呼ばれます。
"partition resulting from the functional division of a software system, where layers are organized in a hierarchy; there is only one layer at each level in the hierarchy; there is a superior/subordinate hierarchical dependency between the functional services provided by software in any two layers in the software system that exchange data directly; and the software in any two layers in the software system that exchange data interpret only part of that data identically",ソフトウェア システムの機能分割から生じるパーティション。レイヤーが階層的に編成されます。階層の各レベルには 1 つのレイヤーのみがあります。データを直接交換するソフトウェア システム内の任意の 2 つの層のソフトウェアによって提供される機能サービス間には、上位/下位の階層的な依存関係があります。データを交換するソフトウェア システム内の任意の 2 つの層のソフトウェアは、そのデータの一部のみを同様に解釈します。
"partitioning of a design into subsystems and modules, with each one handling one or more functions",設計をサブシステムとモジュールに分割し、それぞれが 1 つ以上の機能を処理すること
partitioning of a modeled function into its component functions,モデル化された関数をそのコンポーネント関数に分割する
partitioning of a supertype DataType entity into subtype entity,スーパータイプ DataType エンティティをサブタイプ エンティティに分割する
parts of the CBSS to be tested,テスト対象の CBSS の部分
"parts, materials, and processes",部品、材料、プロセス
"party that has delegated (authority, a function, etc.) to another",（権限、機能など）を他人に委任した当事者
"party that performs domain engineering activities, including domain analysis, domain design, asset construction, and asset maintenance",ドメイン分析、ドメイン設計、資産構築、資産保守などのドメインエンジニアリング活動を実行する当事者
passive interconnection in which two things agree on a common interpretation of statements (symbol arrangements) by reference to a shared thing or phenomenon,2 つのものが、共通の物または現象を参照することによってステートメント (シンボルの配置) の共通の解釈に同意する受動的な相互接続
passive interconnection in which two things agree on a set of symbols and symbol arrangements (statements) by which they will communicate,受動的な相互接続。2 つのものが通信するためのシンボルとシンボルの配置 (ステートメント) のセットに同意すること。
path that is part of a larger path,より大きなパスの一部であるパス
pathway for the propagation of information,情報を伝達する経路
peculiar reaction of a thing under given circumstances,与えられた状況下での物の特異な反応
people and processes assembled to produce a specific output (product or service),特定の成果物（製品またはサービス）を生み出すために集められた人材とプロセス
"people, objects, places, events, ideas, or combinations of things",人、物、場所、出来事、アイデア、または物事の組み合わせ
"people, places, events, ideas, things, combinations of things",人、場所、出来事、アイデア、物、物の組み合わせ
per,あたり
percentage of the set of all executable statements of a test item that are covered by a test set,テスト セットでカバーされるテスト項目のすべての実行可能ステートメントのセットの割合
"Perfective maintenance provides enhancements for users, improvement of program documentation, and recoding to improve software performance, maintainability, or other software attributes.",完全なメンテナンスでは、ソフトウェアのパフォーマンス、保守性、またはその他のソフトウェア属性を向上させるために、ユーザーに機能強化、プログラム文書の改善、および再コーディングが提供されます。
Performance deficiencies can include deficiencies in measured customer satisfaction. Deficiency data is obtainable only in environments where specific performance requirements exist.,パフォーマンスの欠陥には、測定された顧客満足度の欠陥が含まれる場合があります。欠陥データは、特定のパフォーマンス要件が存在する環境でのみ取得できます。
performance measurement baseline,パフォーマンス測定のベースライン
"performance of activities, work, or duties",活動、仕事、義務の遂行
performance relative to the amount of resources used under stated conditions,指定された条件下で使用されるリソースの量に対するパフォーマンス
"performed by an organization free from control by the supplier, developer, operator, or maintainer",サプライヤー、開発者、オペレーター、または保守担当者の制御を受けない組織によって実行される
"performed process that is planned and executed in accordance with policy; employs skilled people having adequate resources to produce controlled outputs; involves relevant stakeholders; is monitored, controlled, and reviewed; and is evaluated for adherence to its process description",ポリシーに従って計画および実行される実行プロセス。制御された出力を生成するために適切なリソースを備えた熟練した人材を雇用します。関連する利害関係者が関与する。監視、制御、およびレビューが行われます。プロセスの説明への遵守が評価されます
period during which commits are allowed for a specific branch,特定のブランチに対してコミットが許可される期間
period during which no new features are added to a specific branch,特定のブランチに新機能が追加されない期間
period during which non-critical changes to the code are not allowe,コードに対する重要でない変更が許可されない期間
period in the life cycle of a system or component during which hardware failures occur at an increasing rate due to deterioration,システムまたはコンポーネントのライフサイクルにおいて、劣化によりハードウェア障害が増加する割合で発生する期間
"period in the software life cycle during which definitions or designs for architecture, software components, interfaces, and data are created, documented, and verified to satisfy requirements",ソフトウェア ライフ サイクルにおいて、アーキテクチャ、ソフトウェア コンポーネント、インターフェイス、およびデータの定義または設計が作成、文書化され、要件を満たすために検証される期間
period of time during which a computer program is executing,コンピュータプログラムが実行されている期間
period of time during which a set of events is completed,一連のイベントが完了するまでの期間
period of time during which a system or component is being prepared for a specific operation,システムまたはコンポーネントが特定の操作のために準備されている期間
period of time during which a system or component is not operational or has been taken out of service,システムまたはコンポーネントが稼働していない、またはサービスが停止されている期間
"period of time during which a system or component is operational and in service, but not in use",システムまたはコンポーネントが稼働およびサービス中であるが、使用されていない期間
"period of time during which a system or component is operational and in service; that is, the sum of busy time and idle time",システムまたはコンポーネントが稼働し、サービスを提供している期間。つまり、忙しい時間とアイドル時間の合計です
period of time for which an object displays a particular behavior,オブジェクトが特定の動作を示す期間
period of time in the life cycle of a system or component during which hardware failures occur at a decreasing rate as problems are detected and repaired,システムまたはコンポーネントのライフサイクルのうち、問題が検出され修復されるにつれてハードウェア障害の発生率が減少する期間
period of time in the life cycle of a system or component during which hardware failures occur at an approximately uniform rate,システムまたはコンポーネントのライフサイクルにおいて、ハードウェア障害がほぼ一定の割合で発生する期間
period of time in the software life cycle during which a software product is created from design documentation and debugged,ソフトウェア ライフ サイクルのうち、ソフトウェア製品が設計ドキュメントから作成され、デバッグされる期間
"period of time in the software life cycle during which a software product is employed in its operational environment, monitored for satisfactory performance, and modified as necessary to correct problems or to respond to changing requirements",ソフトウェア ライフ サイクルのうち、ソフトウェア製品が運用環境で使用され、満足のいくパフォーマンスが得られるか監視され、問題を修正したり要件の変化に対応するために必要に応じて修正される期間。
period of time in the software life cycle during which a software product is integrated into its operational environment and tested in this environment to ensure that it performs as required,ソフトウェア ライフ サイクルのうち、ソフトウェア製品が運用環境に統合され、要求どおりに動作することを確認するためにこの環境でテストされる期間
period of time in the software life cycle during which support for a software product is terminated,ソフトウェア製品のサポートが終了するソフトウェアライフサイクルの期間
period of time in the software life cycle during which the basic version of a software product is adapted to a specified set of operational environments and is distributed to a customer base,ソフトウェア製品の基本バージョンが指定された一連の運用環境に適応され、顧客ベースに配布されるソフトウェア ライフ サイクルの期間
"period of time in the software life cycle during which the components of a software product are evaluated and integrated, and the software product is evaluated to determine whether or not requirements have been satisfied2. specific instantiation of test sub-process",ソフトウェア製品のコンポーネントが評価および統合され、要件が満たされているかどうかを判断するためにソフトウェア製品が評価される、ソフトウェア ライフ サイクルの期間。2テストサブプロセスの特定のインスタンス化
period of time in the software life cycle during which the requirements for a software product are defined and documented,ソフトウェア製品の要件が定義され、文書化されるソフトウェアライフサイクルの期間
period of time in the system life cycle during which the user needs are identified and system concepts are described and evaluated,システムのライフサイクルのうち、ユーザーのニーズが特定され、システムの概念が説明および評価される期間
period of time that begins with the decision to acquire a software product and ends when the product is no longer available for use.,ソフトウェア製品の購入を決定した時点から始まり、製品が使用できなくなった時点で終了する期間。
period of time that begins with the decision to develop a software product and ends when the software is delivered,ソフトウェア製品の開発決定から始まり、ソフトウェアの納品までの期間
period of time that begins with the decision to develop a system and ends when the system is delivered to its end user,システム開発の決定から始まり、システムがエンドユーザーに納品されるまでの期間
period that begins when a system is conceived and ends when the system is no longer available for use,システムが考案されたときに始まり、システムが使用できなくなったときに終了する期間
period within the life cycle of an entity that relates to the state of its description or realization,エンティティのライフサイクル内の、その記述または実現の状態に関連する期間
"permanent copy of a display image generated on an output unit such as a printer or a plotter, and which can be carried away",プリンタやプロッタなどの出力装置で生成され、持ち運ぶことができる表示イメージの永久コピー
permanent removal of a system or component from its operational environment,システムまたはコンポーネントを運用環境から永久に削除すること
persistent state definition language,永続状態定義言語
person (or instance) who uses the functions of a CBSS via a terminal (or an equivalent machine-user-interface) by submitting tasks and receiving the computed results,タスクを送信して計算結果を受け取ることによって、端末 (または同等のマシン ユーザー インターフェイス) 経由で CBSS の機能を使用する人 (またはインスタンス)
"person (or persons) or organization (or organizations) responsible for approving activities, artifacts, and other aspects of the system during its life cycle",ライフサイクル中のシステムのアクティビティ、アーティファクト、その他の側面の承認に責任を負う個人または組織
person (or team) responsible for defining and maintaining a process,プロセスの定義と維持を担当する人（またはチーム）
person designing or developing user documentation,ユーザードキュメントを設計または開発する人
person in charge of the version control system's repository,バージョン管理システムのリポジトリの責任者
"person or a group of people and facilities with an arrangement of responsibilities, authorities and relationships to achieve its objectives",目的を達成するために責任、権限、および関係を取り決めた個人または人々のグループおよび施設
"person or body that is recognized as being independent of the parties involved, as concerns the issue in question",問題となっている問題に関して、関係当事者から独立していると認められる個人または団体
person or entity working with a software licensor or another person/entity within the channel who facilitates the sale of software to the end-user,ソフトウェアライセンサーと協力する個人または団体、またはエンドユーザーへのソフトウェアの販売を促進するチャネル内の別の個人/団体
person or group of people who assumes legal responsibility for conducting or controlling an organization at the highest level,最高レベルで組織を運営または管理する法的責任を負う個人または人々のグループ
person or group responsible to the website owner for ongoing maintenance of the site's presentation and availability,サイトの表示と可用性の継続的なメンテナンスについて、Web サイト所有者に対して責任を負う個人またはグループ
person or group that has primary responsibility for creating and maintaining the software life cycle process (SLCP),ソフトウェア ライフ サイクル プロセス (SLCP) の作成と維持に主な責任を持つ個人またはグループ
person or organization granted a license to use a specific software product,特定のソフトウェア製品を使用するライセンスを付与された個人または組織
person or organization responsible for defining integrity levels and integrity level requirements,整合性レベルおよび整合性レベル要件の定義を担当する個人または組織
"person or organization that acquires or procures a system, software product, or software service (which can be part of a system) from a supplier",システム、ソフトウェア製品、またはソフトウェア サービス (システムの一部である場合もある) をサプライヤーから取得または調達する個人または組織
person or organization that conducts benchmarking activity,ベンチマーク活動を行う個人または組織
person or organization that could or does receive a product or a service that is intended for or required by this person or organization,この個人または組織を対象とした、またはその個人または組織が要求する製品またはサービスを受け取ることができる、または実際に受け取ることができる個人または組織
person or organization that creates a software product or package,ソフトウェア製品またはパッケージを作成する個人または組織
person or organization that has both the ability and authority to start a project,プロジェクトを開始する能力と権限の両方を持つ個人または組織
person or organization that is responsible for developing and maintaining a specific certification scheme,特定の認証スキームの開発と維持に責任を負う個人または組織
person or organization that is responsible for the design of the product,製品の設計に責任を負う個人または組織
person or organization that maintains and administrates data in a repository,リポジトリ内のデータを維持および管理する個人または組織
person or organization that manufactures a software product,ソフトウェア製品を製造する個人または組織
person or organization that owns and maintains a benchmarking repository,ベンチマーク リポジトリを所有および維持する個人または組織
person or organization that owns the copyright for the Candidate FSM method,候補 FSM メソッドの著作権を所有する個人または組織
person or organization that provides IT project data to be included into a benchmarking repository,ベンチマーク リポジトリに含める IT プロジェクト データを提供する個人または組織
person or organization that requests an evaluation,評価を要求する個人または組織
person or organization that requires the evaluation to be performed and provides financial or other resources to carry it out,評価の実行を要求し、評価を実行するための財政的またはその他のリソースを提供する個人または組織
person or organization that utilizes the outcome of benchmarking,ベンチマークの結果を利用する個人または組織
person or organization who owns or holds the rights to issue a software license for a specific software package,特定のソフトウェア パッケージのソフトウェア ライセンスを発行する権利を所有または保持している個人または組織
"person or persons who provide the policy and overall guidance for the process, but do not provide the direct day to-day monitoring and controlling of the proces",プロセスのポリシーと全体的なガイダンスを提供するが、プロセスの日常的な監視と制御を直接提供しない人
person or persons who will ultimately be using the system for its intended purpose,最終的にシステムを意図された目的で使用することになる個人
person or persons with overall responsibility for the capabilities and quality of a product,製品の機能と品質に対して全体的な責任を負う人
person responsible for coordinating development toward a release,リリースに向けて開発を調整する責任者
"person responsible for establishing, controlling, and maintaining a software development library",ソフトウェア開発ライブラリの確立、管理、保守の責任者
person responsible for providing a documentation developer with technical information about a software product or for checking the technical accuracy of drafts of documentation,ドキュメント開発者にソフトウェア製品に関する技術情報を提供する、またはドキュメントの草案の技術的正確性をチェックする責任を負う人
"person who applies a methodology for some specific job, usually an endeavor",特定の仕事、通常は努力に方法論を適用する人
person who conducts an audit,監査を行う人
person who creates software,ソフトウェアを作る人
person who derives engineering value through interaction with a CASE tool,CASEツールとの対話を通じてエンジニアリング価値を引き出す人
"person who designs, builds, extends and maintains methodologies",方法論を設計、構築、拡張、保守する人
person who directly uses the system for its intended purpose,システムを本来の目的のために直接使用する人
person who facilitates the scrum process within a team or project,チームまたはプロジェクト内のスクラムプロセスを促進する人
"person who interacts with a system, product or service",システム、製品、またはサービスと対話する人
person who interacts with the product to support the primary users,主要ユーザーをサポートするために製品を操作する人
"person who leads the activities of an appraisal and has satisfied qualification criteria for experience, knowledge, and skills defined by the appraisal method",評価業務を主導し、評価方法に定められた経験、知識、技能の資格基準を満たした者
person who performs one or more tasks with software; a member of a specific audience,ソフトウェアを使用して 1 つ以上のタスクを実行する人。特定の聴衆のメンバー
"person who receives output from a system, but does not interact with the system",システムから出力を受け取るが、システムと対話しない人
person with overall responsibility for the management and running of a project,プロジェクトの管理と実行に対する全体的な責任を持つ人
"person, team, or organization responsible for systems architecture",システム アーキテクチャを担当する個人、チーム、または組織
person's authority to commit changes,変更をコミットする個人の権限
"person's perceptions and responses that result from the use or anticipated use of a product, system or service",製品、システム、またはサービスの使用または使用が予想されることから生じる人の認識と反応
person(s) or group designated to be responsible for assuring that configuration management activities are planned and carried out,構成管理活動が計画および実行されることを保証する責任を負うように指定された個人またはグループ
personal identification number,暗証番号
"Personal needs can include needs to acquire new knowledge and skills, to communicate personal identity and to provoke pleasant memories.",個人的なニーズには、新しい知識やスキルを習得したい、個人のアイデンティティを伝えたい、楽しい思い出を呼び起こしたいというニーズが含まれます。
personally identifiable information,個人を特定できる情報
personnel efforts that are directly related to the units of production,生産単位に直接関係する人的努力
"persons or groups that are not directly related to the acquisition or use of the product, but, who can affect the course of the project, positively or negatively, due to their position in the customer organization",製品の取得や使用には直接関係しないが、顧客組織内での立場により、プロジェクトの進行にプラスまたはマイナスの影響を与える可能性がある個人またはグループ
"perspective of a potential acquirer who does not own either an existing system nor its proposed replacement, and who evaluates the alternatives of buying the existing system at its salvage value or buying a replacement candidate system",既存システムもその代替案も所有しておらず、既存システムを残存価格で購入するか代替候補システムを購入するかの選択肢を評価する潜在的な買収者の視点
"pertaining to a computer system, device, program, or document designed with ease of use as a primary objective",使いやすさを主な目的として設計されたコンピュータ システム、デバイス、プログラム、またはドキュメントに関するもの
pertaining to a device or process that is not under the direct control of the central processing unit of a computer,コンピュータの中央処理装置の直接制御下にないデバイスまたはプロセスに関するもの
pertaining to a device or process that is under the direct control of the central processing unit of a computer,コンピュータの中央処理装置の直接制御下にあるデバイスまたはプロセスに関するもの
"pertaining to a device, process, or channel involved in receiving data from an external source",外部ソースからのデータ受信に関与するデバイス、プロセス、またはチャネルに関するもの
"pertaining to a device, process, or channel involved in transmitting data to an external destination",外部宛先へのデータ送信に関与するデバイス、プロセス、またはチャネルに関するもの
pertaining to a flow of data or control from a subordinate module to a superordinate module in a software system,ソフトウェア システムの下位モジュールから上位モジュールへのデータまたは制御の流れに関するもの
pertaining to a flow of data or control from a superordinate module to a subordinate module in a software system,ソフトウェア システムにおける上位モジュールから下位モジュールへのデータまたは制御の流れに関するもの
"pertaining to a functional unit that appears to be real, but whose functions are accomplished by other means",本物のように見えるが、その機能が他の手段によって達成される機能単位に関するもの
"pertaining to a hardware or software system delivered in a complete, operational state",完全な動作状態で提供されるハードウェアまたはソフトウェア システムに関するもの
pertaining to a method or procedure that starts at the highest level of abstraction and proceeds towards the lowest level,最高レベルの抽象化から始まり、最低レベルに向かって進むメソッドまたは手順に関するもの
pertaining to a method or procedure that starts at the lowest level of abstraction and proceeds towards the highest level,最低レベルの抽象化から始まり、最高レベルに向かって進むメソッドまたは手順に関するもの
pertaining to a process or data structure that is defined or generated in terms of itself,それ自体に関して定義または生成されるプロセスまたはデータ構造に関するもの
"pertaining to a process or equipment that, under specified conditions, functions without human intervention",指定された条件下で人間の介入なしに機能するプロセスまたは装置に関するもの
pertaining to a software module or other work product that can be used in more than one computer program or software system,複数のコンピュータ プログラムまたはソフトウェア システムで使用できるソフトウェア モジュールまたはその他の成果物に関するもの
pertaining to a software module that calls itself,それ自体を呼び出すソフトウェア モジュールに関するもの
pertaining to a software module that can be entered as part of one process while also in execution as part of another process and still achieve the desired results,あるプロセスの一部として入力でき、同時に別のプロセスの一部として実行することもでき、望ましい結果を達成できるソフトウェア モジュールに関するもの
pertaining to a system or component in which no failures are produced from a prescribed set of faults,所定の一連の障害によって障害が発生しないシステムまたはコンポーネントに関するもの
pertaining to a system or component that automatically places itself in a safe operating mode in the event of a failure,障害が発生した場合に自動的に安全な動作モードに移行するシステムまたはコンポーネントに関するもの
pertaining to a system or component that continues to provide partial operational capability in the event of certain failures,特定の障害が発生した場合でも部分的な運用機能を提供し続けるシステムまたはコンポーネントに関するもの
pertaining to a system or component that is able to continue normal operation despite the presence of faults,障害が存在するにもかかわらず、通常の動作を継続できるシステムまたはコンポーネントに関するもの
pertaining to a system or component that is installed in its intended environment,意図された環境にインストールされたシステムまたはコンポーネントに関するもの
pertaining to a system or component that is not operational or has been taken out of service,稼働していない、またはサービスが停止されているシステムまたはコンポーネントに関するもの
pertaining to a system or component that is operational and in service,稼働中でサービス中のシステムまたはコンポーネントに関するもの
"pertaining to a system or component that is operational and in service, but not in use",稼働中でサービス中であるが、使用されていないシステムまたはコンポーネントに関するもの
"pertaining to a system or component that is operational, in service, and in use",稼働中、サービス中、および使用中のシステムまたはコンポーネントに関するもの
pertaining to a system or component that is ready for use in its intended environment,意図された環境ですぐに使用できるシステムまたはコンポーネントに関するもの
"pertaining to a system or mode of operation in which computation is performed during the actual time that an external process occurs, in order that the computation results can be used to control, monitor, or respond in a timely manner to the external process",外部プロセスの制御、監視、または外部プロセスへのタイムリーな応答に計算結果を使用できるように、外部プロセスが発生する実際の時間中に計算が実行されるシステムまたは動作モードに関するもの
pertaining to a system or mode of operation in which each user entry causes a response from or action by the system,各ユーザー入力がシステムからの応答またはシステムによるアクションを引き起こすシステムまたは動作モードに関するもの
pertaining to a system or mode of operation in which input data enter the computer directly from the point of origin or output data are transmitted directly to the point where they are used,入力データが発信元から直接コンピュータに入力されるか、出力データが使用される場所に直接送信されるシステムまたは動作モードに関するもの
"pertaining to a system or mode of operation in which inputs are collected and processed all at one time, rather than being processed as they arrive, and a job, once started, proceeds to completion without additional input or user interaction",入力が到着したときに処理されるのではなく、入力が一度にすべて収集および処理され、ジョブが開始されると、追加の入力やユーザーの操作なしで完了まで進むシステムまたは動作モードに関係します。
pertaining to a system or mode of operation in which the user directs the system through commands,ユーザーがコマンドを通じてシステムに指示するシステムまたは動作モードに関するもの
pertaining to a system or mode of operation in which the user directs the system through menu selections,ユーザーがメニュー選択を通じてシステムを指示するシステムまたは動作モードに関するもの
pertaining to a technique or process in which a computer does part of the work,コンピュータが作業の一部を実行する技術またはプロセスに関するもの
pertaining to an activity that starts with the highest-level component of a hierarchy and proceeds through progressively lower-levels,階層の最上位コンポーネントから始まり、徐々に下位レベルに進むアクティビティに関係する
pertaining to an activity that starts with the lowest-level components of a hierarchy and proceeds through progressively higher-levels,階層の最下位レベルのコンポーネントから始まり、徐々に上位レベルに進むアクティビティに関係する
pertaining to an approach that treats a system or component as in (1),システムまたはコンポーネントを (1) のように扱うアプローチに関するもの
"pertaining to an approach that treats a system or component whose inputs, outputs, and general function are known but whose contents or implementation are unknown or irrelevant",入力、出力、および一般的な機能はわかっているが、その内容や実装が不明または無関係であるシステムまたはコンポーネントを扱うアプローチに関するもの
pertaining to an event or process that occurs during computer program execution,コンピュータープログラムの実行中に発生するイベントまたはプロセスに関するもの
pertaining to an event or process that occurs without computer program execution,コンピュータープログラムの実行なしに発生するイベントまたはプロセスに関するもの
pertaining to an expression that contains two or more different data types,2 つ以上の異なるデータ型を含む式に関するもの
pertaining to an interactive system or mode of operation in which the interaction between the user and the system resembles a human dialog,ユーザーとシステム間の対話が人間の対話に似ている対話型システムまたは操作モードに関するもの
pertaining to any of a set of structure-based metrics that measure the attribute in (1),(1) の属性を測定する一連の構造ベースのメトリックのいずれかに関連する
pertaining to code that can be loaded into any part of main memory,メインメモリの任意の部分にロードできるコードに関するもの
"pertaining to continuously variable physical quantities or to data presented in a continuous form, as well as to processes and functional units that use the data",連続的に変化する物理量、または連続形式で表現されるデータ、およびそのデータを使用するプロセスおよび機能単位に関するもの
pertaining to data in a form that can be automatically input to a computer,コンピュータに自動的に入力できる形式のデータに関するもの
"pertaining to data that consist of distinct elements, such as characters, or to physical quantities having a finite number of distinctly recognizable values, as well as to processes and functional units that use those data",文字などの個別の要素で構成されるデータ、または明確に認識できる有限数の値を持つ物理量、およびそれらのデータを使用するプロセスおよび機能単位に関するもの
pertaining to data that consists of digits as well as to processes and functional units that use the data,数字で構成されるデータと、そのデータを使用するプロセスおよび機能単位に関するもの
"pertaining to data that consists of letters, digits, and usually other characters, such as punctuation marks, as well as to processes and functional units that use the data",文字、数字、および通常は句読点などのその他の文字で構成されるデータ、およびデータを使用するプロセスおよび機能単位に関するもの
pertaining to data that consists of numerals as well as functional units that use the data,数値から構成されるデータおよびそのデータを使用する機能単位に関するもの
pertaining to data transmitted to an external destination7. to transmit data to an external destination,外部宛先に送信されるデータに関するもの7.外部宛先にデータを送信する
pertaining to ease and convenience of use by humans,人間による使いやすさと利便性に関するもの
pertaining to hardware or software that is capable of performing its function without being connected to other components,他のコンポーネントに接続せずにその機能を実行できるハードウェアまたはソフトウェアに関するもの
pertaining to hardware or software that is compatible with a later or more complex version of itself,それ自体の新しいバージョンまたはより複雑なバージョンと互換性のあるハードウェアまたはソフトウェアに関するもの
pertaining to hardware or software that is compatible with an earlier or less complex version of itself,それ自体の以前のバージョンまたはそれほど複雑ではないバージョンと互換性のあるハードウェアまたはソフトウェアに関するもの
"pertaining to software that does not rely on features unique to a particular type of computer, and therefore executes on computers of more than one type",特定の種類のコンピュータに固有の機能に依存しないため、複数の種類のコンピュータ上で実行されるソフトウェアに関するもの
pertaining to software that relies on features unique to a particular type of computer and therefore executes only on computers of that type,特定のタイプのコンピュータに固有の機能に依存するため、そのタイプのコンピュータでのみ実行されるソフトウェアに関するもの
"pertaining to source code that contains comments explaining its objectives, operation, and other information useful in understanding and maintaining the code",コードの目的、操作、およびコードの理解と保守に役立つその他の情報を説明するコメントを含むソース コードに関するもの
pertaining to the detection and isolation of faults or failures,障害や故障の検出と隔離に関するもの
pertaining to the environment in which a system or component is intended to be used.,システムまたはコンポーネントの使用が意図されている環境に関するもの。
"pertaining to the occurrence of two or more activities within the same interval of time, achieved either by interleaving the activities or by simultaneous execution",同じ時間間隔内での 2 つ以上のアクティビティの発生を指し、アクティビティをインターリーブするか、同時に実行することによって実現されます。
pertaining to the occurrence of two or more events at the same instant of time,同時に発生する 2 つ以上の出来事に関するもの
pertaining to the occurrence of two or more events or activities in such a manner that one must finish before the next begins,次のイベントが始まる前に 1 つを終了しなければならないような 2 つ以上のイベントまたは活動の発生に関すること
"pertaining to the occurrence of two sequential events or items without the intervention of any other event or item; that is, one immediately after the other",他のイベントやアイテムの介入なしに 2 つの連続したイベントやアイテムが発生することを指します。つまり、次々と
"pertaining to the operation of a functional unit that takes place either independently of, or in parallel with, the main operation of a computer",コンピュータの主な動作とは独立して、またはそれと並行して行われる機能単位の動作に関するもの
pertaining to the operation of a functional unit when under the control of a computer,コンピュータの制御下にあるときの機能単位の動作に関するもの
"pertaining to the sequential transfer, occurrence, or processing of the individual parts of a whole, such as the bits of a character, using the same facilities for successive parts",連続する部分に対して同じ機能を使用する、文字のビットなど、全体の個々の部分の逐次的な転送、発生、または処理に関するもの
"pertaining to the simultaneous transfer, occurrence, or processing of the individual parts of a whole, such as the bits of a character, using separate facilities for the various parts",さまざまな部分に個別の機能を使用して、文字のビットなど、全体の個々の部分を同時に転送、発生、または処理することを指します。
"pertaining to the study of errors, faults, and failures, and of methods for enabling systems to continue normal operation in the presence of faults",エラー、障害、障害の研究、および障害が存在する場合でもシステムが通常の動作を継続できるようにする方法の研究に関係します。
pertaining to two or more processes that depend upon the occurrence of specific events such as common timing,共通のタイミングなどの特定のイベントの発生に依存する 2 つ以上のプロセスに関連する
pertaining to two or more processes that do not depend upon the occurrence of specific events such as common timing,共通のタイミングなどの特定のイベントの発生に依存しない 2 つ以上のプロセスに関するもの
Petri Net,ペトリネット
Petri Net comprising a net graph with positive integers associated with arcs and an initial marking function which associates a natural number of simple tokens ('black dots') with places,円弧に関連付けられた正の整数を含むネット グラフと、自然数の単純なトークン (「黒い点」) を場所に関連付けた初期マーキング関数で構成されるペトリ ネット
Petri Net Markup Language,ペトリネットマークアップ言語
phase of a project in which a system is put into operation and cutover issues are resolved,システムが稼働し、カットオーバーの問題が解決されるプロジェクトのフェーズ
phase of development concerned with determining what documentation will be provided in a product and the nature of the documentation,製品にどのようなドキュメントを提供するか、およびドキュメントの性質を決定することに関係する開発段階
"photograph, drawing",写真、絵
"phrase used to name a relationship, which consists of a verb and words that constitute the object of the phrase",関係に名前を付けるために使用されるフレーズ。フレーズの目的語を構成する動詞と単語で構成されます。
physical configuration audit,物理構成の監査
"physical equipment used to process, store, or transmit computer programs or data2. all or part of the physical components of an information system",コンピュータ プログラムまたはデータを処理、保存、または送信するために使用される物理装置2.情報システムの物理コンポーネントのすべてまたは一部
physical interaction mechanism allowing the action of one thing to cause a change or to stimulate an action in another thing,ある物の作用によって変化を引き起こしたり、別の物の作用を刺激したりすることを可能にする物理的相互作用メカニズム
physical means or equipment for facilitating the performance of an action,行為の実行を容易にするための物理的な手段または装置
physical or functional manifestation of a failure,障害の物理的または機能的兆候
physical or logical layout of the components of a system design and their internal and external connections,システム設計のコンポーネントの物理的または論理的なレイアウトとその内部および外部接続
"physical or logical relationship among data elements, designed to support specific data manipulation functions",データ要素間の物理的または論理的な関係。特定のデータ操作機能をサポートするように設計されています。
"physical organization of source code including the use of white space, grouping, blank lines, alignment, indentation, and parentheses",空白スペース、グループ化、空行、配置、インデント、括弧の使用を含むソース コードの物理的な構成
"physical requirements, performance requirements, software development standards, and software quality assurance (SQA) standards",物理的要件、パフォーマンス要件、ソフトウェア開発標準、およびソフトウェア品質保証 (SQA) 基準
"picture, drawing, block diagram, description, icon, symbol",画像、図面、ブロック図、説明、アイコン、シンボル
"piece of software that resides in the same layer as, and exchanges data with, another piece of software",別のソフトウェアと同じ層に存在し、データを交換するソフトウェア
piece or complex of apparatus serving to perform one particular function,ある特定の機能を実行する装置の一部または複合体
"pipes and filters, layers, rule-based systems, and blackboard",パイプとフィルター、レイヤー、ルールベースのシステム、黒板
place connected to the transition by an input arc,入力アークによってトランジションに接続された場所
place connected to the transition by an output arc,出力アークによってトランジションに接続されている場所
place in a software module at which the module is reentered following a call to another module,別のモジュールの呼び出しに続いてモジュールが再入力されるソフトウェア モジュール内に配置します。
Place/Transition net,プレイス/トランジションネット
Place/Transition Net Graph,配置・遷移ネットグラフ
"plan for dealing with a risk factor, if it becomes a problem",リスク要因が問題になった場合の対処計画を立てる
"plan for guiding, implementing, and controlling the design and development of one or more products or services",1 つまたは複数の製品またはサービスの設計と開発を指導、実装、および管理するための計画
plan identifying the documents to be produced during the system or software life cycle,システムまたはソフトウェアのライフサイクル中に作成されるドキュメントを特定する計画
plan that describes what portions of system functionality will be implemented in which releases and the rationale for each release,システム機能のどの部分がどのリリースに実装されるか、および各リリースの理論的根拠を説明する計画
"plan that establishes detailed requirements, criteria, general methodology, responsibilities, and general planning for test and evaluation of a system",システムのテストと評価のための詳細な要件、基準、一般的な方法論、責任、および一般的な計画を確立する計画
Plan-Do-Check-,Plan-Do-Check-
"plan, usually resulting from appraisals, that documents how specific improvements targeting the weaknesses uncovered by an appraisal will be implemented",通常は評価から得られる計画で、評価によって明らかになった弱点を対象とした具体的な改善をどのように実施するかを文書化します。
planned and controlled storage of information pertinent to the systems engineering effort,システムエンジニアリング作業に関連する情報の計画的かつ管理された保管
planned process of interviews of representative users and analysis of interview records and personnel records,代表ユーザーへのインタビューとインタビュー記録および人事記録の分析の計画的なプロセス
planned value,計画値
"planning, design, development, deployment, operation, management, and application of IT to meet the needs of the organization",組織のニーズを満たすためのITの計画、設計、開発、展開、運用、管理、適用
"planning, estimating, monitoring, reporting, control and completion of test activities",テスト活動の計画、推定、監視、報告、管理および完了
"plans, processes, policies, procedures and knowledge bases, specific to and used by the performing organization",実行組織に固有であり、実行組織によって使用される計画、プロセス、ポリシー、手順、および知識ベース
plastic leaded chip carrier,プラスチック有鉛チップキャリア
platform independent model,プラットフォーム非依存モデル
platform-specific model,プラットフォーム固有のモデル
"PNML Document that contains one or more net graphs, where all net graphs conform to high-level Petri net",1 つ以上のネット グラフを含む PNML ドキュメント。すべてのネット グラフは高レベルのペトリ ネットに準拠します。
"PNML document that contains one or more net graphs, where all net graphs conform to place/transition nets",1 つ以上のネット グラフを含む PNML ドキュメント。すべてのネット グラフは配置/遷移ネットに準拠します。
"PNML Document that contains one or more net graphs, where all net graphs conform to symmetric nets",1 つ以上のネット グラフを含む PNML ドキュメント。すべてのネット グラフは対称ネットに準拠します。
point at which either a root arrow segment divides into branching arrow segments or arrow segments join into a root arrow segment,根元の矢印セグメントが枝分かれする矢印セグメントに分かれるか、または矢印セグメントが根元の矢印セグメントに結合する点
"point at which processing has been fully executed, the Functional User Requirement has been satisfied, and there is nothing more to be done",処理が完全に実行され、機能ユーザー要件が満たされ、それ以上何もする必要がない時点
point in a computer program at which execution can be restarted following a failure,失敗後に実行を再開できるコンピュータープログラム内のポイント
point in a computer program at which execution can be suspended to permit manual or automated monitoring of program performance or results,プログラムのパフォーマンスや結果を手動または自動で監視できるように実行を一時停止できるコンピュータ プログラム内の点
point in a computer program at which one of two or more alternative sets of program statements is selected for execution,コンピューター プログラム内で、プログラム ステートメントの 2 つ以上の代替セットのうち 1 つが実行のために選択されるポイント
"point in a computer program at which program state, status, or results are checked or recorded",プログラムの状態、ステータス、結果がチェックまたは記録されるコンピュータ プログラム内のポイント
point in a software module at which execution of the module can begin,モジュールの実行を開始できるソフトウェアモジュール内のポイント
point in a software module at which execution of the module can terminate2. data movement that moves a data group from a functional process across the boundary to the functional user that requires it,モジュールの実行を終了できるソフトウェア モジュール内のポイント2.データ移動: データ グループを機能プロセスから境界を越えて、それを必要とする機能ユーザーに移動すること
point in a test item at which execution of the test item can begin,テスト項目の実行を開始できるテスト項目内のポイント
Point of Control and Observation,制御と監視のポイント
point on a scale of achievement of a process quality characteristic derived from the process attribute ratings for an assessed process,評価されたプロセスのプロセス属性評価から導出されるプロセス品質特性の達成スケール上のポイント
point on an ordinal scale of organizational process maturity that characterizes the maturity of the organizational unit assessed in the scope of the maturity model used,使用される成熟度モデルの範囲内で評価される組織単位の成熟度を特徴付ける、組織プロセスの成熟度の順序尺度上の点
point on the six-point ordinal scale of process capability that represents the capability of the process,工程能力を表す 6 段階の工程能力の順序尺度上の点
point where the recoverability of the system under test (SUT) is tested by injecting a disturbance while a workload is being run,ワークロードの実行中に外乱を注入することによって、テスト対象システム (SUT) の回復可能性がテストされるポイント
"policies, plans, process descriptions, procedures, service level agreements, contracts or records. In software engineering: project plans, specifications, test plans, user manuals",ポリシー、計画、プロセスの説明、手順、サービス レベル アグリーメント、契約、または記録。ソフトウェアエンジニアリング: プロジェクト計画、仕様、テスト計画、ユーザーマニュアル
"political, economic, social, technological, environmental, and legal",政治、経済、社会、技術、環境、法律
pop-up help and help text on a scree,ポップアップヘルプと画面上のヘルプテキスト
Portable Network Graphics,ポータブルネットワークグラフィックス
portable object adapter,ポータブルオブジェクトアダプター
portion of a computer program that is named and that performs a specific action,名前が付けられ、特定のアクションを実行するコンピューター プログラムの部分
portion of a contract payment that is withheld until contract completion to ensure full performance of the contract terms,契約条件の完全な履行を保証するために、契約が完了するまで保留される契約支払いの一部
"portion of an STL sentence that describes and characterizes an attribute of, or a relationship for, a software behavior concept",ソフトウェア動作概念の属性または関係を説明および特徴付ける STL 文の一部
portion of main storage that can be accessed by two or more modules in a software system,ソフトウェア システム内の 2 つ以上のモジュールからアクセスできる主記憶域の部分
portion of main storage that is unused when the last page of data or of a computer program does not fill the entire block of storage allocated to it,データまたはコンピュータ プログラムの最後のページが、割り当てられたストレージのブロック全体を満たしていない場合に使用されない主記憶域の部分
portion of the entire software life cycle applicable to a specific project.,ソフトウェア ライフ サイクル全体のうち、特定のプロジェクトに適用される部分。
"portion of the overall work breakdown structure applicable to a contract, developed and maintained by the supplier",契約に適用される全体的な作業分解構造の一部であり、サプライヤーによって開発および維持されます。
"Portions of a user's program and data are placed in auxiliary storage, and the operating system automatically swaps them in and out of main storage as needed.",ユーザーのプログラムとデータの一部は補助記憶装置に配置され、オペレーティング システムは必要に応じてそれらを主記憶装置との間で自動的に入れ替えます。
possible function point count in an early phase of an application's life cycle to determine the size of an application or a project in which certain minimum specifications are assumed,特定の最小仕様が想定されるアプリケーションまたはプロジェクトのサイズを決定するために、アプリケーションのライフサイクルの初期段階で考えられるファンクション ポイントの数
"Possible synonyms of target entity are input to information product and work product. Examples of target entities are architecture, contextual schema, conceptual and logical and physical data models, data dictionary, document, data file, database management, relational database management system, form, and presentation device. Target entities are precisely defined by properties. Examples of properties are attribute, element, information, metadata, vocabulary, data format, data item, data value, information item, information item content, and data record.",ターゲットエンティティの可能な同義語が情報製品と作業成果物に入力されます。ターゲット エンティティの例としては、アーキテクチャ、コンテキスト スキーマ、概念的および論理的および物理的なデータ モデル、データ ディクショナリ、ドキュメント、データ ファイル、データベース管理、リレーショナル データベース管理システム、フォーム、プレゼンテーション デバイスなどがあります。ターゲット エンティティはプロパティによって正確に定義されます。プロパティの例としては、属性、要素、情報、メタデータ、語彙、データ形式、データ項目、データ値、情報項目、情報項目の内容、データ レコードなどがあります。
possible value or structure of values that can be retained or processed,保持または処理できる値または値の構造
"potential loss presented to an individual, project, or organization by a risk",リスクによって個人、プロジェクト、または組織に与えられる潜在的な損失
"potential problem that would be detrimental to a planned activity, project, or program, characterized by the probability of problem occurrence (0 _ p _ 1) and a potential loss (of life, money, property, reputation, and so on) if the problem occurs",計画された活動、プロジェクト、またはプログラムに有害となる潜在的な問題。問題が発生する確率 (0_p_1) と、問題が発生した場合の潜在的な損失 (生命、金銭、財産、評判など) によって特徴付けられます。
"practical advantage or intended effect, expressed as preferences about future states.",実際の利点または意図された効果。将来の状態に関する好みとして表現されます。
"practice of reuse according to a well-defined, repeatable process",明確に定義された反復可能なプロセスに従った再利用の実践
"Pre-delivery activities include planning for post-delivery operations, supportability, and logistics determination Post-delivery activities include software modification, training, and operating a help desk",納品前の活動には、納品後の運用、サポート性、ロジスティクスの決定の計画が含まれます。 納品後の活動には、ソフトウェアの修正、トレーニング、ヘルプ デスクの運営が含まれます。
precedence diagramming method,優先順位図法
precedes the requirements phase,要件フェーズの前に
"preceding each occurrence of a pattern by the <EscapeCharacter>, if it is necessary to include a pattern in the text string that matches the <CloseText> delimiter",<CloseText> 区切り文字に一致するパターンをテキスト文字列に含める必要がある場合は、パターンが出現するたびに <EscapeCharacter> を使用します。
precise description of the semantics of a language in terms of a formal language such as first order logic,一次論理などの形式言語による言語の意味論の正確な記述
"predetermined course of events defined by its purpose or by its effect, achieved under given conditions",目的またはその効果によって定義され、所定の条件下で達成される、あらかじめ定められた一連の出来事
predetermined threshold value of a risk metric that triggers invocation of a contingency plan when the risk metric crosses the threshold,リスク・メトリックがしきい値を超えたときに緊急時対応計画の発動をトリガーする、リスク・メトリックの事前に設定されたしきい値。
predicate involving two or more roles with assigned values,値が割り当てられた 2 つ以上の役割を含む述語
predicate that a specification requires to be true for an action to occur,アクションが発生するには仕様が true である必要があるという述語
predicate that a specification requires to be true for the entire life time of a set of objects,仕様がオブジェクトのセットの存続期間全体にわたって真である必要があるという述語
prefix to a concept to imply definition information about the concept,概念に関する定義情報を暗示する概念の接頭語
preliminary design review,予備設計レビュー
"preliminary type, form, or instance of a system that serves as a model for later stages or for the final, complete version of the system2. a method of obtaining early feedback on requirements by providing a working model of the expected product before actually building it",後の段階またはシステムの最終的な完全なバージョンのモデルとして機能する、システムの予備的なタイプ、形式、またはインスタンス。実際に製品を構築する前に、期待される製品の作業モデルを提供することで、要件に関するフィードバックを早期に取得する方法
preparation for a feature or code freeze,機能またはコードの凍結の準備
"prerequisite identified as necessary for a user, or a set of users, to achieve an intended outcome, implied or stated within a specific context of use",特定の使用状況の中で暗示または明示された、意図した結果を達成するためにユーザーまたはユーザーのセットに必要であると特定される前提条件
prescription that a particular behavior is allowed to occur,特定の行動が許されるという処方箋
prescription that a particular behavior is required.,特定の行動が必要であるという処方箋。
prescription that a particular behavior must not occur,特定の行動が起こってはいけないという処方箋
"preservation of confidentiality, integrity and accessibility of information",情報の機密性、完全性、およびアクセス可能性の維持
primary encoding defined within the CDIF family of standards,CDIF 規格ファミリー内で定義されたプライマリ エンコーディング
"Primary Ents have an <entType> of Initial, Consolidation, AllocationReceived, or TransferReceived. These are base Ents which allow for initial population of an Ent into an Ent library (with the exception of Consolidation, which can be used to replace several previous Ents if desired). Other Ents (called supplemental Ents) can extend the data in these base type Ents.",プライマリ エントの <entType> は、Initial、Consolidation、AllocationReceived、または TransferReceived です。これらは、Ent ライブラリへの Ent の初期設定を可能にする基本 Ent です (必要に応じて以前のいくつかの Ent を置き換えるために使用できる統合を除く)。他の Ent (補足 Ent と呼ばれる) は、これらの基本型 Ent のデータを拡張できます。
primary manner in which the documentation developer expects the document to be used,ドキュメント開発者がドキュメントの使用を期待する主な方法
primary syntax defined within the CDIF family of standards,CDIF ファミリの標準規格内で定義された主要な構文
"primitive that includes source statements, function points, and documents",ソースステートメント、関数ポイント、ドキュメントを含むプリミティブ
"Primitives are directly measurable or countable, or can be given a constant value or condition for a specific measure.",プリミティブは、直接測定可能または可算可能であるか、または特定の測定に対して定数値または条件を与えることができます。
"principle stating that, since each instance of a subclass is an instance of the superclass, an instance of the subclass is acceptable in any context where an instance of the superclass is acceptable",サブクラスの各インスタンスはスーパークラスのインスタンスであるため、スーパークラスのインスタンスが受け入れられるコンテキストではサブクラスのインスタンスも受け入れられるという原則
printed circuit board,プリント基板
printed circuit board assembly,プリント基板アセンブリ
printed circuit board with embedded components and devices,コンポーネントとデバイスが組み込まれたプリント基板
"printed manual, standalone hypertext system",印刷マニュアル、スタンドアロン ハイパーテキスト システム
"printed manuals, on-screen information, and stand-alone online he",印刷されたマニュアル、画面上の情報、およびスタンドアロンのオンライン情報
"printer, filing cabinet, file folder, and sheet of paper",プリンター、ファイルキャビネット、ファイルフォルダー、および紙
"printout or other human readable display of the source and, sometimes, object statements that make up a computer program",コンピュータープログラムを構成するソース、および場合によってはオブジェクトステートメントの印刷出力またはその他の人が判読できる表示。
prioritizing risks for subsequent further analysis or action by assessing and combining their probability of occurrence and impact,リスクの発生確率と影響を評価および組み合わせることにより、その後のさらなる分析またはアクションのためのリスクに優先順位を付ける
privilege or benefit granted by a software entitlement,ソフトウェア資格によって付与される特権または利益
probability of something happening,何かが起こる確率
probability that software will not cause the failure of a system for a specified time under specified conditions,指定された条件下で、指定された期間、ソフトウェアがシステム障害を引き起こさない確率
Problem Reporting and Resolution Planned Information.,問題の報告と解決予定の情報。
problem reports per thousand lines of code,コード1000行ごとの問題レポート
problem space,問題スペース
"problem submitted by an end user and requiring information processing for its solution. ISO/IEC 2382:2015, Information technology — Vocabulary]",エンドユーザーによって提出され、その解決のために情報処理が必要な問題。 ISO/IEC 2382:2015、情報技術 - 語彙]
"problem, process, system, or application in which many activities happen in parallel, the order of incoming events is not usually predictable, and events often overlap",多くのアクティビティが並行して発生し、受信イベントの順序が通常予測できず、イベントが重複することが多い問題、プロセス、システム、またはアプリケーション
"problem, system, or application that is concurrent and has timing constraints whereby incoming events must be processed within a given timeframe",同時実行されており、受信イベントを指定された時間枠内に処理する必要があるというタイミング制約がある問題、システム、またはアプリケーション
procedural form of help that guides a user through each step of a task through dialog with the user,ユーザーとの対話を通じてタスクの各ステップをガイドする手順形式のヘルプ
procedure describing actions to be performed by the evaluator in order to obtain results for the specified measurement applied to the specified product components or on the product as a whole,指定された製品コンポーネントまたは製品全体に適用された指定された測定の結果を得るために、評価者が実行するアクションを記述した手順
"procedure, problem, or test that can be used to compare systems or components to each other or to a standard",システムやコンポーネントを相互に、または標準と比較するために使用できる手順、問題、またはテスト。
"Process architecture also describes the interfaces, interdependencies, and other relationships between process elements and external processes, such as contract management.",プロセス アーキテクチャでは、インターフェイス、相互依存関係、およびプロセス要素と外部プロセス (契約管理など) の間のその他の関係も記述されます。
process assessment model,プロセス評価モデル
"Process assessment models addressing a specific process quality characteristic can include the identification of the characteristic in the title; for example, a process assessment model addressing process capability can be termed a ""process capability assessment model.""",特定のプロセス品質特性に対処するプロセス評価モデルには、タイトルに特性の識別を含めることができます。たとえば、プロセス能力に対処するプロセス評価モデルは、「プロセス能力評価モデル」と呼ぶことができます。
process attribute,プロセス属性
process by which a data structure can be transformed by a database designer into a set of relations that have no repeating groups,データベース設計者がデータ構造を、繰り返しグループを持たない一連の関係に変換するプロセス
"process by which an information processing system, or any of its parts, transfers data outside of that system or part",情報処理システムまたはその一部が、そのシステムまたは一部の外部にデータを転送するプロセス
"process by which information used in developing software systems is identified, captured, and organized so that it can be reused to create new systems, within a domain.",ソフトウェア システムの開発に使用される情報を特定、取得、整理して、ドメイン内で新しいシステムを作成するために再利用できるようにするプロセス。
process by which user needs are translated into a software product,ユーザーのニーズをソフトウェア製品に変換するプロセス
"process by which, given an initial name and an initial naming context, an association between a name and the entity designated by the initial name can be found",初期名と初期命名コンテキストが与えられた場合に、名前と初期名によって指定されたエンティティとの間の関連性を見つけることができるプロセス
process decision program chart,プロセス決定プログラムチャート
process definitions how each asset will be used in application,プロセス定義 各資産がアプリケーションでどのように使用されるか
process developed by tailoring a standard process,標準プロセスをカスタマイズして開発されたプロセス
"process for defining the member products that will be produced within a product line and the major common and variable features among the products, analyzes the products from an economic point of view, and controls and schedules the development, production, and marketing of the product line and its products",製品ライン内で生産されるメンバー製品と製品間の主な共通および可変機能を定義するプロセス。経済的な観点から製品を分析し、製品ラインとその製品の開発、生産、マーケティングを管理およびスケジュールする。
"process for establishing, planning, performing and evaluating software measurement within an overall project or organizational measurement structure",プロジェクト全体または組織の測定構造内でソフトウェア測定を確立、計画、実行、評価するためのプロセス
"process for establishing, planning, performing and evaluating systems and software measurement within an overall project or organizational measurement structure",プロジェクト全体または組織の測定構造内でシステムおよびソフトウェア測定を確立、計画、実行、評価するためのプロセス
"process from which all special causes of process variation have been removed and prevented from recurring, so that only common causes of process variation of the process remain",プロセス変動の特殊な原因がすべて除去され、再発が防止され、プロセスのプロセス変動の一般的な原因のみが残るプロセス。
process implementing one or more operations on one or more objects,1 つまたは複数のオブジェクトに対して 1 つまたは複数の操作を実装するプロセス
process in which a software module calls itself,ソフトウェアモジュールが自身を呼び出すプロセス
process in which no prior or subsequent processing steps are needed to initiate or complete the functional user requirements,ユーザーの機能要件を開始または完了するために、前後の処理ステップが必要ないプロセス
process of accessing on-screen information by moving between different locations in a website or electronic document,Web サイトまたは電子ドキュメント内の異なる場所間を移動して、画面上の情報にアクセスするプロセス
"process of analyzing design alternatives and defining the architecture, components, interfaces, and timing and sizing estimates for a system or component",設計の代替案を分析し、システムまたはコンポーネントのアーキテクチャ、コンポーネント、インターフェイス、タイミングとサイジングの見積もりを定義するプロセス
"process of analyzing the progress of a planned activity, project, or program on a periodic, ongoing basis and handling identified risk factors",計画された活動、プロジェクト、またはプログラムの進捗状況を定期的かつ継続的に分析し、特定されたリスク要因に対処するプロセス
"process of application engineering that develops application assets, some of which can be derived from domain assets, and member products based on the application architecture and the sets of application assets and domain assets",アプリケーション資産を開発するアプリケーション エンジニアリングのプロセス。その一部はドメイン資産から派生することができ、アプリケーション アーキテクチャとアプリケーション資産とドメイン資産のセットに基づくメンバー製品を開発します。
process of application engineering where a single application architecture conforming to the domain architecture is derived,ドメイン アーキテクチャに準拠した単一のアプリケーション アーキテクチャが導出されるアプリケーション エンジニアリングのプロセス
process of applying configuration management throughout the software life cycle to ensure the completeness and correctness of SCIs,SCI の完全性と正確性を確保するために、ソフトウェアのライフサイクル全体にわたって構成管理を適用するプロセス
process of assessing whether an asset conforms to predetermined certification criteria appropriate for that class of asset,資産がそのクラスの資産に適した所定の認定基準に適合しているかどうかを評価するプロセス
process of assigning a given entitlement to a separate legal entity,特定の権利を別の法人に割り当てるプロセス
process of assigning some or all of a given entitlement to a subsidiary or other associated organizational unit which manages its own entitlement schema library,特定の資格の一部またはすべてを、独自の資格スキーマ ライブラリを管理する子会社またはその他の関連組織単位に割り当てるプロセス
process of breaking a system into components to facilitate design and development; an element of modular programming,設計と開発を容易にするためにシステムをコンポーネントに分割するプロセス。モジュール式プログラミングの要素
process of bringing a device or system to a halt by rejecting new requests for work,新しい作業要求を拒否することでデバイスまたはシステムを停止するプロセス
"process of combining software components, hardware components, or both into an overall system",ソフトウェア コンポーネント、ハードウェア コンポーネント、またはその両方を組み合わせてシステム全体を構築するプロセス
"process of combining two or more entitlements into a single, unified entitlement",2 つ以上の権利を 1 つの統合された権利に結合するプロセス
"process of comparing software entitlements owned with those required (granted and deployed), usually to determine compliance with software license agreements",通常、ソフトウェア ライセンス契約への準拠を判断するために、所有するソフトウェア資格と必要な (付与および展開された) ソフトウェア資格を比較するプロセス。
"process of conceiving, defining, expressing, documenting, communicating, certifying proper implementation of, maintaining and improving an architecture throughout a system's life cycle",システムのライフサイクル全体を通じてアーキテクチャを構想、定義、表現、文書化、伝達、適切な実装の認証、維持および改善するプロセス
"process of conceiving, inventing, or contriving a scheme for turning a computer program specification into an operational program",コンピュータプログラム仕様を運用プログラムに変えるためのスキームを着想、発明、または考案するプロセス
process of confirming that a system or component complies with its specified requirements and is acceptable for operational use,システムまたはコンポーネントが指定された要件を満たしており、運用上許容できることを確認するプロセス
process of constructing from parts one or more identified pieces of software,パーツから 1 つまたは複数の特定されたソフトウェアを構築するプロセス
process of constructing or refining application systems by reusing assets,資産を再利用してアプリケーション システムを構築または改良するプロセス
process of creating an altered program as in (1),(1)の改変プログラム作成手順
"process of creating the project schedule by analyzing activity sequences, activity durations, resource requirements, and schedule constraints",アクティビティの順序、アクティビティの期間、リソース要件、スケジュールの制約を分析してプロジェクトのスケジュールを作成するプロセス
process of decomposing a system into a hierarchy of modules,システムをモジュールの階層に分解するプロセス
process of defining a collection of hardware and software components and their interfaces to establish the framework for the development of a computer system,コンピュータ システム開発のフレームワークを確立するために、ハードウェアおよびソフトウェア コンポーネントとそれらのインターフェイスの集合を定義するプロセス
"process of defining how to meet the information and communication needs of the stakeholders: who needs what information, when they need it, and how it will be given to them",利害関係者の情報とコミュニケーションのニーズを満たす方法を定義するプロセス: 誰がどのような情報を必要とし、いつ、どのように提供するか
process of defining or generating a process or data structure in terms of itself,それ自体に関してプロセスまたはデータ構造を定義または生成するプロセス
"process of defining the hardware and Software architecture, components, modules, interfaces and data for a system to satisfy specified requirements",指定された要件を満たすシステムのハードウェアとソフトウェアのアーキテクチャ、コンポーネント、モジュール、インターフェイス、およびデータを定義するプロセス
process of defining the high-level concepts that guide low-level design and implementatio,下位レベルの設計と実装をガイドする上位レベルの概念を定義するプロセス
"process of defining the software architecture, components, modules, interfaces, and data for a software system to satisfy specified requirements",指定された要件を満たすためにソフトウェア システムのソフトウェア アーキテクチャ、コンポーネント、モジュール、インターフェイス、およびデータを定義するプロセス
process of defining the working relationships among the components of a system,システムのコンポーネント間の動作関係を定義するプロセス
process of demonstrating whether an entity is capable of fulfilling specified requirements,企業が指定された要件を満たすことができるかどうかを実証するプロセス
"process of design at the individual-routine or, sometimes, class level under the guidance of a more general design",より一般的な設計の指導の下、個人の日常レベル、または場合によってはクラスレベルでの設計プロセス
"process of designing a system by identifying its major components, decomposing them into their low-level components, and iterating until the desired level of detail is achieved",システムの主要コンポーネントを特定し、それらを低レベルのコンポーネントに分解し、必要な詳細レベルが達成されるまで繰り返すことによってシステムを設計するプロセス
"process of designing a system by identifying low-level components, designing each component separately, and then designing a structure to integrate the low-level components into larger and larger subsystems until the design is finishe",低レベルのコンポーネントを特定し、各コンポーネントを個別に設計し、設計が完了するまで低レベルのコンポーネントをより大きなサブシステムに統合する構造を設計することによってシステムを設計するプロセス
process of designing and implementing the control logic of a computer by identifying the basic operations needed to carry out each machine language instruction and representing these operations as sequences of instructions in a special memory called control store,各機械語命令を実行するために必要な基本操作を特定し、これらの操作をコントロール ストアと呼ばれる特別なメモリ内の一連の命令として表すことによって、コンピューターの制御ロジックを設計および実装するプロセス
process of detecting and responding to a program's errors,プログラムのエラーを検出して対応するプロセス
process of determining whether a system or component is suitable for operational use,システムまたはコンポーネントが運用に適しているかどうかを判断するプロセス
"process of determining whether the requirements for a system or component are complete and correct, the products of each development phase fulfill the requirements or conditions imposed by the previous phase, and the final system or component complies with specified requirements",システムまたはコンポーネントの要件が完全かつ正確であるかどうか、各開発フェーズの製品が前のフェーズで課された要件または条件を満たしているかどうか、および最終的なシステムまたはコンポーネントが指定された要件に準拠しているかどうかを判断するプロセス。
process of developing content that meets the needs of the audience,視聴者のニーズを満たすコンテンツを開発するプロセス
process of developing information so that it is suitable for an international audience,国際的な視聴者に適した情報を開発するプロセス
process of developing or using a model,モデルの開発または使用のプロセス
process of developing or using a model as in (1),(1)のようなモデルの開発または使用のプロセス
"process of distributing requirements, resources, or other entities among the components of a system or program",要件、リソース、またはその他のエンティティをシステムまたはプログラムのコンポーネント間で分散するプロセス
"process of ensuring that the software requirements specification complies with the system requirements, conforms to document standards of the requirements phase, and is an adequate basis for the architectural (preliminary) design phase",ソフトウェア要件仕様がシステム要件に準拠していること、要件フェーズの文書標準に準拠していること、およびアーキテクチャ (予備) 設計フェーズの適切な基礎であることを確認するプロセス
process of entering data into an information-processing system or any of its parts for storage or processing,保存または処理のために情報処理システムまたはその一部にデータを入力するプロセス
"process of establishing, planning, performing and evaluating software measurement within an overall project or organizational measurement structure",プロジェクト全体または組織の測定構造内でソフトウェア測定を確立、計画、実行、評価するプロセス
process of estimating or measuring the amount of execution time required for a software system or component,ソフトウェア システムまたはコンポーネントに必要な実行時間を推定または測定するプロセス
process of estimating the amount of computer storage or the number of source lines required for a software system or component,ソフトウェア システムまたはコンポーネントに必要なコンピュータ ストレージの容量またはソース行の数を見積もるプロセス
"process of evaluating a product by manual or automated means to determine if the product has certain characteristics2. For projects that have a product as a deliverable, it is a tool to define scope that generally means asking questions about a product and forming answers to describe the use, characteristics and other the relevant aspects of what is going to be manufactured",製品に特定の特性があるかどうかを判断するために、手動または自動の手段で製品を評価するプロセス2。成果物として製品を含むプロジェクトの場合、これは範囲を定義するツールです。これは通常、製品について質問し、製造されるものの用途、特性、その他の関連側面を説明するための回答を形成することを意味します。
process of evaluating a system or component based on its behavior during execution,実行中の動作に基づいてシステムまたはコンポーネントを評価するプロセス
"process of evaluating a system or component based on its form, structure, content, or documentation",システムまたはコンポーネントをその形式、構造、内容、または文書に基づいて評価するプロセス
process of evaluating a system or component during or at the end of the development process to determine whether it satisfies specified requirements,開発プロセス中または開発プロセスの終了時にシステムまたはコンポーネントを評価して、それが指定された要件を満たしているかどうかを判断するプロセス
process of evaluating a system or component to determine whether the products of a given development phase satisfy the conditions imposed at the start of that phase,特定の開発フェーズの製品がそのフェーズの開始時に課された条件を満たしているかどうかを判断するために、システムまたはコンポーネントを評価するプロセス
"process of examining identified risk factors for probability of occurrence, potential loss, and potential risk handling strategies",発生確率、潜在的な損失、および潜在的なリスク処理戦略について特定されたリスク要因を調査するプロセス
process of extracting the essential characteristics of data by defining data types and their associated functional characteristics and disregarding representation details,データ型とそれに関連する機能特性を定義し、表現の詳細を無視することによって、データの本質的な特性を抽出するプロセス
process of fetching a computer instruction from memory and executing it,コンピュータの命令をメモリからフェッチして実行するプロセス
process of formulating a view,ビューを策定するプロセス
process of generating (archiving) an executable and testable system from source versions or baselines,ソース バージョンまたはベースラインから実行可能でテスト可能なシステムを生成 (アーカイブ) するプロセス
process of generating a transfer file from a source environment,ソース環境から転送ファイルを生成するプロセス
process of generating or revising a document,文書の作成または改訂のプロセス
process of identifying the potential domain assets and estimating the returns of investments in the assets,潜在的なドメイン資産を特定し、その資産への投資収益を見積もるプロセス
process of incorporating the content of a transfer file into a target environment,転送ファイルの内容をターゲット環境に組み込むプロセス
process of instantiation whose validity can be subject to test,有効性をテストすることができるインスタンス化のプロセス
"process of intentionally adding known faults to those already in a computer program for the purpose of monitoring the rate of detection and removal, and estimating the number of faults remaining in the program",検出と除去の速度を監視し、プログラムに残っている欠陥の数を推定する目的で、コンピュータ プログラムに既に存在する欠陥に既知の欠陥を意図的に追加するプロセス
"process of making software modules more independent of one another to decrease the impact of changes to, and errors in, the individual modules",個々のモジュールへの変更やエラーによる影響を軽減するために、ソフトウェア モジュールの相互の独立性を高めるプロセス
"process of making statement-level changes to a program to make it more efficient2. changes made to program source code for the purpose of optimizing performance, usually to increase speed or reduce memory usage",プログラムをより効率的にするために、プログラムにステートメントレベルの変更を加えるプロセス2.パフォーマンスを最適化する目的でプログラムのソース コードに加えられる変更。通常は速度の向上やメモリ使用量の削減が目的です。
"process of managing the contract and the relationship between the acquirer and supplier, including reviewing and documenting how the supplier is performing or has performed; establishing required corrective actions; and managing contract changes",契約および買収者と供給者の関係を管理するプロセス。これには、供給者がどのように履行しているか、または履行してきたかをレビューおよび文書化することが含まれます。必要な是正措置を確立する。契約変更の管理
"process of modifying a software system or component after delivery to correct faults, improve performance or other attributes, or adapt to a changed environment",納品後にソフトウェア システムまたはコンポーネントを修正して、障害を修正したり、パフォーマンスやその他の属性を改善したり、変化した環境に適応したりするプロセス
process of obtaining a high-level representation of the software from the source code,ソースコードからソフトウェアの高レベル表現を取得するプロセス
"process of obtaining a system, product, or service",システム、製品、またはサービスを入手するプロセス
"process of operating a system or component under specified conditions, observing or recording the results, and making an evaluation of some aspect of the system or component",指定された条件下でシステムまたはコンポーネントを動作させ、結果を観察または記録し、システムまたはコンポーネントのある側面を評価するプロセス
"process of optimizing the reliability of software through a program that emphasizes software error prevention, fault detection and removal, and the use of measurements to maximize reliability in light of project constraints such as resources (cost), schedule, and performance",リソース (コスト)、スケジュール、パフォーマンスなどのプロジェクトの制約を考慮して、ソフトウェア エラーの防止、障害の検出と除去、および信頼性を最大化するための測定の使用に重点を置くプログラムを通じて、ソフトウェアの信頼性を最適化するプロセス。
process of performing a sequence of steps repeatedly,一連のステップを繰り返し実行するプロセス
"process of planning and controlling the identification, allocation, and flow-down of requirements from the system level to the module or part level, including interfaces, verification, modifications, and status monitoring",インターフェイス、検証、変更、ステータス監視など、システム レベルからモジュールまたは部品レベルへの要件の特定、割り当て、フローダウンを計画および制御するプロセス
"process of providing evidence that the system, software, or hardware and its associated products satisfy requirements allocated to it at the end of each life cycle activity, solve the right problem (e.g., correctly model physical laws, implement business rules, and use the proper system assumptions), and, and satisfy intended use and user needs",システム、ソフトウェア、またはハードウェアとその関連製品が、各ライフサイクル活動の終了時に割り当てられた要件を満たし、適切な問題を解決し (物理法則を正しくモデル化し、ビジネス ルールを実装し、適切なシステム前提を使用するなど)、使用目的とユーザーのニーズを満たしているという証拠を提供するプロセス。
"process of providing objective evidence that the system, software, or hardware and its associated products conform to requirements (e.g., for correctness, completeness, consistency, and accuracy) for all life cycle activities during each life cycle process (acquisition, supply, development, operation, and maintenance), satisfy standards, practices, and conventions during life cycle processes, and successfully complete each life cycle activity and satisfy all the criteria for initiating succeeding life cycle activities",システム、ソフトウェア、またはハードウェアとその関連製品が、各ライフ サイクル プロセス (取得、供給、開発、運用、保守) 中のすべてのライフ サイクル アクティビティの要件 (正確性、完全性、一貫性、精度など) に準拠し、ライフ サイクル プロセス中の標準、慣行、慣例を満たし、各ライフ サイクル アクティビティを正常に完了し、後続のライフ サイクル アクティビティを開始するためのすべての基準を満たしているという客観的な証拠を提供するプロセス。
process of recognizing that a hazard exists and defining its characteristics,危険が存在することを認識し、その特徴を定義するプロセス
process of refining and expanding the preliminary design of a system or component to the extent that the design is sufficiently complete to be implemented,システムまたはコンポーネントの予備設計を、実装に十分な完成度まで改良および拡張するプロセス
process of removing a function from a module and placing it into a module of its own,モジュールから関数を削除し、それを独自のモジュールに配置するプロセス
"process of restructuring a database, data structure, computer program, or set of system components during program execution",プログラム実行中にデータベース、データ構造、コンピュータ プログラム、またはシステム コンポーネントのセットを再構築するプロセス
"process of retaining a hardware system or component in, or restoring it to, a state in which it can perform its required functions",ハードウェア システムまたはコンポーネントを必要な機能を実行できる状態に保持、または復元するプロセス
process of revoking an entitlement or entitlement schema,資格または資格スキーマを取り消すプロセス
"process of running a test on the test item, producing actual results",テスト項目に対してテストを実行し、実際の結果を生成するプロセス
process of selection and implementation of measures to modify risk,リスクを修正するための措置の選択と実施のプロセス
"process of studying a system by partitioning the system into parts (functions, components, or objects) and determining how the parts relate to each other2. investigation and collection phase of development that aims to specify types of users and their information needs",システムを部分 (機能、コンポーネント、またはオブジェクト) に分割し、それらの部分が互いにどのように関連しているかを判断することによってシステムを研究するプロセス 2。ユーザーのタイプとその情報ニーズを特定することを目的とした開発の調査および収集段階
"process of studying and refining system, hardware, or software requirements",システム、ハードウェア、またはソフトウェアの要件を調査および改良するプロセス
"process of studying user needs to arrive at a definition of system, hardware, or software requirements",ユーザーのニーズを検討し、システム、ハードウェア、またはソフトウェア要件の定義に到達するプロセス
"process of substituting specific data, instructions, or both into a generic program unit to make it usable in a computer program2. of an <X> template, an <X> produced from a given <X> template and other necessary information",コンピュータ プログラムで使用できるようにするために、特定のデータ、命令、またはその両方を汎用プログラム ユニットに置き換えるプロセス。 <X> テンプレートの、指定された <X> テンプレートから生成された <X>、およびその他の必要な情報
"process of suppressing irrelevant detail to establish a simplified model, or the result of that process",単純化されたモデルを確立するために無関係な詳細を抑制するプロセス、またはそのプロセスの結果
"process of suspending the operation of a central processing unit for one or more cycles to permit the occurrence of other operations, such as transferring data from main memory in response to an output request from an input/output controller",入出力コントローラからの出力要求に応じてメインメモリからデータを転送するなど、他の操作の発生を許可するために中央処理装置の動作を 1 サイクル以上一時停止するプロセス。
"process of transformation that operates upon data or other types of inputs to create data, produce outputs, or change the state or condition of the subject software",データの作成、出力の生成、または対象ソフトウェアの状態や条件の変更を行うために、データまたは他のタイプの入力に基づいて動作する変換プロセス
process of transforming one specification into a more detailed specification,1 つの仕様をより詳細な仕様に変換するプロセス
process of transforming project code base into usable applications,プロジェクトのコードベースを使用可能なアプリケーションに変換するプロセス
"process of translating a design into hardware components, software components, or both",設計をハードウェア コンポーネント、ソフトウェア コンポーネント、またはその両方に変換するプロセス
process of understanding and evolving existing software assets of a system of interest,対象システムの既存のソフトウェア資産を理解し、進化させるプロセス
process of using a formal method for software design,ソフトウェア設計に正式な手法を使用するプロセス
"process of writing, assembling, or generating assets",アセットの作成、組み立て、または生成のプロセス
"process or meeting during which a software product is presented to project personnel, managers, users, customers, user representatives, or other interested parties for comment or approval",ソフトウェア製品をプロジェクト担当者、マネージャー、ユーザー、顧客、ユーザー代表、その他の関係者に提示してコメントや承認を得るプロセスまたは会議
"process or meeting during which a system, hardware, or software design is presented to project personnel, managers, users, customers, or other interested parties for comment or approval",システム、ハードウェア、またはソフトウェアの設計がプロジェクト担当者、マネージャー、ユーザー、顧客、またはその他の関係者に提示され、コメントや承認を得るプロセスまたは会議
"process or meeting during which a work product, or set of work products, is presented to project personnel, managers, users, customers, or other interested parties for comment or approval",作業成果物または一連の作業成果物が、プロジェクト担当者、マネージャー、ユーザー、顧客、またはその他の関係者にコメントまたは承認を求めて提示されるプロセスまたは会議。
"process or meeting during which the requirements for a system, hardware item, or software item are presented to project personnel, managers, users, customers, or other interested parties for comment or approval",システム、ハードウェア項目、またはソフトウェア項目の要件がプロジェクト担当者、マネージャー、ユーザー、顧客、またはその他の関係者に提示され、コメントや承認を得るプロセスまたは会議。
process profile specifying which process attributes are required and the rating necessary for each process attribute for a required process,プロセス プロファイル。どのプロセス属性が必要であるか、および必要なプロセスの各プロセス属性に必要な評価を指定します。
process reference model,プロセス参照モデル
process that accomplishes the needed work to produce work products,作業成果物を生成するために必要な作業を実行するプロセス
"process that can satisfy specified product quality, service quality, and process-performance objective",指定された製品品質、サービス品質、およびプロセスパフォーマンス目標を満たすことができるプロセス
process that is documented by both a description and a plan,説明と計画の両方によって文書化されたプロセス
"process that is managed by a statistically based technique in which processes are analyzed, special causes of process variation are identified, and performance is contained within well-defined limit",プロセスを分析し、プロセス変動の特別な原因を特定し、パフォーマンスを明確に定義された制限内に収める、統計に基づいた手法によって管理されるプロセス。
process that is not performed or is performed only partially,実行されない、または部分的にのみ実行されるプロセス
process that provides information on the quality of a software product,ソフトウェア製品の品質に関する情報を提供するプロセス
"process that usually includes requirements analysis, system design, implementation, documentation and quality assurance",通常、要件分析、システム設計、実装、文書化、品質保証を含むプロセス
"process through which the acquirer and the suppliers of a system discover, review, articulate, understand, and document the requirements on the system and the life cycle processes",システムの取得者と供給者が、システムとライフサイクル プロセスに関する要件を発見、レビュー、明確化、理解、文書化するプロセス
process to eliminate risk or reduce it to a tolerable level,リスクを排除するか許容可能なレベルまで軽減するプロセス
process with a single thread of control; a task,単一スレッドの制御で処理します。タスク
process with its own memory and multiple threads of control,独自のメモリと複数の制御スレッドを備えたプロセス
"process-related documentation such as policies, defined processes, checklists, lessons-learne documents, templates, standards, procedures, plans, and training materials.",ポリシー、定義されたプロセス、チェックリスト、教訓文書、テンプレート、標準、手順、計画、トレーニング資料などのプロセス関連の文書。
"process, which can include a meeting, in which work products are presented to some stakeholders for comment or approval",プロセスには、コメントや承認を得るために作業成果物を一部の利害関係者に提示する会議が含まれる場合があります。
processes for developing a member product in a product line,製品ラインのメンバー製品を開発するプロセス
processes for domain asset development,ドメイン資産開発のプロセス
processing of different types of input data,さまざまな種類の入力データの処理
"processing unit in a computer or processor which manages instructions, data, and operations",命令、データ、操作を管理するコンピューターまたはプロセッサーの処理装置
"Processor time is usually less than elapsed time because the processor can be idle (for example, awaiting needed computer resources) or employed on other tasks during the execution of a program.",プロセッサー時間は、プログラムの実行中にプロセッサーがアイドル状態になったり (必要なコンピューター・リソースを待っているなど)、他のタスクに使用されたりする可能性があるため、通常は経過時間よりも短くなります。
processor whose elements have been miniaturized into one or a few integrated circuits,要素が 1 つまたはいくつかの集積回路に小型化されたプロセッサ
product attribute that leads to a mismatch between user intentions or user actions and the system attributes and behavior,ユーザーの意図またはユーザーの行動と、システムの属性および動作との間に不一致をもたらす製品属性
product belonging to the product line,製品ラインに属する製品
product capable of performing computations,計算を実行できる製品
"product line architecture, a configuration management plan, and domain assets, enabling application engineering to effectively reuse and produce a set of derivative products",製品ライン アーキテクチャ、構成管理計画、およびドメイン資産により、アプリケーション エンジニアリングが効果的に一連の派生製品を再利用および生成できるようになります。
product of an acquisition process that is delivered to the user,ユーザーに提供される取得プロセスの成果物
product of domain analysis that provides a representation of the requirements of the domain,ドメインの要件を表現するドメイン分析の成果物
product of probability times potential loss for a risk factor,リスク要因の確率と潜在的な損失の積
product of the system or software development process that is used as input to another stage of its development process,開発プロセスの別の段階への入力として使用される、システムまたはソフトウェア開発プロセスの成果物
Product Parts List,製品部品リスト
product support plan,製品サポートプラン
product which functions in real conditions of operations,実際の動作条件で機能する製品
product which proves the relevance of a solution,ソリューションの関連性を証明する製品
production and deployment,生産と展開
"production of typeset-quality documents including text, graphics, and pictures with the assistance of a compute",コンピューティングの支援を受けて、テキスト、グラフィックス、写真などのタイプセット品質のドキュメントを作成します。
production readiness review,実稼働準備状況のレビュー
"production, manufacturing, accounting",生産、製造、会計
productivity computed periodically during development,開発中に定期的に計算される生産性
products produced by the testing effort,テスト作業によって生産された製品
"products, results, or capabilities produced by a project and validated by the project customer or sponsors as meeting their specified acceptance criteria",プロジェクトによって生成され、プロジェクトの顧客またはスポンサーによって指定された受け入れ基準を満たしていると検証された製品、結果、または機能。
"profession that applies theory, principles, data and methods to design in order to optimize human well being and overall system performance.",人間の幸福とシステム全体のパフォーマンスを最適化するために、理論、原則、データ、方法を設計に適用する職業。
profile group,プロファイルグループ
profile group applicable to very small entities (VSEs) that do not develop critical systems or software products and have typical situational factors,重要なシステムやソフトウェア製品を開発しておらず、典型的な状況要因を持つ非常に小規模な事業体 (VSE) に適用されるプロファイル グループ
"profile targeted at start-up Very Small Entities (i.e., VSEs that started their operation fewer than three years ago) or at VSEs working on small projects (e.g., project size of less than six person-months)",スタートアップの非常に小規模な事業体 (つまり、事業を開始して 3 年未満の VSE) または小規模プロジェクト (例: プロジェクト サイズが 6 人月未満) に取り組んでいる VSE を対象としたプロファイル
"profile targeted at very small enterprises (VSEs) that need to perform and manage service delivery processes, either for systems or software products that they have developed or that were developed by others",自社が開発した、または他社が開発したシステムまたはソフトウェア製品のサービス提供プロセスを実行および管理する必要がある非常に小規模な企業 (VSE) を対象としたプロファイル
profile targeted at very small enterprises (VSEs) which want to sustain and grow as an independent competitive system or software development business,独立した競争力のあるシステムまたはソフトウェア開発ビジネスとして維持および成長したいと考えている非常に小規模な企業 (VSE) を対象としたプロファイル
profile targeted at very small entities (VSEs) involved in the development of more than one project in parallel with more than one work team,複数の作業チームと並行して複数のプロジェクトの開発に携わる非常に小規模な事業体 (VSE) を対象としたプロファイル
profile targeted at very small entities (VSEs) to provide them with additional organizational management guidance,非常に小規模な事業体 (VSE) を対象としたプロファイルを作成し、追加の組織管理ガイダンスを提供します。
profile targeted at VSEs developing a single application by a single work team,単一の作業チームによって単一のアプリケーションを開発する VSE を対象としたプロファイル
"Profiles conform to the organizational maturity levels that correspond to the basic, intermediate, and advanced profiles.",プロファイルは、基本、中級、および上級プロファイルに対応する組織の成熟度レベルに準拠しています。
profit as a component of compensation to a seller,売り手への報酬の一部としての利益
program construct consisting of a sequence of steps not involving a decision or loop,決定やループを含まない一連のステップで構成されるプログラム構造
program construct consisting of two or more procedures that can occur simultaneously,同時に実行できる 2 つ以上の手順で構成されるプログラム構造
program construct that results in a halt or exit,停止または終了を引き起こすプログラム構造
program design language,プログラム設計言語
program evaluation review technique,プログラム評価レビュー手法
program executive office,プログラム事務局
Program Management Plan,プログラム管理計画
program manager,プログラムマネージャー
program or set of programs used to run a computer,コンピュータを実行するために使用されるプログラムまたはプログラムのセット
program parts selection list,プログラムパーツ選択リスト
program protection plan,プログラム保護計画
program statement that causes a departure as in (1),(1)のような離脱を引き起こすプログラム文
program statement that selects among alternative sets of program statements or affects the order in which operations are performed,プログラム ステートメントの代替セットの中から選択するプログラム ステートメント、または操作の実行順序に影響を与えるプログラム ステートメント
program status word,プログラムステータスワード
"program that displays a table of cells arranged in rows and columns, in which the change of the contents of one cell can cause recomputation of one or more cells based on user-defined relations among the cells",行と列に配置されたセルの表を表示するプログラム。1 つのセルの内容を変更すると、セル間のユーザー定義の関係に基づいて 1 つ以上のセルが再計算されます。
program that initiates and controls spooling,スプールを開始および制御するプログラム
"program unit that is discrete and identifiable with respect to compiling, combining with other units, and loading",コンパイル、他のユニットとの結合、ロードに関して個別で識別可能なプログラムユニット
program variable used to determine whether to exit from a loop,ループを終了するかどうかを決定するために使用されるプログラム変数
"program, or part of a program, that has some general or frequent use",一般的または頻繁に使用されるプログラム、またはプログラムの一部
programmable counter array,プログラマブルカウンタアレイ
programmable read-only memory,プログラマブル読み取り専用メモリ
programmable reload timer,プログラム可能なリロードタイマー
programmable ROM with written data based on a fuse connection state,ヒューズの接続状態に基づいてデータが書き込まれるプログラマブルROM
programming artifacts that supply the behavior of a component or a component home,コンポーネントまたはコンポーネントホームの動作を提供するプログラミング成果物
programming language designed for expressing algorithms,アルゴリズムを表現するために設計されたプログラミング言語
programming language designed for the solution of a given class of problems,特定のクラスの問題を解決するために設計されたプログラミング言語
programming language designed to facilitate the manipulation of data expressed in the form of lists,リストの形式で表現されたデータの操作を容易にするように設計されたプログラミング言語
programming language in which the user states a specific set of instructions that the computer must perform in a given sequence,コンピューターが指定された順序で実行する必要がある特定の命令セットをユーザーが記述するプログラミング言語
programming language mechanism that passes error information by throwing and catching exceptions,例外をスローおよびキャッチすることによってエラー情報を渡すプログラミング言語メカニズム
programming language that allows the user to express a program in terms of objects and messages between those objects,ユーザーがオブジェクトとそれらのオブジェクト間のメッセージに関してプログラムを表現できるようにするプログラミング言語
"programming language that corresponds closely to the instruction set of a given computer, allows symbolic naming of operations and addresses, and usually results in a one-to-one translation of program instructions int machine instructions",特定のコンピュータの命令セットに密接に対応し、演算とアドレスに記号的な名前を付けることができ、通常はプログラム命令を機械命令に 1 対 1 で変換するプログラミング言語
programming language that expresses operations and addresses in symbols convenient to humans rather than in machine language,機械語ではなく人間にとって使いやすい記号で演算やアドレスを表現するプログラミング言語
"programming language that permits the construction of statements resembling algebraic expressions, such as Y = X + 5",Y = X + 5 などの代数式に似たステートメントの構築を可能にするプログラミング言語
"programming language that provides the structured program constructs, namely, single-entry-single-ex sequences, branches, and loops, and facilitates the development of structured programs",構造化されたプログラム構造、つまり、single-entry-single-ex シーケンス、分岐、およびループを提供し、構造化プログラムの開発を容易にするプログラミング言語
"programming language that requires little knowledge of the computer on which a program will run, can be translated into several different machine languages, allows symbolic naming of operations and addresses, provides features designed to facilitate expression of data structures and program logic, and usually results in several machine instructions for each program statement",プログラムが実行されるコンピューターについての知識をほとんど必要としないプログラミング言語。いくつかの異なる機械語に翻訳でき、操作やアドレスに記号で名前を付けることができ、データ構造とプログラム ロジックの表現を容易にするように設計された機能を提供し、通常はプログラム ステートメントごとに複数の機械語命令が生成されます。
programming language used to express programs as a sequence of functions and function calls,プログラムを一連の関数および関数呼び出しとして表現するために使用されるプログラミング言語
"programming language, testing tools, operating systems, database technology and user interface technologies",プログラミング言語、テストツール、オペレーティングシステム、データベーステクノロジー、ユーザーインターフェーステクノロジー
programming languages and mathematical languages,プログラミング言語と数学言語
programming system that incorporates an authoring language,オーサリング言語を組み込んだプログラミング システム
programming technique in which loops are avoided by stating explicitly and in full all of the instructions that would be involved in the execution of each loop,各ループの実行に関与するすべての命令を明示的かつ完全に記述することでループを回避するプログラミング手法
programming technique in which storage locations for computer instructions and data are chosen so that access time is minimized,アクセス時間が最小限になるようにコンピュータの命令とデータの保存場所を選択するプログラミング技術
"programming-language statement; a non-comment, nonblank deliverable source stateme",プログラミング言語のステートメント。コメントなし、空白でない成果物のソースステートム
"Programs, sources, databases, documentation, data structures, test files, and scripts.",プログラム、ソース、データベース、ドキュメント、データ構造、テスト ファイル、スクリプト。
progressive assembling of system components into the whole system,システムコンポーネントをシステム全体に段階的に組み立てる
progressive linking and testing of programs or modules in order to ensure their proper functioning in the complete system,完全なシステムで適切に機能することを確認するための、プログラムまたはモジュールの段階的なリンクとテスト
progressive search which allows users to narrow the results by selecting values for one or more attributes,ユーザーが 1 つ以上の属性の値を選択して結果を絞り込むことができるプログレッシブ検索
"Project communications management includes the processes that are required to ensure timely and appropriate planning, collection, creation, distribution, storage, retrieval, management, control, monitoring, and the ultimate disposition of project information",プロジェクト コミュニケーション管理には、プロジェクト情報のタイムリーかつ適切な計画、収集、作成、配布、保管、検索、管理、制御、監視、および最終的な処分を保証するために必要なプロセスが含まれます。
project contracts or other procurement agreements that have been formally acknowledged by the proper authorizing agent as being finalized and signed off,適切な権限を有する代理人によって正式に承認され、最終的に承認されたプロジェクト契約またはその他の調達契約
"Project cost management includes the processes involved in planning, estimating, budgeting, financing, funding, managing, and controlling costs so that the project can be completed within the approved budget",プロジェクトコスト管理には、プロジェクトが承認された予算内で完了できるようにするための、計画、見積り、予算編成、資金調達、資金調達、管理、およびコストの制御に関わるプロセスが含まれます。
project designed to test a preliminary version of an information processing system under actual but limited operating conditions and which will then be used to test the definitive version of the system,実際の限られた動作条件下で情報処理システムの暫定バージョンをテストし、その後システムの最終バージョンのテストに使用されるプロジェクト
"Project Human Resource Management includes the processes that organize, manage, and lead the project team",プロジェクト人事管理には、プロジェクト チームを組織、管理、およびリードするプロセスが含まれます
"Project integration management includes the processes and activities needed to identify, define, combine, unify, and coordinate the various processes and project management activities within the project management process groups",プロジェクト統合管理には、プロジェクト管理プロセス グループ内のさまざまなプロセスとプロジェクト管理アクティビティを特定、定義、結合、統一、調整するために必要なプロセスとアクティビティが含まれます。
Project Management Body of Knowledge,プロジェクト管理の知識体系
project management information system,プロジェクト管理情報システム
Project Management Institute,プロジェクトマネジメント研究所
project management office2. program management office,プロジェクト管理室2．プログラム管理室
Project Management Plan,プロジェクト管理計画
Project Management Professional,プロジェクト管理プロフェッショナル
Project Manager,プロジェクトマネージャー
"project manager, and, for some projects, the project sponsor, and the group of persons who report either directly or indirectly to the project manager and who are responsible for performing project work as a regular part of their assigned duties, including the staff supporting project management",プロジェクト マネージャー、および一部のプロジェクトでは、プロジェクト スポンサー、およびプロジェクト マネージャーに直接的または間接的に報告し、割り当てられた職務の通常の一部としてプロジェクト作業を実行する責任を負う人々 (プロジェクト管理をサポートするスタッフを含む) のグループ
project or product life cycle in which safety processes are performed,安全プロセスが実行されるプロジェクトまたは製品のライフサイクル
project plan for a software development project,ソフトウェア開発プロジェクトのプロジェクト計画
"Project procurement management includes the processes necessary to purchase or acquire products, services, or results needed from outside the project team",プロジェクト調達管理には、プロジェクト チームの外部から必要な製品、サービス、結果を購入または取得するために必要なプロセスが含まれます。
"Project quality management includes the processes and activities of the performing organization that determine quality policies, objectives, and responsibilities so that the project will satisfy the needs for which it was undertaken",プロジェクトの品質管理には、プロジェクトが着手されたニーズを満たすように品質ポリシー、目標、責任を決定する実行組織のプロセスと活動が含まれます。
"project risk management includes the processes of conducting risk management planning, identification, analysis, response planning, and controlling risk on a project",プロジェクト リスク管理には、リスク管理の計画、特定、分析、対応計画の実施、およびプロジェクトのリスクの制御のプロセスが含まれます。
"project schedule whose schedule activity, scheduled start dates and scheduled finish dates reflect expected resource availability",スケジュールアクティビティ、スケジュールされた開始日、およびスケジュールされた終了日が予想されるリソースの可用性を反映するプロジェクト スケジュール
"Project scope management includes the processes required to ensure that the project includes all the work required, and only the work required, to complete the project successfully",プロジェクト スコープ管理には、プロジェクトを正常に完了するために必要なすべての作業がプロジェクトに含まれていること、および必要な作業のみが含まれていることを確認するために必要なプロセスが含まれます。
"Project stakeholder management includes the processes required to identify all people or organizations impacted by the project, analyzing stakeholder expectations and impact on the project, and developing appropriate management strategies for effectively engaging stakeholders in project decisions and execution",プロジェクトの利害関係者の管理には、プロジェクトの影響を受けるすべての人または組織を特定し、利害関係者の期待とプロジェクトへの影響を分析し、プロジェクトの意思決定と実行に利害関係者を効果的に関与させるための適切な管理戦略を開発するために必要なプロセスが含まれます。
Project time management includes the processes required to manage the timely completion of a project,プロジェクト時間管理には、プロジェクトの適時完了を管理するために必要なプロセスが含まれます。
project to develop and deliver adaptive maintenance,適応型メンテナンスを開発および提供するプロジェクト
project to develop and deliver the first release of a software application,ソフトウェア アプリケーションの最初のリリースを開発して提供するプロジェクト
project-based organization,プロジェクトベースの組織
project-specific description of the process developed by adding the organizational process assets (OPAs) to the software project life cycle (SPLC) and the OPAs.,組織プロセス資産 (OPA) をソフトウェア プロジェクト ライフ サイクル (SPLC) および OPA に追加することによって開発される、プロジェクト固有のプロセスの説明。
project-specific sequence of activities that is created by mapping the activities of a standard onto a selected software life cycle model (SLCM),標準のアクティビティを選択したソフトウェア ライフ サイクル モデル (SLCM) にマッピングすることによって作成される、プロジェクト固有のアクティビティのシーケンス。
project's current and historical risk-related information; a compendium or aggregate of all of the individual risk profiles in a project,プロジェクトの現在お​​よび過去のリスク関連情報。プロジェクト内のすべての個別のリスク プロファイルの概要または集約
"projects to collect, organize and present data and information",データと情報を収集、整理、提示するプロジェクト
"projects, programs and infrastructural duties",プロジェクト、プログラム、インフラストラクチャ業務
"projects, programs, subportfolios, and operations managed as a group to achieve strategic objectives",戦略目標を達成するためにグループとして管理されるプロジェクト、プログラム、サブポートフォリオ、および運用
PROLOG,プロローグ
proof that results from applying the technique in (1),(1)の手法を適用した結果の証明
"Properties can relate to what an asset is, what it does, or how it relates to its operating environment. An assessment of a certification quality factor is accomplished by assessing the underlying certification properties.",プロパティは、資産が何であるか、資産が何を行うか、資産が運用環境とどのように関連するかに関連する場合があります。認証品質要素の評価は、基礎となる認証特性を評価することによって行われます。
properties the environment of the ODP system must have for the specification of that system to be used,ODP システムの仕様を使用するために ODP システムの環境に必要なプロパティ
property associated with a set of real or abstract things that is some characteristic of interest,関心のある特性である、現実または抽象的なもののセットに関連付けられたプロパティ
property by which members of an interconnection perspective are characterized,相互接続パースペクティブのメンバーを特徴づけるプロパティ
"property in a subclass that has the same meaning and signature as a similarly named property in one of its superclasses, but has a different realization",スーパークラスのいずれかにある同様の名前のプロパティと同じ意味とシグネチャを持つサブクラスのプロパティですが、実現方法が異なります。
property of a state class that reflects that class' knowledge of a relationship in which instances of the class participate,クラスのインスタンスが参加する関係についてのそのクラスの知識を反映する状態クラスのプロパティ
"property of a superclass, associated with a cluster of that superclass, whose value identifies to which subclass a specific instance belongs",スーパークラスのプロパティ。そのスーパークラスのクラスターに関連付けられ、その値は特定のインスタンスがどのサブクラスに属するかを識別します。
"property of a system in which events can occur independently of each other, and hence are not ordered",イベントが互いに独立して発生するため、順序付けられないシステムの特性
property of a target entity that is related to a quality measure element and which can be quantified by a measurement method,品質測定要素に関連し、測定方法によって定量化できる対象エンティティの特性
property of hiding from the user some specific aspects of the system's complexity needed to support distribution,配布をサポートするために必要なシステムの複雑さの特定の側面をユーザーから隠す特性
property on which an algorithm operates,アルゴリズムが動作するプロパティ
property that an object continues to exist across changes of contractual context or of epoch,契約上の文脈や時代が変わってもオブジェクトが存在し続けるという性質
property that an object has with respect to a given failure mode if it cannot exhibit that failure mode,特定の故障モードを示すことができない場合に、オブジェクトがその故障モードに関して持つ特性
property that causes no state changes,状態変化を引き起こさないプロパティ
property that is a mapping from the (cross product of the) instances of the class and the input argument types to the (cross product of the) instances of the other (output) argument types,クラスと入力引数の型の (外積) インスタンスから他の (出力) 引数の型の (外積) インスタンスへのマッピングであるプロパティ
property that maps to a collection class,コレクションクラスにマップするプロパティ
property that maps to a scalar-valued class,スカラー値クラスにマップするプロパティ
property that the reference points of an object allow it to be adapted to a variety of configurations,オブジェクトの基準点により、オブジェクトをさまざまな構成に適応させることができるという特性
property with a single-valued mapping,単一値マッピングを持つプロパティ
proportion of identified equivalence partitions of a test item that are covered by a test set,テスト セットでカバーされるテスト項目の特定された等価性パーティションの割合
"proposal for a change to be made to a system, service, component, or the service management system2. proposal for a functional or non-functional change to be made to an existing application",システム、サービス、コンポーネント、またはサービス管理システムに加えられる変更の提案2。既存のアプリケーションに対して行われる機能的または非機能的な変更の提案
proposed changes to a product that is being maintained,メンテナンス中の製品に対する提案された変更
proposition representing a requirement of the system-of-interest that enables th system-of-interest to achieve tolerable risk if it were met,満たされた場合に対象システムが許容可能なリスクを達成できるようにする対象システムの要件を表す命題
protection against intentional subversion or forced failure,意図的な破壊または強制的な障害に対する保護
"protection against intentional subversion or forced failure, containing a composite of four attributes: confidentiality, integrity, availability and accountability, plus aspects of a fifth, usability, all of which have the related issue of their assurance",意図的な破壊または強制的な失敗に対する保護。これには、機密性、完全性、可用性、説明責任という 4 つの属性の複合要素と、5 番目のユーザビリティの側面が含まれます。これらすべての属性には、関連する保証の問題があります。
"protection of computer hardware or software from accidental or malicious access, use, modification, destruction, or disclosure",コンピュータのハードウェアまたはソフトウェアを偶発的または悪意のあるアクセス、使用、変更、破壊、または開示から保護すること
protection of information and data so that unauthorized persons or systems cannot read or modify them and authorized persons or systems are not denied access to them,権限のない人やシステムがそれらを読み取ったり変更したりできないように、また権限のある人やシステムがそれらへのアクセスを拒否されないように、情報とデータを保護する。
Protocol Implementation Conformance Statement,プロトコル実装適合性宣言
Protocol Implementation Extra Information for Testing,プロトコル実装のテストに関する追加情報
Protocol Support for Computational Interactions,計算上の相互作用のためのプロトコルのサポート
provide instruments activity,楽器のアクティビティを提供する
provides developers and end users with a unique reference to the code base they are working with.,開発者とエンド ユーザーが作業しているコード ベースへの一意の参照を提供します。
provides more connections than on packages with connectors on the edges only,エッジのみにコネクタがあるパッケージよりも多くの接続を提供します
"providing of information, assistance, and training to install and make software operational in its intended environment and to distribute improved capabilities to users",ソフトウェアをインストールして目的の環境で動作させ、改善された機能をユーザーに配布するための情報、支援、トレーニングの提供
provision of formal and informal learning activities,公式および非公式の学習活動の提供
"provision of storing and editing capabilities, tracking history of edition, versioning, author identification, change management, time stamping, user notification for content changes, security rights control",保存および編集機能、編集履歴の追跡、バージョン管理、作成者の識別、変更管理、タイムスタンプ、コンテンツ変更のユーザー通知、セキュリティ権限管理の提供
provision that contains criteria to be fulfilled,満たすべき基準を含む条項
"provision that conveys advice or guidance [ISO/IEC 14143-2:2011 Information technology — Software measurement — Functional size measurement — Part 2: Conformity evaluation of software size measurement methods to ISO/IEC 14143-1, 3.9]","アドバイスまたはガイダンスを伝える規定 [ISO/IEC 14143-2:2011 情報技術 — ソフトウェア測定 — 機能サイズ測定 — パート 2: ISO/IEC 14143-1, 3.9 へのソフトウェア サイズ測定方法の適合性評価]"
PRs are either submitted directly to denote faults or established after impact analysis is performed on Modification Requests and faults are found.,PR は、障害を示すために直接送信されるか、変更リクエストに対して影響分析が実行されて障害が見つかった後に確立されます。
pseudostatic random access memory,擬似静的ランダムアクセスメモリ
pulse width modulation,パルス幅変調
purchase order,注文書
quad flat pack,クアッドフラットパック
"qualified personnel who evaluate, for approval or disapproval, all proposed changes to the current developmental baseline",現在の発達ベースラインに対する提案されたすべての変更を承認または不承認として評価する資格のある担当者
qualitative assessment of an individual's familiarity with a given topic,特定のトピックに対する個人の精通度の定性的評価
"qualitative assessment of correctness, or freedom from error",正しさ、または誤りがないことの定性的評価
quality assurance,品質保証
quality control,品質管理
"Quality depends upon the degree to which the established requirements accurately represent stakeholder needs, wants, and expectations. In SQuaRE standards software quality has the same meaning as software product quality.",品質は、確立された要件が利害関係者のニーズ、要望、期待をどの程度正確に表しているかによって決まります。 SQuaRE 規格では、ソフトウェア品質はソフトウェア製品の品質と同じ意味を持ちます。
quality engineering,品質工学
quality function deployment,品質機能搭載
quality management,品質管理
quality management system,品質管理システム
quality measure,品質測定
quality measure element,品質測定要素
Quality of Service,サービスの品質
quality requirements,品質要件
"quality, cost, delivery",品質、コスト、納期
quantitative analysis of a real-time system (or software design) executing on a given hardware configuration with a given external workload applied to it,特定の外部ワークロードが適用された特定のハードウェア構成上で実行されるリアルタイム システム (またはソフトウェア設計) の定量的分析
Quantitative expressions include numerical scales or probabilities.,定量的な表現には、数値スケールや確率が含まれます。
"quantitative measure of the degree to which a system, component, or process possesses a given attribute",システム、コンポーネント、またはプロセスが特定の属性をどの程度保有しているかを示す定量的な尺度
quantitative measure of the degree to which an item possesses a given quality attribute,アイテムが特定の品質属性をどの程度備えているかを示す定量的な尺度
quantitative measure of the magnitude of error,誤差の大きさの定量的尺度
quantitative statement about the expected number or nature of faults in a system or component,システムまたはコンポーネントで予想される障害の数または性質に関する定量的な記述
quantitatively managed process that is improved based on an understanding of the common causes of variation inherent in the process.,プロセスに固有の変動の一般的な原因の理解に基づいて改善される、定量的に管理されたプロセス。
quantity or data item whose value can change,値が変化する可能性のある数量またはデータ項目
quantity or data item whose value cannot change,値が変更できない数量またはデータ項目
quotient (corresponding to the j-th task type) of the (actual) throughput and the throughput reference valu,(実際の) スループットとスループット基準値の商 (j 番目のタスク タイプに対応)
quotient (corresponding to the j-th task type) of the timely throughput and the total throughput,タイムリースループットと合計スループットの商（j 番目のタスクタイプに対応）
RAM embedded in a microcontroller unit (MCU) chip,マイクロコントローラーユニット (MCU) チップに組み込まれた RAM
RAM with a frequent refresh process to retain data,データを保持するために頻繁にリフレッシュプロセスを行うRAM
random access memory designed for the frame buffers of graphics cards,グラフィックスカードのフレームバッファ用に設計されたランダムアクセスメモリ
"random access memory without refresh process, which keeps data as long as it is powered on",リフレッシュプロセスを必要としないランダムアクセスメモリ。電源が入っている限りデータを保持します。
random-access memory,ランダムアクセスメモリ
range of expected results that can be achieved by following a process,プロセスに従うことで達成できる期待される結果の範囲
range on a classification axis which has a rule to judge whether a target system is to be mapped to the range or not,対象システムをその範囲にマッピングするかどうかを判断するルールを持つ分類軸上の範囲
"rate (i.e., the average number per time unit with respect to the rating interval) of all tasks of a task type submitted to the SUT",SUT に送信されたタスク タイプのすべてのタスクのレート (つまり、評価間隔に対する時間単位あたりの平均数)
"ratio of revenue from output (product or service) to development and production costs, which determines whether an organization benefits from performing an action to produce something",生産物 (製品またはサービス) からの収益と開発および生産コストの比率。組織が何かを生産するための行動を実行することで利益を得られるかどうかを決定します。
ratio of the number of failures of a given category to a given unit of measure,指定された測定単位に対する、指定されたカテゴリの故障数の比率
ratio of work product to work effort,作業成果と作業努力の比率
"re-execution of test cases that previously returned a ""fail"" result, to evaluate the effectiveness of intervening corrective actions",以前に「失敗」結果を返したテスト ケースを再実行し、介入する是正措置の有効性を評価します。
"reaction of the unit to a specific stimulus, depending on the current conditions on the unit's lifeline",ユニットのライフラインの現在の状態に応じた、特定の刺激に対するユニットの反応
read operation that alters the data in the accessed location,アクセスされた場所のデータを変更する読み取り操作
read operation that does not erase the data in the accessed location,アクセスされた場所のデータを消去しない読み取り操作
read-only memory,読み取り専用メモリ
read-only memory embedded in a microcontroller unit (MCU) chi,マイクロコントローラーユニット (MCU) に組み込まれた読み取り専用メモリー chi
read-only memory unit whose circuits are programmed during the manufacturing proces,製造プロセス中に回路がプログラムされる読み取り専用メモリユニット
"read-only memory unit without a rewrite or an erase data function, which the user can program only onc",再書き込みまたはデータ消去機能のない、ユーザーが一度だけプログラムできる読み取り専用メモリユニット
ready-to-use software product,すぐに使えるソフトウェア製品
real-time cloc,リアルタイムクロック
real-time operating system,リアルタイムオペレーティングシステム
real-time scheduling algorithm that assigns higher priorities to tasks with shorter period,期間の短いタスクに高い優先順位を割り当てるリアルタイム スケジューリング アルゴリズム
real-time scheduling theorem,リアルタイムスケジューリング定理
real-time scheduling theorem stating the conditions under which a set of n independent periodic tasks scheduled by the rate-monotonic algorithm will always meet their deadlines,レート単調アルゴリズムによってスケジュールされた n 個の独立した周期的タスクのセットが常に期限に間に合う条件を述べるリアルタイム スケジューリング定理
real-world association among one or more entities,1 つまたは複数のエンティティ間の現実世界の関連性
realm of activity for which information is the most valuable asset,情報が最も価値のある資産となる活動の領域
reason for performing the function point count,関数ポイントカウントを実行する理由
"reasoned, auditable artifact created that supports the contention that its top-level claim (or set of claims), is satisfied, including systematic argumentation and its underlying evidence and explicit assumptions that support the claim(s)",最上位の主張 (または一連の主張) が満たされているという主張を裏付ける、論理的に作成された監査可能な成果物 (体系的な議論とその基礎となる証拠、主張を裏付ける明示的な仮定を含む)
recommended treatment alternatives and supporting information for one or more risks determined to be above a risk threshold,リスク閾値を超えていると判断された 1 つ以上のリスクに対する推奨される代替治療法と裏付け情報
"reconfigurable device to restart a function, using decrementing, status control, and reload registers",デクリメント、ステータス制御、およびリロード レジスタを使用して機能を再起動する再構成可能なデバイス
"reconstruction of a file to a given state by reversing all changes made to the file since it was in that state2. type of recovery in which a system, program, database, or other system resource is restored to a previous state in which it can perform required functions",ファイルがその状態になってから行われたすべての変更を元に戻すことによって、ファイルを特定の状態に再構築すること2。システム、プログラム、データベース、またはその他のシステム リソースを、必要な機能を実行できる以前の状態に復元するリカバリのタイプ
"reconstruction of a file to a given state by updating an earlier version, using data recorded in a chronological record of changes made to the file",ファイルに加えられた変更の時系列記録に記録されたデータを使用して、以前のバージョンを更新することによって、ファイルを特定の状態に再構築すること
record containing details of which configuration items are affected and how they are affected by an authorized change,どの構成項目が影響を受けるか、および承認された変更によってどのような影響を受けるかの詳細を含むレコード
record element type,レコード要素のタイプ
"record of all or selected subroutines or function calls performed during the execution of a computer program and, optionally, the values of parameters passed to and returned by each subroutine or function",コンピュータプログラムの実行中に実行されたすべてまたは選択されたサブルーチンまたは関数呼び出しの記録、およびオプションで各サブルーチンまたは関数に渡される、または各サブルーチンまたは関数によって返されるパラメータの値
"record of an object's interactions, from its initial state to some other state",オブジェクトの初期状態から他の状態までの相互作用の記録
record of perceived non-compliance with a service level agreement or customer dissatisfaction with servic,サービスレベル契約への不遵守またはサービスに対する顧客の不満の記録
"record of the execution of a computer program, showing the sequence of instructions executed, the names and values of variables, or both",コンピュータ プログラムの実行の記録。実行された命令のシーケンス、変数の名前と値、またはその両方を示します。
record of the name and values of variables accessed or changed during the execution of a computer program,コンピュータープログラムの実行中にアクセスまたは変更された変数の名前と値の記録
record of the sequence of instructions executed during the execution of a computer program,コンピュータープログラムの実行中に実行される一連の命令の記録
"record of the source statements and branch outcomes that are encountered when a computer program is executed using symbolic, rather than actual, values for input data",入力データに実際の値ではなく記号値を使用してコンピュータ プログラムを実行するときに発生するソース ステートメントと分岐結果の記録
"rectangle containing a box name, a box number, and possibly a box detail reference and representing a function in a diagram",ボックス名、ボックス番号、および場合によってはボックスの詳細参照を含み、図内の関数を表す四角形
"rectangular chip unit, made of plastic for use in low-heat devices, usually with surface-mount or J-shaped (J-le connectors",低発熱デバイスで使用するプラスチック製の長方形のチップ ユニット。通常は表面実装または J 字型 (J-le コネクタ付き)
rectangular surface mount integrated circuit unit with gull-wing leads on the two long side,2つの長辺にガルウィングリードを備えた長方形の表面実装集積回路ユニット
recurring activity to increase the ability to fulfill service requirements,サービス要件を満たす能力を高めるための反復的なアクティビティ
reducing the probability and/or potential impact of a risk factor,リスク要因の確率および/または潜在的な影響を軽減する
reference from some part of one document to some part of another document or another part of the same document,ある文書のある部分から別の文書のある部分、または同じ文書の別の部分への参照
Reference Model of Open Distributed Processing,オープン分散処理のリファレンスモデル
"reference name for a numerical, lexical, or externally specified fixed (unchanging) value",数値、字句、または外部で指定された固定 (不変) 値の参照名
reference node that represents a place and refers to either another reference place or to a place,場所を表し、別の参照場所または場所を参照する参照ノード
reference node that represents a transition and refers to either another reference transition to a transition,遷移を表し、別の参照遷移を遷移へ参照する参照ノード
reference point against which comparisons can be made,比較できる基準点
reference point at which a programmatic interface can be established to allow access to a function,関数へのアクセスを可能にするプログラム インターフェイスを確立できる基準点
reference point at which an external physical storage medium can be introduced into the system,外部物理記憶媒体をシステムに導入できる基準点
reference point at which an interface can be established to allow communication between two or more systems,2 つ以上のシステム間の通信を可能にするインターフェースを確立できる基準点
reference point at which behavior can be observed for the purposes of conformance testing,適合性テストの目的で動作を観察できる基準点
reference point at which there is some interaction between the system and the physical world,システムと物理世界の間に何らかの相互作用が存在する基準点
reference to a particular image or drawing for representing a particular software behavior concept instance,特定のソフトウェア動作概念インスタンスを表すための特定の画像または図面への参照
Reference User Requirements,参照ユーザー要件
references made to concepts other than specific meta-entities in a metamodel,メタモデル内の特定のメタエンティティ以外の概念への参照
"refers to properties of the product or system that increase the pleasure and satisfaction of the user, such as the use of color and the nature of the graphical design",色の使用やグラフィックデザインの性質など、ユーザーの喜びと満足度を高める製品またはシステムの特性を指します。
"refinement of customer requirements into the developers' language, making implicit requirements into explicit derived requirements",顧客の要件を開発者の言語に改良し、暗黙的な要件を明示的な派生要件に変える
reflects a rate of return that the organization is confident it can achieve through typical activities,組織が通常の活動を通じて達成できると確信している収益率を反映します。
"region of a physical memory storage used to temporarily store data while it is being moved, e.g., from input to processing",たとえば入力から処理までの移動中にデータを一時的に保存するために使用される物理メモリストレージの領域
register that indicates the location of the next computer instruction to be executed,次に実行されるコンピュータ命令の位置を示すレジスタ
register that stores both addresses and data,アドレスとデータの両方を格納するレジスタ
register that stores the address at the top of a stack (the address of the most recent program request),スタックの先頭のアドレス (最新のプログラム要求のアドレス) を格納するレジスタ
register used to control or monitor functions in a microprocessor,マイクロプロセッサの機能を制御または監視するために使用されるレジスタ
"registered organization, group within a registered organization, or a project within an organization",登録組織、登録組織内のグループ、または組織内のプロジェクト
"Registers can be set up in CPU, microcontroller, digital signal processor, or microprocessor.",レジスタは、CPU、マイクロコントローラ、デジタル シグナル プロセッサ、またはマイクロプロセッサに設定できます。
registration identifier,登録識別子
regular language description for XML/New Generation,XML/新世代の正規言語記述
"reinterpretable representation of information in a formalized manner suitable for communication, interpretation, or processing",コミュニケーション、解釈、または処理に適した形式化された方法での情報の再解釈可能な表現
"related collection of instances of meta-objects, representing (describing or prescribing) an information system, or parts thereof, such as a software product",ソフトウェア製品などの情報システムまたはその一部を表す (記述または規定する) メタオブジェクトのインスタンスの関連コレクション
related collection of meta-object instance definitions,メタオブジェクト インスタンス定義の関連コレクション
Related tasks are usually grouped to form activities.,通常、関連するタスクはグループ化されてアクティビティを形成します。
relation between a set of names and a set of entities,名前のセットとエンティティのセットの間の関係
"relation between a template class CA of instances of A, and template class CB of instances of B, where template A is an incremental modification of template B",A のインスタンスのテンプレート クラス CA と B のインスタンスのテンプレート クラス CB の間の関係。ここで、テンプレート A はテンプレート B の増分変更です。
"relation between adjacent pairs of actions in a sequence, in which every adjacent pair of actions occupies unique, equally-sized, adjacent intervals in time",シーケンス内の隣接するアクションのペア間の関係。隣接するすべてのアクションのペアは、時間的に一意の、同じサイズの隣接する間隔を占めます。
relation between class A and class B in which the type associated with A is a subtype of the type associated with B,クラス A とクラス B の間の関係。ここで、A に関連付けられた型は、B に関連付けられた型のサブタイプです。
"relation between class B and class A, when the type associated with A is a subtype of the type associated with B",クラス B とクラス A の間の関係 (A に関連付けられた型が B に関連付けられた型のサブタイプである場合)
"relation between type B and type A, in which every <X> which satisfies A also satisfies B",タイプ B とタイプ A の間の関係。A を満たすすべての <X> は B も満たします。
relation of the goals of using the product to the accuracy and completeness with which these goals might be achieved,製品の使用目標と、これらの目標が達成される正確性および完全性との関係
relation of the level of effectiveness achieved to the quantity of resources expended,達成される有効性のレベルと費やされるリソースの量との関係
relation of type A to type B when every <X> which satisfies A also satisfies B,A を満たすすべての <X> が B も満たす場合の、型 A と型 B の関係
Relational Database Management System,リレーショナルデータベース管理システム
relationship between a set of objects which results from the performance of some establishing behavior,何らかの確立された動作の実行から生じる一連のオブジェクト間の関係
"relationship between a template class CB of instances of B and template class CA of instances of A, where template A is an incremental modification of template B",B のインスタンスのテンプレート クラス CB と A のインスタンスのテンプレート クラス CA の間の関係。ここで、テンプレート A はテンプレート B の増分変更です。
"relationship between a variation point and a set of variants, which indicates that the variation point implies a decision about the variants",変化点と一連のバリアントの間の関係。これは、変化点がバリアントに関する決定を意味することを示します。
relationship between an object type set represented by an arrow segment and the activity represented by the box to which the arrow segment is attached,矢印セグメントで表されるオブジェクト タイプ セットと、矢印セグメントが接続されているボックスで表されるアクティビティの間の関係
relationship between the result achieved and the resources used,達成された結果と使用されたリソースとの関係
"relationship between two state classes (not necessarily distinct) in which each instance of one class can be associated with any number of instances of a second class (possibly none), and each instance of the second class can be related to any number of instances of the first class (possibly none)",2 つの状態クラス (必ずしも別個ではない) 間の関係。この関係では、1 つのクラスの各インスタンスを 2 番目のクラスの任意の数のインスタンス (おそらくなし) に関連付けることができ、2 番目のクラスの各インスタンスは最初のクラスの任意の数のインスタンス (おそらくなし) に関連付けることができます。
"relationship between two state classes in which each instance of one class, referred to as the child class, is specifically constrained to relate to no more than one instance of a second class, referred to as the parent class",2 つの状態クラス間の関係。子クラスと呼ばれる 1 つのクラスの各インスタンスは、親クラスと呼ばれる 2 番目のクラスの 1 つのインスタンスのみに関連するように特に制約されます。
relationship in a build specification that matches an interaction instance in one port with an interaction instance in another port,あるポートのインタラクション インスタンスと別のポートのインタラクション インスタンスを一致させるビルド仕様内の関係
relationship that has attributes,属性のある関係
"relationship that is partial, multi-valued, or changeable",部分的、多値、または変更可能な関係
"relationship that is total, single-valued, and constant from the perspective of (at least) one of the participating classes, referred to as a dependent class",依存クラスと呼ばれる、参加クラスの (少なくとも) 1 つの観点から見て、全体的、単一値、および定数である関係。
relationship that maps a sequence of stimulus interactions to a sequence of response interactions,一連の刺激相互作用を一連の応答相互作用にマッピングする関係
relationship with arity (degree) n > 2,アリティ(次数) n > 2との関係
relationships of symbols or groups of symbols to their meanings in a given language,シンボルまたはシンボルのグループと、特定の言語での意味との関係
Relative Distinguished Name,相対識別名
relative frequency of using the l-th chain type by an emulated user of the i-th type,i 番目のタイプのエミュレートされたユーザーによる l 番目のチェーン タイプの使用の相対頻度
"Release management includes defining acceptable quality levels for release, authority to authorize the release, and release procedures.",リリース管理には、リリースの許容品質レベル、リリースを承認する権限、およびリリース手順の定義が含まれます。
release of a system or component to its customer or intended user,顧客または対象ユーザーに対するシステムまたはコンポーネントのリリース
reliability and maintainability,信頼性と保守性
"reliability, availability, maintainability, and cost",信頼性、可用性、保守性、コスト
relocation of a computer program during its execution,実行中のコンピュータプログラムの再配置
Remote Database Access,リモートデータベースアクセス
remote job entry,リモートジョブエントリー
remote method invocation,リモートメソッド呼び出し
Remote Procedure Call,リモートプロシージャコール
repeatable processes used to assemble and organize data across a spectrum of sources,さまざまなソースにわたってデータを組み立て、整理するために使用される反復可能なプロセス
repetition of a process or activity,プロセスまたは活動の繰り返し
"Replaceability of a new version of a software product is important to the user when upgrading. Replaceability will reduce lock-in risk, so that other software products can be used in place of the present one",ソフトウェア製品の新しいバージョンの置き換え可能性は、アップグレード時にユーザーにとって重要です。置換可能によりロックインのリスクが軽減され、現在のソフトウェア製品の代わりに他のソフトウェア製品を使用できるようになります。
replacement relationship in a build specification that identifies a port of one unit with a port of a sub-unit and indicates that interactions at the two ports can be paired identically or compatibly,ビルド仕様における置換関係。1 つのユニットのポートとサブユニットのポートを識別し、2 つのポートでの相互作用が同一または互換性のあるペアにできることを示します。
Replication is often used to enhance performance and availability.,レプリケーションは、パフォーマンスと可用性を向上させるためによく使用されます。
"report of anomaly, required or recommended enhancement from the time an idea is recorded until the disposition by a designated change authority",アイデアが記録されてから指定された変更当局による処分までの異常、要求または推奨された機能強化の報告
"report that documents the daily activities of a scrum team, recording any problems or issues to be dealt with",スクラム チームの日々の活動を文書化し、問題や対処すべき課題を記録するレポート
report that provides information about the status of the testing that is being performed in a specified reporting period,指定されたレポート期間内に実行されたテストのステータスに関する情報を提供するレポート
report that summarizes the testing that was performed,実行されたテストを要約したレポート
report which is generated through dynamic test execution and code analysis to record test results and other output,動的テストの実行とコード分析を通じて生成され、テスト結果やその他の出力を記録するレポート
report writer or sort specification languages,レポートライターまたはソート仕様言語
representation comprised of one or more design elements to address a set of design concerns from a specified design viewpoint,指定された設計の観点から一連の設計上の懸念事項に対処するための 1 つまたは複数の設計要素で構成される表現
"representation corresponding to particular variable characteristics of products, domain assets, and application assets in the context of a product line",製品ラインのコンテキストにおける製品、ドメイン資産、およびアプリケーション資産の特定の可変特性に対応する表現
representation of a cash flow as a series of equal annual payments (at a stated interest rate) over the planning horizon.,キャッシュ フローを、計画期間にわたる一連の均等な年間支払い (規定の金利で) として表現します。
representation of a cash flow as a single instance at the beginning of the planning horizon,計画期間の開始時にキャッシュ フローを単一のインスタンスとして表現すること
representation of a cash flow as a single instance at the end of the planning horizon,計画期間の終わりにおける単一のインスタンスとしてのキャッシュ フローの表現
"representation of a claim or claims, and the support for these claims",請求項の表明、およびこれらの請求項の裏付け
"representation of a real -world process, device, or concept",現実世界のプロセス、デバイス、または概念の表現
representation of a set of real or abstract things that are recognized as the same type because they share the same characteristics and can participate in the same relationships,同じ特性を共有し、同じ関係に参加できるため、同じタイプとして認識される一連の現実または抽象的なものの表現
"representation of a system of interest, from the perspective of a related set of concerns",関連する一連の関心事の観点から、対象となるシステムを表現する
representation of a test item that is used during the test case design process,テストケースの設計プロセス中に使用されるテスト項目の表現
representation of a type of user that includes a concise summary of the characteristics of the user that is most informative to the design or illustrative of specific user requirements,設計に最も有益な、または特定のユーザー要件の説明となる、ユーザーの特性の簡潔な概要を含む、ユーザーのタイプの表現
representation of a whole system from the perspective of a related set of concerns,関連する一連の関心事の観点からシステム全体を表現する
"representation of additional, detailed, or derived design information organized with reference to an existing design view",既存の設計ビューを参照して編成された追加の、詳細な、または派生した設計情報の表現
representation of different values for a decision which the decision-maker can choos,意思決定者が選択できる、意思決定に対するさまざまな値の表現
representation of discrete cash-flow instances at the end of the period in which they occur (in contrast to showing them at the beginning),個別のキャッシュ フロー インスタンスを、それが発生する期間の終了時に表示します (開始時に表示するのとは対照的に)。
"representation of facts, concepts, or instructions in a manner suitable for communication, interpretation, or processing by humans or by automatic means",人間または自動手段によるコミュニケーション、解釈、または処理に適した方法での事実、概念、または指示の表現
representation of how the uncertainties inherent in a project decrease over the duration of the project,プロジェクトに内在する不確実性がプロジェクト期間中にどのように減少するかを表現したもの
representation of interface responsibilities through specified algorithms and representation properties,指定されたアルゴリズムと表現プロパティによるインターフェイスの責任の表現
"representation of software created to facilitate analysis, planning, implementation, and decision-making",分析、計画、実装、意思決定を容易にするために作成されたソフトウェアの表現
representation of something that suppresses certain aspects of the modeled subject,モデル化された主題の特定の側面を抑制する何かの表現
representation of the achieved level of a process quality characteristic derived from the process attribute ratings for an assessed process,評価されたプロセスのプロセス属性評価から導出されるプロセス品質特性の達成レベルの表現
representation of the difference between cash flows of two alternatives or proposals,2 つの代替案または提案のキャッシュ フローの差の表現
representation of what the user will see while using the software,ソフトウェアの使用中にユーザーに表示されるものの表現
"representation, as a series of cash amounts at regular intervals, of the cumulative to-date value of an alternativ",代替案の現在までの累計価値を一定の間隔で一連の現金金額として表現するもの
representations of information dealt with by information systems and users thereof,情報システムおよびその利用者によって扱われる情報の表現
represented by boxes with diagonal striping.,斜めの縞模様のボックスで表されます。
request for change,変更のリクエスト
request for information,情報の要求
"request for information, advice, access to a service, or a pre-approved change",情報、アドバイス、サービスへのアクセス、または事前に承認された変更の要求
request for proposal,提案の依頼
request for quotation,見積依頼
request for service(s) or action(s) with respect to an application or a related service,アプリケーションまたは関連サービスに関するサービスまたはアクションのリクエスト
request where the client pauses to wait for completion of the request,クライアントがリクエストの完了を待つために一時停止するリクエスト
request/response exchange,リクエスト/レスポンスの交換
required degree of confidence that the system-of-interest meets th associated integrity level claim,対象システムが関連する整合性レベルの要求を満たしているかどうかに必要な信頼度
"required, recommended, or permissible action, intended to contribute to the achievement of one or more outcomes of a process",プロセスの 1 つまたは複数の結果の達成に貢献することを目的とした、必須、推奨、または許容されるアクション
requirement affecting product and service acquisition or development that is not a property of the product or service,製品やサービスの所有物ではない、製品やサービスの取得または開発に影響を与える要件
requirement deduced or inferred from the collection and organization of requirements into a particular system configuration and solution,特定のシステム構成およびソリューションへの要件の収集および編成から推定または推測される要件
"requirement employed to prescribe a disciplined, uniform approach to providing consistency in a software product, that is, a uniform pattern or form for arranging data",ソフトウェア製品に一貫性を提供するための規律ある統一的なアプローチ、つまりデータを配置するための統一的なパターンまたは形式を規定するために採用される要件
requirement of a normative document that must be fulfilled in order to comply with a particular option permitted by that document,規範文書によって許可されている特定のオプションに準拠するために満たさなければならない規範文書の要件
requirement of a normative document that must necessarily be fulfilled in order to comply with that document,規範文書に準拠するために必ず満たさなければならない規範文書の要件
"requirement that a software attribute be present in software to satisfy a contract, standard, specification, or other formally imposed document",契約、標準、仕様、またはその他の正式に課された文書を満たすために、ソフトウェア属性がソフトウェア内に存在するという要件
requirement that a software quality attribute be present in software,ソフトウェア品質属性がソフトウェアに存在するという要件
requirement that imposes conditions on a functional requirement.,機能要件に条件を課す要件。
requirement that is needed to ensure the safety of the product,製品の安全性を確保するために必要な要件
"requirement that is not explicitly stated in customer requirements, but is inferred from contextual requirements (such as applicable standards, laws, policies, common practices, and management decisions) or from requirements needed to specify a product or service component",顧客要件には明示的に記載されていないが、状況に応じた要件 (適用される標準、法律、ポリシー、一般的な慣行、管理上の決定など)、または製品またはサービスのコンポーネントを指定するために必要な要件から推測される要件。
requirement that levies all or part of the performance and functionality of a higher- -level requirement on a lowe level architectural element or design component,上位レベルの要件のパフォーマンスと機能のすべてまたは一部を下位レベルのアーキテクチャ要素または設計コンポーネントに課す要件
requirement that specifies a function that a system or system component shall perform,システムまたはシステムコンポーネントが実行する機能を指定する要件
requirement that specifies a physical characteristic that a system or system component must possess,システムまたはシステムコンポーネントが備えなければならない物理的特性を指定する要件
"requirement that specifies an external item with which a system or system component must interact, or that sets forth constraints on formats, timing, or other factors caused by such an interaction",システムまたはシステムコンポーネントが相互作用する必要がある外部項目を指定する要件、またはそのような相互作用によって生じる形式、タイミング、またはその他の要因に対する制約を規定する要件
requirement that specifies or constrains the coding or construction of a system or system component,システムまたはシステムコンポーネントのコーディングまたは構築を指定または制約する要件
requirement that specifies or constrains the design of a system or system component,システムまたはシステムコンポーネントの設計を指定または制約する要件
"requirement that the project has verified as satisfying project-specific criteria (such as clarity, suitability, and feasibility) and has validated to be an accurate representation of stakeholder needs, wants, and expectations",プロジェクトがプロジェクト固有の基準（明確性、適合性、実現可能性など）を満たしていることが検証され、利害関係者のニーズ、要望、期待を正確に表現していることが検証されているという要件
"requirements documents, source code modules, measurement definitions",要件ドキュメント、ソースコードモジュール、測定定義
"Requirements engineering is concerned with discovering, eliciting, developing, analyzing, determining verification methods, validating, communicating, documenting, and managing requirements",要件エンジニアリングは、要件の発見、抽出、開発、分析、検証方法の決定、検証、伝達、文書化、および管理に関係します。
"Requirements exist at different tiers and express the need in high-level form. A requirement is denoted by the word 'shall' and when used includes both the exclusive and applicable optional requirements. Requirements provide value when delivered, satisfied, or met. Requirements include the quantified and documented needs, wants, and expectations of the sponsor, customer, and other stakeholders.",要件はさまざまな層に存在し、必要性を高レベルの形式で表現します。要件は「するものとする」という単語で示され、使用される場合には、排他的要件と適用可能なオプション要件の両方が含まれます。要件は、提供、満足、または満たされたときに価値を提供します。要件には、スポンサー、顧客、その他の利害関係者の、定量化され文書化されたニーズ、要望、期待が含まれます。
requirements for use that provide the basis for design and evaluation of interactive systems to meet identified user needs,特定されたユーザーのニーズを満たす対話型システムの設計と評価の基礎を提供する使用要件
"requirements imposed by a governmental body. These requirements can establish product, process or service characteristics, including applicable administrative provisions that have government-mandated compliance",政府機関によって課される要件。これらの要件により、政府がコンプライアンスを義務付けている該当する管理規定を含む、製品、プロセス、またはサービスの特性を確立できます。
"requirements relating to the technology and environment, for the development, maintenance, support and execution of the software",ソフトウェアの開発、保守、サポート、実行のための技術および環境に関する要件
requirements specific to an application or requirements not covered in domain requirements,アプリケーション固有の要件、またはドメイン要件に含まれない要件
requirements traceability matrix,要件トレーサビリティ マトリックス
"requirements, design, and implementation that define a particular version of a system or system component",システムまたはシステムコンポーネントの特定のバージョンを定義する要件、設計、および実装
"requirements, design, code, test cases, and version number",要件、設計、コード、テスト ケース、バージョン番号
research and development,研究開発
resource breakdown structure,リソースの内訳構造
Resource Description Framework,リソース説明フレームワーク
"Resources can include other software products, the software and hardware configuration of the system, and materials (e.g. print paper, storage media).",リソースには、他のソフトウェア製品、システムのソフトウェアおよびハードウェア構成、および資料 (印刷用紙、記憶媒体など) が含まれる場合があります。
resources expended in relation to the accuracy and completeness with which users achieve goals,ユーザーが目標を達成する正確さと完全性に関連して費やされるリソース
"resources required to acquire, process, store and disseminate information",情報の取得、処理、保存、配布に必要なリソース
responses provided which may be used in the event that a specific trigger occurs,特定のトリガーが発生した場合に使用できる応答が提供されます
"Responsibilities include contributing significant portions of the software being developed by the team, aiding the chief programmer in reviewing the work of other team members, substituting for the chief programmer when necessary, and having an overall technical understanding of the software being developed.",責任には、チームによって開発されているソフトウェアの重要な部分に貢献すること、チーフ プログラマーが他のチーム メンバーの作業をレビューするのを支援すること、必要に応じてチーフ プログラマーの代わりを務めること、開発中のソフトウェアの全体的な技術的理解を含むことが含まれます。
responsibility assignment matrix,責任割り当てマトリックス
responsibility for achievement of a quality requirement or decomposition thereof,品質要件の達成またはその分解に対する責任
responsibility that applies to each instance of the class individually,クラスの各インスタンスに個別に適用される責任
responsibility that is a statement of facts that are required to be true in order for the constraint to be met,制約を満たすために真実である必要がある事実の記述である責任
responsibility that is an inherent or distinctive characteristic or trait that manifests some aspect of an object's knowledge or behavior,対象の知識や行動の何らかの側面を明らかにする、固有のまたは際立った特徴または特質である責任
responsibility that is not hidden,隠されていない責任
responsibility that is visible only to the class or the receiving instance of the class (available only within methods of the class or its subclasses),クラスまたはクラスの受信側インスタンスのみに表示される責任 (クラスまたはそのサブクラスのメソッド内でのみ使用可能)
responsibility that is visible only to the class or the receiving instance of the class (available only within methods of the class),クラスまたはクラスの受信側インスタンスのみに表示される責任 (クラスのメソッド内でのみ使用可能)
"responsibility that represents some aspect of the knowledge, behavior, or rules of the class as a whole",クラス全体の知識、行動、またはルールの一部を表す責任
"responsible, accountable, consult, and inform",責任がある、説明責任がある、相談する、知らせる
responsive web design,レスポンシブウェブデザイン
"restoration of a system, program, database, or other system resource to a state in which it can perform required functions",システム、プログラム、データベース、またはその他のシステム リソースを、必要な機能を実行できる状態に復元すること
restriction on rights or privileges granted by a software entitlement,ソフトウェア資格によって付与される権利または特権の制限
restriction on software life cycle process (SLCP) development,ソフトウェア ライフ サイクル プロセス (SLCP) 開発の制限
restriction on the value of an attribute or the existence of any object based on the value or existence of one or more others,他の 1 つまたは複数の値または存在に基づく、属性の値またはオブジェクトの存在に対する制限
restriction placed on the use of the assessment outputs or on the assessment team's freedom of choice regarding the conduct of the assessment,評価結果の使用または評価の実施に関する評価チームの選択の自由に課される制限
"restrictions on the content, timing, audience, or individual who will deliver a communication usually stemming from specific legislation or regulation, technology, or organizational policies",通常、特定の法律や規制、テクノロジー、または組織のポリシーに起因する、コミュニケーションを行う内容、タイミング、聴衆、または個人に対する制限。
result from a normal execution of a performance workload against a system without performing disturbance injection,妨害注入を実行せずにシステムに対するパフォーマンス ワークロードを通常どおり実行した結果
"result obtained after the binding of variables in the term, the computation of the results of the associated functions, and any simplifications performed (such as gathering like terms to obtain the symbolic sum representation of a multiset)",項内の変数の結合、関連する関数の結果の計算、および実行された単純化 (マルチセットの記号和表現を取得するために類似した項を収集するなど) 後に得られる結果。
result of a copy process as in (1),(1)のコピー処理結果
result of a decision (which therefore determines the control flow alternative taken),決定の結果 (したがって、選択される制御フローの代替案が決定されます)
result of a normalization process that transforms groups of data so that each non-key attribute depends on the key attribute(s) of the group of data and all parts of the key attribute(s),各非キー属性がデータ グループのキー属性とキー属性のすべての部分に依存するようにデータ グループを変換する正規化プロセスの結果。
result of a normalization process that transforms groups of data so that each non-key attribute does not depend on any other non-key attribut,各非キー属性が他の非キー属性に依存しないようにデータのグループを変換する正規化プロセスの結果
result of a problem with an identified root cause or an identified workaround that reduces or eliminates its impact,特定された根本原因による問題の結果、またはその影響を軽減または排除する特定の回避策
result of a process,プロセスの結果
result of activities that better the performance and maturity of the organization's processes,組織のプロセスのパフォーマンスと成熟度を向上させる活動の結果
result of applying the approach in (1),(1)のアプローチを適用した結果
"result of eliciting, consolidating, and resolving conflicts among the needs, expectations, constraints, and interfaces of the product's relevant stakeholders in a way that is acceptable to the customer",製品の関連利害関係者のニーズ、期待、制約、インターフェース間の矛盾を顧客が受け入れられる方法で引き出し、統合し、解決した結果
result of not having accurate or sufficient knowledge of a situation,状況についての正確または十分な知識がないことの結果
"result of the analysis and refinement of customer requirements into a set of requirements suitable to be included in one or more solicitation packages, formal contracts, or supplier agreements between the acquirer and other appropriate organizations",顧客要件を分析し、取得者と他の適切な組織との間の 1 つ以上の勧誘パッケージ、正式契約、またはサプライヤー契約に含めるのに適した一連の要件に絞り込んだ結果
"result of the distribution of requirements, resources, or other entities among the components of a system or program",システムまたはプログラムのコンポーネント間での要件、リソース、またはその他のエンティティの分散の結果
result of the domain analysis process.,ドメイン分析プロセスの結果。
result of the process in (1),(1)の処理結果
result of the process in (1)3. definition that provides the information needed to create an object and allow the object to participate in providing an appropriate set of services.,（１）の処理結果３．オブジェクトを作成し、オブジェクトが適切なサービスのセットの提供に参加できるようにするために必要な情報を提供する定義。
"results of an appraisal that identify the most important issues, problems, or opportunities for process improvement within the appraisal scope",評価範囲内の最も重要な問題、問題、またはプロセス改善の機会を特定する評価の結果
retesting to detect faults introduced by modification,変更によって生じた障害を検出するための再テスト
return on investment,投資収益率
returned signal,返された信号
reusable artifacts produced during domain requirements engineering,ドメイン要件エンジニアリング中に生成される再利用可能な成果物
reusable assets produced from both domain and application engineering,ドメイン エンジニアリングとアプリケーション エンジニアリングの両方から生成された再利用可能な資産
reusable design (models and/or code) that can be refined (specialized) and extended to provide some portion of the overall functionality of many applications.,多くのアプリケーションの全体的な機能の一部を提供するために洗練 (特殊化) および拡張できる再利用可能な設計 (モデルおよび/またはコード)。
"reuse-based approach to defining the scope (i.e., domain definition), specifying the structure (i.e., domain architecture), and building the assets for a class of systems, subsystems, or applications",スコープの定義 (つまり、ドメイン定義)、構造 (つまり、ドメイン アーキテクチャ) の指定、およびシステム、サブシステム、またはアプリケーションのクラスの資産の構築に対する再利用ベースのアプローチ
"revenue (positive cash flow) that results from decreasing expenses, rather than from increasing income",収入の増加ではなく、支出の減少から生じる収益（プラスのキャッシュフロー）
review and determination of the timing of actions which may need to occur sooner than other risk items,他のリスク項目よりも早く行う必要がある行動のタイミングの検討と決定
review as in (1) for any hardware or software component,ハードウェアまたはソフトウェア コンポーネントについては (1) と同様に確認してください。
review as in (1) for any software component,任意のソフトウェア コンポーネントについて (1) と同様にレビューします。
review as in (1) of any hardware or software component,ハードウェアまたはソフトウェア コンポーネントの (1) と同様のレビュー
"review conducted to evaluate preliminary test results for one or more configuration items; to verify that the test procedures for each configuration item are complete, comply with test plans and descriptions, and satisfy test requirements; and to verify that a project is prepared to proceed to formal testing of the configuration items",1 つ以上の構成項目の予備テスト結果を評価するために実施されるレビュー。各構成項目のテスト手順が完了していること、テスト計画と説明に準拠していること、およびテスト要件を満たしていることを検証する。プロジェクトが構成アイテムの正式なテストに進む準備ができているかどうかを確認するため
review conducted to evaluate the completeness and adequacy of the requirements defined for a system; to evaluate the system engineering process that produced those requirements; to assess the results of system engineering studies; and to evaluate system engineering plans,システムに対して定義された要件の完全性と適切性を評価するために行われるレビュー。それらの要件を生み出したシステムエンジニアリングプロセスを評価する。システム工学の研究結果を評価する。システムエンジニアリング計画を評価するため
"review conducted to evaluate the manner in which the requirements for a system have been allocated to configuration items, the system engineering process that produced the allocation, the engineering planning for the next phase of the effort, manufacturing considerations, and the planning for production engineering",システムの要件が構成項目に割り当てられた方法、割り当てを作成したシステム エンジニアリング プロセス、取り組みの次の段階のエンジニアリング計画、製造上の考慮事項、および生産エンジニアリングの計画を評価するために行われるレビュー。
"review conducted to evaluate the progress, technical adequacy, and risk resolution of the selected design approach for one or more configuration items; to determine each design's compatibility with the requirements for the configuration item; to evaluate the degree of definition and assess the technical risk associated with the selected manufacturing methods and processes; to establish the existence and compatibility of the physical and functional interfaces among the configuration items and other items of equipment, facilities, software and personnel; and, as applicable, to evaluate the preliminary operational and support documents",1 つ以上の構成項目について選択された設計アプローチの進捗状況、技術的適切性、およびリスク解決を評価するために実施されるレビュー。各設計が構成アイテムの要件と互換性があるかどうかを判断します。定義の程度を評価し、選択した製造方法およびプロセスに関連する技術的リスクを評価する。機器、設備、ソフトウェア、人員の構成項目とその他の項目の間の物理的および機能的インターフェイスの存在と互換性を確立する。そして、必要に応じて、予備的な運用文書とサポート文書を評価します。
"review conducted to verify that the detailed design of one or more configuration items satisfy specified requirements; to establish the compatibility among the configuration items and other items of equipment, facilities, software, and personnel; to assess risk areas for each configuration item; and, as applicable, to assess the results of producibility analyses, reviewpreliminary hardware product specifications, evaluate preliminary test planning, and evaluate the adequacy of preliminary operation and support documents",1 つ以上の構成アイテムの詳細設計が指定された要件を満たしていることを確認するために行われるレビュー。機器、設備、ソフトウェア、人材の構成項目とその他の項目間の互換性を確立する。各構成アイテムのリスク領域を評価する。また、必要に応じて、生産性分析の結果を評価し、予備的なハードウェア製品仕様を確認し、予備的なテスト計画を評価し、予備的な操作およびサポート文書の適切性を評価します。
"review of a software product to determine compliance with requirements, standards, and contractual documents",要件、標準、および契約文書への準拠を判断するためのソフトウェア製品のレビュー
review of the requirements specified for one or more software configuration items to evaluate their responsiveness to and interpretation of the system requirements and to determine whether they form a satisfactory basis for proceeding into preliminary design of the configuration items,1 つ以上のソフトウェア構成項目に指定された要件をレビューして、システム要件への応答性と解釈を評価し、それらが構成項目の予備設計に進むための十分な基礎を形成しているかどうかを判断します。
review of work products performed by others qualified to do the same work,同じ作業を行う資格のある他の人が行った作業成果物のレビュー
review or audit artifacts that are expected through conduct of the technical review or audit and that can be considered elements of exit criteria,技術的なレビューまたは監査の実施を通じて予期され、終了基準の要素とみなされるレビューまたは監査成果物
"reviews, static analysis.",レビュー、静的分析。
"right granted to receive, install, or use an installation of a previous version of software than the currently granted entitlement",現在付与されている権利よりも前のバージョンのソフトウェアを受信、インストール、または使用するために付与される権利
rigor to be applied during the evaluation that defines the depth or thoroughness of the evaluation in terms of evaluation techniques to be applied and evaluation results to be achieved,評価中に適用される厳密さ。適用される評価手法および達成される評価結果に関して、評価の深さまたは徹底的さを定義する。
"Risk acceptability can apply to an individual risk or to a collection of risks, such as the totality of risks confronting a project or enterprise. Acceptability can differ for different categories of risk and can depend on the cost of treatment or other factors.",リスク受容性は、個々のリスク、またはプロジェクトや企業が直面するリスク全体などのリスクの集合に適用できます。許容範囲はリスクのカテゴリーによって異なり、治療費やその他の要因によっても異なります。
risk breakdown structure,リスク内訳構造
"Risk criteria can include associated cost and benefits, legal and statutory requirements, socio-economic and environmental aspects, the concerns of stakeholders, priorities and other inputs to the assessment.",リスク基準には、関連するコストと便益、法的要件、法的要件、社会経済的および環境的側面、利害関係者の懸念、優先順位、および評価へのその他の入力が含まれます。
"Risk exposure is commonly defined as the product of a probability and the magnitude of a consequence, that is, an expected value or expected exposure.",リスクエクスポージャは一般に、確率と結果の大きさの積、つまり期待値または期待エクスポージャとして定義されます。
"Risk is often characterized by reference to potential events and consequences, or a combination of these. Risk is often expressed in terms of a combination of the consequences of an event and the associated likelihood of occurrence. Uncertainty is the state, even partial, of deficiency of information related to, understanding or knowledge of, an event, its consequence, or likelihood. [SOURCE: ISO Guide 73:2009]",リスクは、多くの場合、潜在的な出来事や結果、またはそれらの組み合わせへの言及によって特徴付けられます。リスクは多くの場合、イベントの結果とそれに関連する発生の可能性の組み合わせで表現されます。不確実性とは、出来事、その結果、または可能性に関する理解または知識に関連する情報が部分的であっても欠落している状態です。 [出典: ISO ガイド 73:2009]
"Risk reassessment is the identification of new risks, reassessment of current risks, and the closing of risks that are outdated",リスクの再評価とは、新しいリスクの特定、現在のリスクの再評価、および古くなったリスクの解消です。
"Risk reduction might involve research, prototyping, and other means of exploration.",リスクの軽減には、調査、プロトタイピング、その他の探索手段が含まれる場合があります。
risk related to the management of a project,プロジェクトの管理に関するリスク
risk remaining after risk treatment,リスク治療後に残るリスク
"risk that a product could be defective in some specific aspect of its function, quality, or structure",製品の機能、品質、構造の特定の側面に欠陥がある可能性があるリスク
"Risk treatment measures can include avoiding, optimizing, transferring, or retaining risk.",リスク処理手段には、リスクの回避、最適化、移転、または保持が含まれます。
risk-analysis technique that studies how changes in the values of estimated parameters affects the desirability of an alternative. Parameters where small changes in estimated values cause larger changes in desirability are said to be more sensitive. Sensitivity analysis guides the decision maker in identifying the estimated parameters (the sensitive ones) that deserve more careful study to improve the accuracy of the estimate.,推定パラメータの値の変化が代替案の望ましさにどのような影響を与えるかを研究するリスク分析手法。推定値の小さな変化が望ましさの大きな変化を引き起こすパラメータは、より敏感であると言われます。感度分析は、意思決定者が推定の精度を向上させるためにより慎重に調査する価値のある推定パラメータ (敏感なパラメータ) を特定するのに役立ちます。
"rlf _ (reb _ rea)/rmc, where reb is risk exposure before risk mitigation, rea is risk exposure after risk mitigation, and rmc is the risk mitigation activity's cost",rlf _ (reb _ rea)/rmc、ここで、reb はリスク軽減前のリスク エクスポージャー、rea はリスク軽減後のリスク エクスポージャー、rmc はリスク軽減活動のコストです。
role (with respect to an action) in which the enterprise object fulfilling the role is referenced in the action,ロール (アクションに関する) で、そのロールを満たすエンタープライズ オブジェクトがアクション内で参照されます。
"role (with respect to that action) in which the enterprise object fulfilling the role is essential to the action, requires allocation, or can become unavailable",ロール (そのアクションに関して) で、そのロールを満たすエンタープライズ オブジェクトがアクションに不可欠であるか、割り当てが必要であるか、または使用できなくなる可能性があるもの
role (with respect to that action) in which the enterprise object fulfilling the role participates in the action,役割を果たすエンタープライズオブジェクトがアクションに参加する（そのアクションに関する）役割
role name for the value class of the attribute,属性の値クラスのロール名
"role of a community, identifying behavior which takes place with the participation of objects that are not members of that community",コミュニティの役割、そのコミュニティのメンバーではないオブジェクトの参加によって発生する動作を識別する
"room used for project conferences and planning, often displaying charts of cost, schedule status, and other key project data.",プロジェクトの会議や計画に使用される部屋で、多くの場合、コスト、スケジュールのステータス、その他の主要なプロジェクト データのグラフが表示されます。
routine or set of routines provided in some assemblers and compilers to support the definition and use of macros,マクロの定義と使用をサポートするために一部のアセンブラおよびコンパイラで提供されるルーチンまたはルーチンのセット
routine that accomplishes the objectives in (1),(1)の目的を達成するためのルーチン
"routine that begins execution at the point at which operation was last suspended, and that is not required to return control to the program or subprogram that called it",操作が最後に一時停止された時点から実行を開始し、それを呼び出したプログラムまたはサブプログラムに制御を戻す必要のないルーチン
routine that controls the sequencing and positioning of overlays,オーバーレイの順序と配置を制御するルーチン
routine that does not return a value,値を返さないルーチン
routine that initiates and controls the transfer of pages between main and auxiliary storage,主記憶域と補助記憶域の間のページ転送を開始および制御するルーチン
"routine that provides access to a data structure that is hidden, usually because it is a global variable or used in an abstract data type.",通常はグローバル変数であるか、抽象データ型で使用されるために、隠されたデータ構造へのアクセスを提供するルーチン。
"routine that receives control when a specified event, such as an error, occurs",エラーなどの指定されたイベントが発生したときに制御を受け取るルーチン
"routine that responds to interrupt requests by storing the contents of critical registers, performing the processing required by the interrupt request, restoring the register contents, and restarting the interrupted process",重要なレジスタの内容を保存し、割り込み要求に必要な処理を実行し、レジスタの内容を復元し、中断されたプロセスを再開することによって、割り込み要求に応答するルーチン
routine that returns control to the program or subprogram that called it,呼び出し元のプログラムまたはサブプログラムに制御を戻すルーチン
"routine, often part of an assembler or compiler, that replaces each macroinstruction in a source program with the predefined sequence of instructions that the macroinstruction represents",ソース プログラム内の各マクロ命令を、そのマクロ命令が表す事前定義された一連の命令に置き換えるルーチン。多くの場合アセンブラまたはコンパイラの一部です。
"RS232, RS485",RS232、RS485
"rule governing the overriding of a property and requiring that the set of values acceptable for an input argument in the overriding property shall be a superset (includes the same set) of the set of values acceptable for that input argument in the overridden property, and the set of values acceptable for an output argument in the overriding property shall be a subset (includes the same set) of the set of values acceptable for that output argument in the overridden property",プロパティのオーバーライドを管理し、オーバーライドするプロパティの入力引数に許容される値のセットが、オーバーライドされるプロパティの入力引数に許容される値のセットのスーパーセット (同じセットを含む) であること、およびオーバーライドするプロパティの出力引数に許容される値のセットが、オーバーライドされるプロパティの出力引数に許容される値のセットのサブセット (同じセットを含む) であることを要求するルール
rule that specifies a valid condition of data,データの有効な条件を指定するルール
rules for need-to-know and access-to-information at each project organization level,各プロジェクト組織レベルでの知っておくべき情報と情報へのアクセスに関するルール
running a computer system in its intended environment to perform its intended functions,意図された機能を実行するために、意図された環境でコンピュータ システムを実行する
"safety critical items, fracture critical items, mission critical items, key characteristics",安全性が重要な項目、破壊が重要な項目、ミッションクリティカルな項目、主要な特性
Same meaning and node content as a node index.,意味およびノー​​ドの内容はノードインデックスと同じです。
Same meaning and node content as a node tree.,意味およびノー​​ドの内容はノード ツリーと同じです。
satisfies the specific goals of the process area,プロセス領域の特定の目標を満たします
saying that a subclass s generalizes to a superclass C means that every instance of class s is also an instance of class C,サブクラス s がスーパークラス C に一般化されるということは、クラス s のすべてのインスタンスがクラス C のインスタンスでもあることを意味します。
scaffolding code written for the purpose of exercising higher-level code before the lower-level routines that will ultimately b used are available,最終的に使用される下位レベルのルーチンが利用可能になる前に、上位レベルのコードを実行する目的で書かれたスキャフォールディング コード
scaffolding code written for the purpose of exercising lower level code when the higher-level code that will ultimately exercise it is not yet available,最終的に実行する上位レベルのコードがまだ利用できない場合に、下位レベルのコードを実行する目的で書かれたスキャフォールディング コード
scale in which the measurement values are categorical,測定値がカテゴリー化されたスケール
scale in which the measurement values are rankings,測定値をランク付けするスケール
scale in which the measurement values have equal distances corresponding to equal quantities of the attribute,属性の等しい量に対応する測定値の距離が等しいスケール
scale in which the measurement values have equal distances corresponding to equal quantities of the attribute where the value of zero corresponds to none of the attribute,測定値が等量の属性に対応する等しい距離を持ち、ゼロの値がどの属性にも対応しないスケール。
"scale point on an ordinal scale, which is used to categorize a measurement scale",順序スケール上のスケール点。測定スケールを分類するために使用されます。
"schedule activity without any predecessor activities or successor activities, causing a break in a schedule network path",先行アクティビティまたは後続アクティビティが存在しないスケジュール アクティビティにより、スケジュール ネットワーク パスが中断される
schedule as independent variable,独立変数としてのスケジュール
schedule performance index,スケジュールパフォーマンスインデックス
schedule variance,スケジュールの差異
scheduled event used to measure progress,進捗状況を測定するために使用されるスケジュールされたイベント
schema for use in characterizing a process quality characteristic of an implemented process,実装されたプロセスのプロセス品質特性を特徴付けるために使用されるスキーマ
scheme that lets a program look up information in a table rather than using logic statements,論理ステートメントを使用するのではなく、プログラムがテーブル内の情報を検索できるようにするスキーム
scheme that partitions a body of knowledge and defines the relationships among the pieces,知識体系を分割し、部分間の関係を定義するスキーム
science and discipline concerned with analyzing and documenting software requirements,ソフトウェア要件の分析と文書化に関係する科学と分野
scientific discipline concerned with the understanding of the interactions among human and other elements of a system.,人間とシステムの他の要素の間の相互作用の理解に関係する科学分野。
screenful of information on a video display terminal,ビデオ表示端末上の 1 画面分の情報
SDRAM can access data fractions in different memory banks simultaneously.,SDRAM は、異なるメモリ バンク内のデータ部分に同時にアクセスできます。
SDRAM designed for the graphics card of a computer,コンピュータのグラフィックスカード用に設計されたSDRAM
second stage of testing when a product is in limited production use,製品が実稼働環境で限定的に使用されている場合のテストの第 2 段階
second-generation language,第二世代言語
secondary or subordinate system within a larger system,大規模システム内のセカンダリまたは下位システム
section of a task's internal logic that is executed mutually exclusively with other tasks,他のタスクと相互排他的に実行されるタスクの内部ロジックのセクション
section title,セクションのタイトル
secure hash algorithm,安全なハッシュアルゴリズム
Secure Inter-ORB Protocol,安全な ORB 間プロトコル
secure sockets layer,セキュアソケット層
"secure storage environment, formed of physical media or of one or more electronic software repositories, capable of control and protection of definitive authorized versions of all software configuration items and masters of all software controlled by SAM",安全なストレージ環境。物理メディアまたは 1 つ以上の電子ソフトウェア リポジトリで構成され、すべてのソフトウェア構成アイテムの正式な認可バージョンと、SAM によって制御されるすべてのソフトウェアのマスターを制御および保護できます。
security attribute service,セキュリティ属性サービス
"security testing, functional testing, usability testing, performance testing",セキュリティテスト、機能テスト、ユーザビリティテスト、パフォーマンステスト
see data definition,データ定義を参照
See ISO/IEC Guide 51 for issues related to safety.,安全性に関する問題については、ISO/IEC ガイド 51 を参照してください。
"segmenting a project into an early phase that focuses on gathering requirements, addressing major risks, and project planning; and a later phase that completes the project if the outcome of the first phase is favorable.",プロジェクトを初期段階に分割し、要件の収集、主要なリスクへの対処、プロジェクト計画に重点を置く。そして、最初のフェーズの結果が良好であれば、プロジェクトを完了する後のフェーズです。
"selection of one design that satisfies the requirements without examining other, potentially more effective, designs",より効果的である可能性のある他の設計を検討することなく、要件を満たす 1 つの設計を選択すること
selective dump of those storage locations whose contents have changed since some specified time or event,指定された時刻またはイベント以降に内容が変更された保管場所の選択的ダンプ
selective retesting of a system or component to verify that modifications have not caused unintended effects and that the system or component still complies with its specified requirements,システムまたはコンポーネントを選択的に再テストして、変更によって意図しない影響が生じていないこと、およびシステムまたはコンポーネントが依然として指定された要件を満たしていることを検証すること
self-managed transaction,自己管理トランザクション
"self-motivated and self-determined professional process improvement with an understanding of the wor (process) objectives, latest technology, and outcomes from product use",作業（プロセス）の目的、最新のテクノロジー、製品の使用による結果を理解した、自発的かつ自己決定的な専門的なプロセスの改善
semantic connection between model elements,モデル要素間のセマンティックな接続
semantic consistency among the contents of information items,情報項目の内容間の意味的一貫性
"semantic notion by which the responsibilities (properties and constraints) of a subclass are considered to include the responsibilities of a superclass, in addition to its own, specifically declared responsibilities",サブクラスの責任 (プロパティと制約) には、明確に宣言された独自の責任に加えて、スーパークラスの責任も含まれるとみなされる意味概念
semantic transfer language,セマンティック転送言語
semantically closed abstraction of a system or a complete description of a system from a particular perspective,意味的に閉じられたシステムの抽象化、または特定の観点からのシステムの完全な説明
semiconductor device based on a leadframe with gull wing-shaped leads on all four side,四辺すべてにガルウィング形のリードを備えたリードフレームをベースにした半導体デバイス
separate test effort that has its own documentation and resources,独自のドキュメントとリソースを持つ個別のテスト作業
separately compilable piece of code,個別にコンパイル可能なコード部分
"separately compilable software component consisting of related data types, data objects, and subprograms",関連するデータ型、データオブジェクト、およびサブプログラムで構成される個別にコンパイル可能なソフトウェアコンポーネント
"separately compilable, executable component of a computer program",コンピュータプログラムの個別にコンパイル可能かつ実行可能なコンポーネント
separately identifiable body of information that is produced and stored for human use during a system or software life cycle,システムまたはソフトウェアのライフサイクル中に人間が使用するために生成および保存される、個別に識別可能な情報の本体
"separately identifiable body of information that is produced, stored, and delivered for human use",人間が使用する目的で生成、保存、配信される、個別に識別可能な情報本体
separately identified piece of documentation which could be part of a documentation set,文書セットの一部である可能性がある、個別に識別された文書の一部
separately testable element specified in the design of a computer software component,コンピュータソフトウェアコンポーネントの設計で指定された個別にテスト可能な要素
"separation of arrow meanings, expressed by branching arrow segments",矢印の意味の分離。矢印セグメントの分岐によって表現されます。
separation or decomposing of a top-level requirement or design into successively lower-level detaile requirements or design,最上位の要件または設計を、連続する下位レベルの詳細な要件または設計に分離または分解すること
"sequence in which data transfer, use, and transformation are performed during the execution of a computer program",コンピュータプログラムの実行中にデータの転送、使用、変換が実行される順序
sequence in which operations are performed during the execution of a computer program,コンピュータプログラムの実行中に実行される操作の順序
sequence in which operations are performed during the execution of a test item,テスト項目の実行中に操作が実行される順序
"sequence of actions within an activity where, for each adjacent pair of actions, occurrence of the first action is necessary for the occurrence of the second action",アクティビティ内のアクションのシーケンス。隣接するアクションのペアごとに、最初のアクションの発生が 2 番目のアクションの発生に必要です。
sequence of bits or characters that has meaning and is considered an entity in some language,意味があり、ある言語ではエンティティとみなされているビットまたは文字のシーケンス
"sequence of bits or characters that is stored, addressed, transmitted, and operated on as a unit within a given computer",特定のコンピュータ内で 1 つの単位として保存、アドレス指定、送信、および操作されるビットまたは文字のシーケンス
"sequence of computer instructions and, possibly, data necessary to perform a call to another module",一連のコンピューター命令と、場合によっては別のモジュールの呼び出しを実行するために必要なデータ
sequence of computer instructions in which there are no loops,ループのない一連のコンピューター命令
sequence of computer instructions that is physically contiguous with the instructions that logically precede and follow it,論理的に前後の命令と物理的に連続している一連のコンピュータ命令
sequence of computer program statements that is executed repeatedly until a given condition is met or while a given condition is true,所定の条件が満たされるまで、または所定の条件が真である間、繰り返し実行されるコンピューター プログラム ステートメントのシーケンス
sequence of executable statements of a test item,テスト項目の実行可能なステートメントのシーケンス
sequence of executable statements within a test item,テスト項目内の実行可能なステートメントのシーケンス
sequence of instructions treated as a basic unit of work by the supervisory program of an operating system,オペレーティング システムの監視プログラムによって基本的な作業単位として扱われる一連の命令
"sequence of instructions, called microinstructions, specifying the basic operations needed to carry out a machine language instruction",マイクロ命令と呼ばれる命令のシーケンス。機械語命令を実行するために必要な基本操作を指定します。
sequence of one or more steps not involving branching or iteration,分岐や反復を含まない 1 つ以上のステップのシーケンス
sequence of operations for performing a specific task,特定のタスクを実行するための一連の操作
sequence of programs or jobs set up so that a computer can proceed from one to the next without the need for operator intervention,オペレーターの介入を必要とせずにコンピュータが次から次へと処理できるように設定された一連のプログラムまたはジョブ
"sequence of tasks that a system can perform, interacting with users of the system and providing a measurable result of value for the user",システムが実行できる一連のタスク。システムのユーザーと対話し、ユーザーに価値のある測定可能な結果を​​提供します。
"sequence of test cases in execution order, associated actions to set up the initial preconditions, and wrap-up activities post execution",実行順序でのテスト ケースのシーケンス、初期前提条件を設定するための関連アクション、および実行後のラップアップ アクティビティ
serial bus interface,シリアルバスインターフェース
serial communication interface,シリアル通信インターフェース
serial communication interface with two data lines and two power lines between a computer and peripherals,コンピュータと周辺機器の間に 2 本のデータ線と 2 本の電力線を備えたシリアル通信インターフェイス
serial expansion interface,シリアル拡張インターフェース
serial peripheral interface,シリアルペリフェラルインターフェイス
series of conflicting and mutually reversing commits introduced by developers who disagree on how a particular element is being coded,特定の要素のコーディング方法について意見の異なる開発者によって導入された、一連の競合し相互に逆転するコミット。
"series of systems engineering activities conducted at logical transition points in a system life cycle, by which the progress of a program is assessed relative to its technical requirements using a mutually agreed-upon set of criteri",システム ライフ サイクルの論理的な移行点で実施される一連のシステム エンジニアリング活動。相互に合意された一連の基準を使用して、プログラムの進捗状況が技術要件と比較して評価されます。
"series of tasks and steps that, when completed, enable the evaluation team to determine if the product, process or service being evaluated is conformant to a particular standard",一連のタスクとステップ。完了すると、評価チームが評価対象の製品、プロセス、またはサービスが特定の規格に準拠しているかどうかを判断できるようになります。
Server Conversion Code Sets,サーバー変換コードセット
Server Makes It Right,サーバーが正しく機能する
Server Native Code Set,サーバーネイティブコードセット
Servers and network devices have generally replaced minicomputers,サーバーとネットワーク デバイスは一般にミニコンピューターに取って代わりました
service level agreement,サービスレベル契約
service management system,サービス管理システム
service primitive for which the protocol object is the initiating object of the corresponding communication,プロトコルオブジェクトが対応する通信の開始オブジェクトであるサービスプリミティブ
service primitive for which the protocol object is the responding object of the corresponding communication,プロトコルオブジェクトが対応する通信の応答オブジェクトであるサービスプリミティブ
service that must be implemented in the piece of software in order to fulfill functional user requirements,ユーザーの機能要件を満たすためにソフトウェアに実装する必要があるサービス
set,セット
set (one or more) of software configuration items formally designated and fixed at a specific time during the software life cycle,ソフトウェアのライフサイクル中の特定の時点で正式に指定および修正された一連の（1 つ以上の）ソフトウェア構成アイテム
set containing the currently existing instances of a class,クラスの現在存在するインスタンスを含むセット
set of a many-sorted algebra,さまざまに分類された代数のセット
set of acceptable policy values that could be applied at a particular policy declaration,特定のポリシー宣言時に適用できる許容可能なポリシー値のセット
set of action signatures associated with the interactions of an interface,インターフェースのインタラクションに関連付けられたアクション シグネチャのセット
"set of actions that consume time and resources and whose performance is necessary to achieve, or contribute to, the realization of one or more outcomes",時間とリソースを消費し、その実行が 1 つ以上の結果を達成する、または実現に貢献するために必要な一連のアクション
set of activities by which an organization brings CASE tools into widespread use,組織が CASE ツールを広く普及させるための一連の活動
set of activities conducted to facilitate discovery or evaluation of properties of one or more test items,1 つ以上のテスト項目の特性の発見または評価を促進するために実施される一連の活動
"set of activities designed to evaluate the quality of developed or manufactured products2. monitoring service performance or product quality, recording results, and recommending necessary changes",開発または製造された製品の品質を評価するために設計された一連の活動2。サービスのパフォーマンスや製品の品質を監視し、結果を記録し、必要な変更を推奨する
set of activities for developing a new product or enhancing an existing product,新製品の開発または既存製品の強化のための一連の活動
set of activities necessary to ensure that an operational system or component fulfills its original requirements and any subsequent modifications to those requirements,運用システムまたはコンポーネントが元の要件とその後のそれらの要件への変更を確実に満たすために必要な一連のアクティビティ
set of activities that define and assess the adequacy of software processes to provide evidence that establishes confidence that the software processes are appropriate for and produce software products of suitable quality for their intended purposes,ソフトウェア プロセスが適切であるという確信を確立する証拠を提供し、意図された目的に適した品質のソフトウェア製品を生産するために、ソフトウェア プロセスの適切性を定義および評価する一連の活動
set of activities undertaken by an individual professional to maintain professional competence,専門的能力を維持するために個々の専門家が行う一連の活動
"set of all possible instantiations of a singular concept, either physical or data, within an IDEF0 model.",IDEF0 モデル内の物理的またはデータの単一概念のすべての可能なインスタンス化のセット。
set of artifacts developed to facilitate the implementation of a set of practices of the selected framework in a very small entity,非常に小規模なエンティティで選択されたフレームワークの一連のプラクティスの実装を容易にするために開発された一連の成果物
"set of attributes that are unique to a specific user or user group, such as job function or subscription to a service, used to control the parts of the system or web page that users can access",ユーザーがアクセスできるシステムまたは Web ページの部分を制御するために使用される、ジョブ機能やサービスへのサブスクリプションなど、特定のユーザーまたはユーザー グループに固有の属性のセット
"set of behaviors or conditions of a test item, or set of conditions of associated data or the test environment, observed as a result of test execution",テスト実行の結果として観察される、テスト項目の一連の動作または条件、または関連するデータまたはテスト環境の一連の条件
"set of capabilities and processes to direct and control the service provider's activities and resources for the design, transition, delivery and improvement of services to fulfill the service requirements",サービス要件を満たすためのサービスの設計、移行、提供、改善のためのサービス プロバイダーの活動とリソースを指示および制御するための一連の機能とプロセス
set of cohesive tasks of a process,プロセスのまとまったタスクのセット
"set of cohesive tasks of a process, which transforms inputs into outputs",入力を出力に変換する、プロセスのまとまったタスクのセット
"set of computer programs, procedures, and possibly associated documentation and data",コンピューター プログラム、手順、およびおそらく関連する文書とデータのセット
"set of computer programs, procedures, database- and other data structure descriptions and associated documentation",コンピューター プログラム、手順、データベースおよびその他のデータ構造の説明、および関連ドキュメントのセット
set of conditions required for the successful execution of a binding behavior,バインド動作を正常に実行するために必要な一連の条件
set of conditions that must be met in order for a particular program path to be executed,特定のプログラム パスを実行するために満たさなければならない一連の条件
set of conditions to be satisfied by a process instance at completion,完了時にプロセスインスタンスが満たすべき一連の条件
"set of conventions that govern the interaction of processes, devices, and other components within a system",システム内のプロセス、デバイス、その他のコンポーネントの相互作用を管理する一連の規則
set of criteria or conditions that have to be met in order to qualify a software product as complying with its specifications and being ready for use in its target environment or integration with its containing system,ソフトウェア製品がその仕様に準拠し、ターゲット環境での使用またはそのソフトウェア製品を含むシステムとの統合の準備ができていると認定するために満たさなければならない一連の基準または条件。
"set of data items, each of which has the same data definition",それぞれが同じデータ定義を持つデータ項目のセット
set of data related to a given subject and organized in such a way that it can be consulted by subscribers,特定の主題に関連し、購読者が参照できるように編成された一連のデータ
set of data which is processed in a single iteration of the main procedure,メインプロシージャの 1 回の反復で処理されるデータのセット
set of definitions of the processes used to guide processes in an organization,組織内のプロセスをガイドするために使用されるプロセスの一連の定義
set of definitions that includes arrow labels and box names used in an IDEF0 model,IDEF0 モデルで使用される矢印ラベルとボックス名を含む一連の定義
set of elements in a process assessment model explicitly related to the process measurement framework for the specified process quality characteristic,指定されたプロセス品質特性のプロセス測定フレームワークに明示的に関連するプロセス評価モデル内の要素のセット
set of elements of an organization's management system concerned with managing risk,リスク管理に関係する組織の管理システムの一連の要素
set of entities that satisfy the type at any particular time,特定の時点でタイプを満たすエンティティのセット
set of evolving source file versions,進化するソース ファイル バージョンのセット
set of failures that occur during the early-failure period of a system or componen,システムまたはコンポーネントの初期故障期間中に発生する一連の故障
set of fields or data items,フィールドまたはデータ項目のセット
set of functional and non-functional characteristics that is shared by all applications belonging to the product line,製品ラインに属するすべてのアプリケーションに共有される機能的および非機能的特性のセット
set of functional user requirements and non-functional user requirements that the users need the system to fulfil,ユーザーがシステムが満たす必要がある、機能的ユーザー要件と非機能的ユーザー要件のセット
set of functional user requirements to be included in a specific functional size measurement instance,特定の機能サイズ測定インスタンスに含まれる一連の機能ユーザー要件
set of Functional User Requirements to be included in the function point count,機能ポイント数に含まれる一連の機能ユーザー要件
set of generalization structures with a common generic ancestor,共通のジェネリック祖先を持つ一般化構造のセット
"set of grouped change requests, established in the Application Change Management Process, which are designed, developed, tested, and deployed as a cohesive whole",アプリケーション変更管理プロセスで確立され、まとまった全体として設計、開発、テスト、展開される一連のグループ化された変更リクエスト
set of hardware and software components that implement the services utilized by the application software,アプリケーション ソフトウェアによって利用されるサービスを実装するハードウェアおよびソフトウェア コンポーネントのセット
set of heuristics for helping a designer structure a system into concurrent tasks,設計者がシステムを同時タスクに構造化するのに役立つヒューリスティックのセット
set of initial place markings given with the high-level net definition,高レベルのネット定義で指定された初期位置マーキングのセット
"set of interrelated activities that result in the development or assessment of system, software, or hardware products [IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1;",システム、ソフトウェア、またはハードウェア製品の開発または評価をもたらす、相互に関連する一連の活動 [IEEE 1012-2012 システムおよびソフトウェアの検証および検証に関する IEEE 規格、3.1;
set of interrelated or interacting activities that transforms inputs into outputs,入力を出力に変換する、相互に関連するまたは相互作用する一連のアクティビティ
set of interrelated or interacting activities that use inputs to deliver an intended result,入力を使用して意図した結果を提供する、相互に関連するまたは相互作用する一連のアクティビティ
set of interrelated or interacting elements,相互に関連するまたは相互作用する要素のセット
set of interrelated or interacting elements to establish policy and objectives and to achieve those objectives,ポリシーと目的を確立し、それらの目的を達成するための、相互に関連するまたは相互作用する一連の要素
"set of intranets connected for specific objectives, spanning multiple organizations",複数の組織にまたがる、特定の目的のために接続された一連のイントラネット
set of items necessary to perform the minimum verification and validation (V&V) tasks mandated within any life cycle activity,ライフサイクルアクティビティ内で義務付けられる最小限の検証および検証 (V&V) タスクを実行するために必要なアイテムのセット
set of items produced as a result of performing the minimum verification and validation tasks mandated within any life cycle activity,ライフサイクルアクティビティ内で義務付けられる最小限の検証および検証タスクを実行した結果として生成されるアイテムのセット
"set of language-specific editorial conventions covering grammar, terminology, punctuation, capitalization, and word choice of documentation",文書の文法、用語、句読点、大文字の使用、単語の選択をカバーする、言語固有の編集規約のセット
"set of measurements used in computer performance evaluation, describing the proportion of time each of the major resources in a computer system is busy, divided by the time that resource is available",コンピュータのパフォーマンス評価に使用される一連の測定値。コンピュータ システム内の主要なリソースのそれぞれがビジー状態である時間を、そのリソースが利用可能な時間で割った割合を表します。
set of metamodel and model instances found in a CDIF transfer,CDIF 転送で見つかったメタモデルとモデル インスタンスのセット
set of metric values that is drawn from the metrics database and used in metrics validation,メトリクス データベースから抽出され、メトリクスの検証で使用されるメトリクス値のセット
set of navigation links available on all pages of a website,Web サイトのすべてのページで利用可能なナビゲーション リンクのセット
set of nodes forming a naming domain for the purpose of assigning engineering interface references,エンジニアリングインターフェース参照を割り当てる目的でネーミングドメインを形成するノードのセット
set of objects used to create a multiset,マルチセットの作成に使用されるオブジェクトのセット
set of objects with a particular characterizing relationship <X>,特定の特徴的な関係を持つオブジェクトのセット <X>
"set of objects, each of which is related by a characterizing relationship <X> to a controlling object",オブジェクトのセット。各オブジェクトは、特徴的な関係 <X> によって制御オブジェクトに関連付けられています。
"set of one or more base standards or profiles and, where applicable, the identification of chosen classes, conforming subsets, options and parameters of those base standards or standardized profiles necessary to accomplish a particular function",1 つ以上の基本標準またはプロファイルのセット、および該当する場合には、特定の機能を達成するために必要な、それらの基本標準または標準化されたプロファイルの選択されたクラス、適合サブセット、オプションおよびパラメータの識別
"set of one or more computer program modules together with associated control data (for example, tables), usage procedures, and operating procedures that satisfy the following conditions: (a) All modules are from a single computer program; (b) At least one of the new or changed modules in the set has not completed the unit test; (c) The set of modules together with its associated data and procedures are the sole object of a testing process.",以下の条件を満たす、関連する制御データ (テーブルなど)、使用手順、操作手順を伴う 1 つ以上のコンピュータ プログラム モジュールのセット。 (a) すべてのモジュールは単一のコンピュータ プログラムからのもの。 (b) セット内の新規または変更されたモジュールの少なくとも 1 つが単体テストを完了していません。 (c) モジュールのセットとそれに関連するデータおよび手順は、テスト プロセスの唯一の目的です。
set of one or more generalization structures in which the subclasses share the same superclass and in which an instance of the superclass is an instance of no more than one subclass,サブクラスが同じスーパークラスを共有し、スーパークラスのインスタンスが複数のサブクラスのインスタンスである 1 つまたは複数の一般化構造のセット
set of one or more mutually exclusive specializations of the same generic entity,同じ汎用エンティティの 1 つ以上の相互に排他的な特殊化のセット
set of one or more procedure parts and a control part which can be implicit,1 つ以上のプロシージャ部分と暗黙的に指定できる制御部分のセット
set of one or more test cases and procedures.,1 つ以上のテスト ケースと手順のセット。
set of one or more test cases with a common constraint on their execution,実行に共通の制約を持つ 1 つ以上のテスト ケースのセット
set of operations having the object of determining a value of a measure,メジャーの値を決定することを目的とした一連の操作
"set of operations that is repeated regularly in the same sequence, possibly with variations in each repetition",同じシーケンスで規則的に繰り返される一連の操作。場合によっては繰り返しごとに変化が生じる
"set of operations, described specifically, used in the execution of a particular benchmarking according to a given method",特定の方法に従って特定のベンチマークを実行する際に使用される、具体的に説明された一連の操作
"set of operations, described specifically, used in the performance of a particular measurement according to a given method",特定の方法に従って特定の測定を実行する際に使用される、具体的に説明された一連の操作
set of permissions and prohibitions that govern the federation of engineering interface reference management domains,エンジニアリング インターフェイス参照管理ドメインのフェデレーションを管理する一連の許可と禁止
"set of physically distinct artifacts, a physical partition of the executor",物理的に異なる成果物のセット、エグゼキューターの物理パーティション
set of possible times or time periods at which an Event can occur,イベントが発生する可能性のある時間または期間のセット
set of possible values or structures of data,データの可能な値または構造のセット
set of predicates on one or more information objects which must always be true,常に真である必要がある 1 つ以上の情報オブジェクトに関する述語のセット
set of process attribute ratings for an assessed process,評価されたプロセスのプロセス属性評価のセット
set of process elements in a process assessment model explicitly related to the processes defined in the relevant process reference model(s),関連するプロセス参照モデルで定義されたプロセスに明示的に関連するプロセス評価モデル内の一連のプロセス要素
set of process profiles,プロセスプロファイルのセット
set of processes specific to a maturity level higher than the basic maturity level that ensures the achievement of the relevant process profile,関連するプロセスプロファイルの達成を保証する、基本的な成熟度レベルよりも高い成熟度レベルに固有の一連のプロセス
"set of processes, which ensure the achievement of the basic maturity level",基本的な成熟度レベルの達成を保証する一連のプロセス
set of products or services sharing explicitly defined and managed common and variable features and relying on the same domain architecture to meet the common and variable needs of specific markets,明示的に定義および管理された共通の可変機能を共有し、特定の市場の共通かつ可変のニーズを満たすために同じドメイン アーキテクチャに依存する製品またはサービスのセット
"set of programming languages and the support software (editors, compilers, linkers, etc.) necessary for using these languages with a given computer system",一連のプログラミング言語と、特定のコンピューター システムでこれらの言語を使用するために必要なサポート ソフトウェア (エディター、コンパイラー、リンカーなど)
set of properties associated with requirements,要件に関連付けられたプロパティのセット
set of protocol objects capable of interworking,相互作用可能なプロトコル オブジェクトのセット
set of quality factor values that is drawn from the metrics database and used in metrics validation,メトリクス データベースから抽出され、メトリクスの検証に使用される品質係数値のセット
set of quality requirements on the collective behavior of one or more objects,1 つまたは複数のオブジェクトの集合的な動作に関する一連の品質要件
"set of reachable markings of the net, including the initial marking",初期マーキングを含む、ネットの到達可能なマーキングのセット
set of related activities.,関連するアクティビティのセット。
set of related categories,関連するカテゴリのセット
set of related components that are combined into a single distributable item,単一の配布可能なアイテムに結合された関連コンポーネントのセット
set of related data items treated as a unit,単位として扱われる関連するデータ項目のセット
set of related data records treated as a unit,単位として扱われる関連データ レコードのセット
set of related features or functional capabilities of a product,製品の関連する機能または機能のセット
set of related records treated as a unit,単位として扱われる関連レコードのセット
set of relationships of the same relationship type,同じ関係タイプの関係のセット
"set of requirements that, when met, will provide a level of confidence in the associated integrity level claim commensurate with the associated integrity level",満たされた場合、関連する完全性レベルの主張に、関連する完全性レベルに見合った信頼レベルが提供される一連の要件
set of rules governing the representation of CDIF modeling concepts in diagrams,図における CDIF モデリング概念の表現を管理する一連のルール
set of rules related to a particular purpose,特定の目的に関連する一連のルール
set of rules that constrains one or more sets of activities of one or more sets of objects,1 つまたは複数のオブジェクトのセットの 1 つまたは複数のアクティビティのセットを制約する一連のルール
set of rules to define the structure of a system and the interrelationships between its parts,システムの構造とその部分間の相互関係を定義する一連のルール
set of service primitives that allow a client-side binder object to ask a server-side if it will accept requests carrying invocations to a particular (computational) server object,クライアント側のバインダー オブジェクトが、特定の (計算上の) サーバー オブジェクトへの呼び出しを運ぶリクエストを受け入れるかどうかをサーバー側に問い合わせることを可能にするサービス プリミティブのセット
set of service primitives that allow a stub objects to negotiate the abstract and transfer syntax to be used for the operation data to be transmitted over the channel,スタブ オブジェクトが、チャネル経由で送信される操作データに使用される抽象および転送構文をネゴシエートできるようにするサービス プリミティブのセット
set of service primitives which have a direct correspondence with computational signals which model computational operations,計算操作をモデル化する計算信号と直接対応するサービス プリミティブのセット
set of service primitives which support the management of an association between protocol objects,プロトコル オブジェクト間の関連付けの管理をサポートするサービス プリミティブのセット
set of software operating concurrently on a specified computer system,指定されたコンピュータ システム上で同時に動作するソフトウェアのセット
set of software tools or applications to provide comprehensive facilities for software development,ソフトウェア開発のための包括的な機能を提供するソフトウェア ツールまたはアプリケーションのセット
set of source code files under version control that can be manipulated together as one4. collection of both data and the routines that act on it,バージョン管理下にあるソース コード ファイルのセット。これらは 1 つとしてまとめて操作できます。4.データとそれに作用するルーチンの両方の収集
"set of specified requirements imposed on aspects related to a system, product, or element and associated activities in order to show the achievement of the assigned integrity level (that is, meeting its claim) within the required limitations on uncertainty; this includes the evidence to be obtained",不確実性に対する必要な制限内で、割り当てられた完全性レベルの達成（つまり、その要求を満たす）を示すために、システム、製品、または要素および関連する活動に関連する側面に課せられる一連の指定された要件。これには入手すべき証拠も含まれます
"set of standards that, when used together, provide a standard definition for the interchange of information between modeling tools",一緒に使用すると、モデリング ツール間の情報交換の標準定義を提供する一連の標準
"set of standards, rules, or properties to which an asset must conform in order to be certified to a certain level",特定のレベルに認定されるために資産が準拠する必要がある一連の標準、規則、または特性
"set of statements which define the sets, constants, parameter values, typed variables and functions required for defining the annotations on a high-level Petri Net graph",高レベルのペトリネット グラフで注釈を定義するために必要なセット、定数、パラメータ値、型付き変数、および関数を定義するステートメントのセット
set of structured data elements containing authoritative identification information about a software configuration item,ソフトウェア構成アイテムに関する信頼できる識別情報を含む一連の構造化データ要素
"set of system characteristics (such as complexity, risk, safety level, security level, desired performance, reliability, and/or cost) selected as important to stakeholders, and arranged into discrete levels of performance or compliance (integrity levels), to help define the level of quality control to be applied in developing or delivering the software.",ソフトウェアの開発または提供時に適用される品質管理のレベルを定義するのに役立つように、利害関係者にとって重要として選択され、パフォーマンスまたはコンプライアンスの個別のレベル (完全性レベル) に整理された一連のシステム特性 (複雑さ、リスク、安全性レベル、セキュリティ レベル、望ましいパフォーマンス、信頼性、および/またはコストなど)。
"set of target characteristics established to guide the effort to improve an existing process in a specific, measurable way, either in terms of resultant product or service characteristics, such as quality, performance, and conformance to standards, or in the way in which the process is executed, such as elimination of redundant process steps, combination of process steps, and improvement of cycle time",結果として得られる製品またはサービスの特性 (品質、パフォーマンス、規格への適合など)、またはプロセスの実行方法 (冗長なプロセス ステップの削除、プロセス ステップの組み合わせ、サイクル タイムの改善など) の観点から、特定の測定可能な方法で既存のプロセスを改善する取り組みを導くために確立された一連の目標特性。
set of terms usable as names,名前として使用できる用語のセット
"set of test case preconditions, inputs (including actions, where applicable), and expected results, developed to drive the execution of a test item to meet test objectives, including correct implementation, error identification, checking quality, and other valued information",テスト ケースの前提条件、入力 (該当する場合はアクションを含む)、および期待される結果のセット。正しい実装、エラーの特定、品質のチェック、その他の重要な情報を含む、テストの目的を満たすテスト項目の実行を推進するために開発されました。
"set of test inputs, execution conditions, and expected results developed for a particular objective, such as to exercise a particular program path or to verify compliance with a specific requirement",特定のプログラム パスを実行したり、特定の要件への準拠を確認したりするなど、特定の目的のために開発された一連のテスト入力、実​​行条件、および期待される結果
set of values and operations on those values,一連の値とそれらの値に対する操作
set or sequence of activities required to achieve a given goal,与えられた目標を達成するために必要な一連の活動または一連の活動
"sets of programs that are related by sharing significant portions of requirements, design, and code",要件、設計、およびコードの重要な部分を共有することで関連付けられた一連のプログラム
severe service-disrupting bugs for which there is no known workaround,既知の回避策がない、サービスを中断する重大なバグ
shared boundary across which information is passed,情報が渡される共有境界
"shared boundary between two functional units, defined by various characteristics pertaining to the functions, physical signal exchanges, and other characteristics",2 つの機能単位間の共有境界。機能、物理的信号交換、その他の特性に関連するさまざまな特性によって定義されます。
"shared channel that transmits data sequentially, bit-by-b",データをビットごとに順次送信する共有チャネル
shared variable used to synchronize concurrent processes by indicating whether an action has been completed or an event has occurred,アクションが完了したか、イベントが発生したかを示すことによって、同時プロセスを同期するために使用される共有変数
sheet provided with scales and other indicators conforming to the characteristics of the majority of character printing machines in general office and data processing use,一般事務用やデータ処理用の文字印刷機の多くの特性に合わせた目盛等の指標を備えたシート
"short ""S""-shaped line attached at one end to an arrow label and at the other end to an arrow segment",一端が矢印ラベルに、もう一端が矢印セグメントに取り付けられた短い「S」字型の線
"short computer program that is permanently resident or easily loaded into a computer and whose execution brings a larger program, such as an operating system or its loader, into memory",永続的に常駐するか、コンピュータに簡単にロードされ、実行するとオペレーティング システムやそのローダーなどのより大きなプログラムがメモリに読み込まれる短いコンピュータ プログラム
short computer program used to load a bootstrap,ブートストラップをロードするために使用される短いコンピュータ プログラム
"short time frame, in which a set of software features is developed, leading to a working product that can be demonstrated to stakeholders",短期間で一連のソフトウェア機能が開発され、利害関係者にデモンストレーションできる実用的な製品が完成します。
shortcut keys to move through a dialogue faster,ダイアログをより速く移動するためのショートカット キー
shrink small outline package,スモールアウトラインパッケージを縮小
signal in the implicitly defined signal interface of a client computational object which has the same name and parameters as one of the terminations of an interrogation in the original operation interface,元の操作インターフェイスの問い合わせの終了の 1 つと同じ名前とパラメータを持つ、クライアント計算オブジェクトの暗黙的に定義された信号インターフェイス内の信号
signal in the implicitly defined signal interface of a client computational object which has the same name and parameters as the invocation of an interrogation or announcement in the original operation interface,元の操作インターフェイスでの質問またはアナウンスの呼び出しと同じ名前とパラメータを持つ、クライアント計算オブジェクトの暗黙的に定義された信号インターフェイスの信号
signal in the implicitly defined signal interface of a server computational object which has the same name and parameters as one of the terminations of an interrogation in the original operation interface,元の操作インターフェースにおける問い合わせの終了の 1 つと同じ名前とパラメーターを持つ、サーバー計算オブジェクトの暗黙的に定義された信号インターフェース内の信号
signal in the implicitly defined signal interface of a server computational object which has the same name and parameters as the invocation of an interrogation or announcement in the original operation interface,元の操作インターフェイスでの質問またはアナウンスの呼び出しと同じ名前とパラメータを持つ、サーバー計算オブジェクトの暗黙的に定義された信号インターフェイスの信号
signal or other input requesting that the currently executing process be suspended to permit performance of another process,別のプロセスの実行を許可するために現在実行中のプロセスを一時停止することを要求する信号またはその他の入力
"signature where one of the sorts is Bool, corresponding to the carrier Boolean in any associated algebra, and one of the constants is true sub Bool, corresponding to the value true in the algebra",シグネチャ。ソートの 1 つは Bool で、関連する代数のキャリア ブール値に対応し、定数の 1 つは true sub Bool で、代数の値 true に対応します。
silicon or germanium used in electronic circuits,電子回路に使用されるシリコンまたはゲルマニウム
simple component of a methodology,方法論の単純な構成要素
simple component of an endeavor,努力の単純な要素
simple narrative illustrating the user goals that a software function will satisfy,ソフトウェア機能が満たすユーザーの目標を説明する簡単な説明
simultaneous occurrence of a finite multiset of transition modes that are concurrently enabled in a marking,マーキングで同時に有効になる遷移モードの有限マルチセットの同時発生
"Since the value of the discriminator (when a discriminator has been declared) is equivalent to the identity of the subclass to which the instance belongs, there is no requirement for a discriminator in identity-style modeling",識別子の値 (識別子が宣言されている場合) は、インスタンスが属するサブクラスの ID と同等であるため、アイデンティティ スタイルのモデリングでは識別子は必要ありません。
"single column through the condition and action entry parts of the decision table, defining a unique set of conditions to be satisfied and the actions to be taken in consequence",デシジョンテーブルの条件とアクションのエントリ部分を通る 1 つの列で、満たされる条件とその結果として実行されるアクションの固有のセットを定義します。
"single cycle in the processing of a set of data, usually performing part of an overall process",データセットの処理における単一サイクル。通常はプロセス全体の一部を実行します。
"single digit (0, 1, 2, ..., 9) placed in the lower right corner of a box to uniquely identify that box in a diagram",図内でそのボックスを一意に識別するために、ボックスの右下隅に配置される 1 桁の数字 (0、1、2、...、9)
single execution of the sequence of steps in (1),(1) の一連のステップを 1 回実行する
single integrated circuit chip with more than one processing unit,複数の処理ユニットを備えた単一の集積回路チップ
single or a series of unwanted or unexpected information security events that have a significant probability of compromising business operations and threatening information security,事業運営を侵害し、情報セキュリティを脅かす可能性が高い、単一または一連の望ましくない、または予期しない情報セキュリティ イベント
single specific and identifiable execution of a process,プロセスの単一の特定かつ識別可能な実行
single unit of a service that when combined with other units will deliver a complete service,他のユニットと組み合わせることで完全なサービスを提供するサービスの単一ユニット
"single-entry, single-exit loop in which the loop control is executed before the loop bo",ループ制御がループ bo の前に実行されるシングルエントリー、シングルイグジットのループ
"single-entry, single-exit loop, in which the loop control is executed after the loop bod",シングルエントリー、シングルイグジットのループ。ループ制御はループ本体の後に実行されます。
"single-entry, single-exit multiple-way branch that defines a control expression, specifies the processing to performed for each value of the control expression, and returns control in all instances to the statement immediately following the overall construct",制御式を定義し、制御式の各値に対して実行する処理を指定し、すべてのインスタンスの制御を構造全体の直後のステートメントに返す、単一入口、単一出口の複数方向分岐。
"single-entry, single-exit two-way branch that defines a condition, specifies the processing to be performed if the condition is met and, optionally, if it is not, and returns control in both instances to the statement immediately following the overall construct",条件を定義する単一入口、単一出口の双方向分岐。条件が満たされた場合と、オプションで条件が満たされていない場合に実行される処理を指定し、両方のインスタンスの制御を構造全体の直後のステートメントに戻します。
"single-headed directed acyclic graph of actions, where occurrence of each action in the graph is made possible by the occurrence of all immediately preceding actions (i.e., by all adjacent actions which are closer to the head)",アクションの単頭有向非循環グラフ。グラフ内の各アクションの発生は、直前のすべてのアクション (つまり、ヘッドに近いすべての隣接アクション) の発生によって可能になります。
single-valued characteristic of an entity or relationship,エンティティまたは関係の単一値特性
single-valued mapping,単一値のマッピング
"singular moment in time at which some perceptible phenomenological change (energy, matter, or information) occurs at the port of a unit",何らかの知覚可能な現象学的変化（エネルギー、物質、または情報）がユニットのポートで発生する特異な瞬間
"singular of ""data""",「データ」の単数形
site created and maintained based on organizational guidelines,組織のガイドラインに基づいてサイトが作成および維持される
"site license, OEM license, per computer license",サイトライセンス、OEMライセンス、コンピュータごとのライセンス
"situation during use resulting in poor effectiveness, efficiency or satisfaction",使用中に有効性、効率性、満足度が低下する状況
situation in which computer processing is suspended because two or more devices or processes are each awaiting resources assigned to the others,2 つ以上のデバイスまたはプロセスがそれぞれ他のデバイスまたはプロセスに割り当てられたリソースを待っているために、コンピューターの処理が中断されている状況
situation in which two or more tasks are suspended indefinitely because each task is waiting for a resource acquired by another task,各タスクが別のタスクによって獲得されたリソースを待っているため、2 つ以上のタスクが無期限に中断される状況
situation in which two software modules call each other,2 つのソフトウェア モジュールが相互に呼び出しを行う状況
situation that can cause errors to occur in an object,オブジェクトでエラーが発生する可能性がある状況
situation when the subtype inherits all of the meta-attributes and meta-relationships of all of its supertypes (and thei supertypes),サブタイプがそのすべてのスーパータイプ (およびそれらのスーパータイプ) のすべてのメタ属性とメタ関係を継承する状況
size of the software derived by quantifying the functional user requirements,ユーザーの機能要件を定量化することで得られるソフトウェアのサイズ
"skeletal or special-purpose implementation of a software module, used to develop or test a module that calls or is otherwise dependent on it",ソフトウェア モジュールの骨格または特殊目的の実装。モジュールを呼び出すか依存するモジュールを開発またはテストするために使用されます。
"skilled human resources (specific disciplines either individually or in crews or teams), equipment, services, supplies, commodities, materiel, budgets, or funds",熟練した人材（個人、または乗組員やチームの特定の分野）、設備、サービス、消耗品、物品、資材、予算、または資金
small and medium enterprise,中小企業
"small file that is stored in and retrieved from user web storage to maintain state information, including identification of users and transaction coherency",ユーザーの識別やトランザクションの一貫性などの状態情報を維持するために、ユーザーの Web ストレージに保存したりそこから取得したりする小さなファイル
small outline integrated circuit,小型集積回路
small outline package,小さなアウトラインパッケージ
small part of a document that deals with a single subject,単一の主題を扱う文書の小さな部分
small piece of semiconductive material that contains interconnected electronic elements,相互接続された電子要素を含む半導体材料の小片
small storage unit in a processing unit,処理装置内の小さな記憶装置
"small, self-contained collection of key security-related statements that works as a privileged part of an operating system, specifying and enforcing criteria that must be met for programs and data to be accessed",オペレーティング システムの特権部分として機能する、主要なセキュリティ関連ステートメントの小規模な自己完結型のコレクション。プログラムやデータにアクセスするために満たさなければならない基準を指定および強制する。
smaller part of an architecture,アーキテクチャの小さな部分
smallest element of a screen display; short for 'picture element',画面表示の最小要素。 「ピクチャエレメント」の略称
"smallest identifiable unit of data within a certain context for which the definition, identification, permissible values, and other information is specified by means of a set of properties",定義、識別、許容値、その他の情報が一連のプロパティによって指定される、特定のコンテキスト内で識別可能なデータの最小単位
"smallest parcel of information, within an identified data group, carrying a meaning from the perspective of the software's functional user requirements",ソフトウェアの機能的ユーザー要件の観点から意味を伝える、特定されたデータ グループ内の情報の最小区画
smallest unit of activity that is meaningful to the user,ユーザーにとって意味のあるアクティビティの最小単位
smallest unit of time used in scheduling a project,プロジェクトのスケジュールに使用される最小の時間単位
smallest unit of work subject to management accountability; a well-defined work assignment for one or more project members,経営者の責任の対象となる最小の作業単位。 1 人以上のプロジェクト メンバーに対する明確に定義された作業割り当て
"Smalltalk, LOGO",スモールトーク、ロゴ
snapshot of the state of a service or individual configuration items at a point in time,ある時点でのサービスまたは個々の構成項目の状態のスナップショット
software,ソフトウェア
"software analysis technique in which program execution is simulated using symbols, such as variable names, rather than actual values for input data, and program outputs are expressed as logical or mathematical expressions involving these symbols",入力データの実際の値ではなく、変数名などのシンボルを使用してプログラムの実行をシミュレートし、プログラムの出力をこれらのシンボルを含む論理式または数式として表現するソフトウェア解析手法
software architecture description,ソフトウェアアーキテクチャの説明
software asset management,ソフトウェア資産管理
software attributes that explain a function's implementation,機能の実装を説明するソフトウェア属性
software attributes that provide a structure of highly independent components,独立性の高いコンポーネントの構造を提供するソフトウェア属性
software attributes that provide implementation of a function with a minimum amount of code,最小限のコードで機能を実装できるソフトウェア属性
software attributes that provide implementation of functions in the most understandable manner,最もわかりやすい方法で機能の実装を提供するソフトウェア属性
software attributes that provide uniform design and implementation techniques and notations,統一された設計および実装技術と表記法を提供するソフトウェア属性
software behavior concept that is represented in the STL,STL で表現されるソフトウェア動作の概念
"software capability needed by a user to solve a problem or to achieve an objective2. software capability that must be met or possessed by a system or system component to satisfy a contract, standard, specification, or other formally imposed document",ユーザーが問題を解決したり、目的を達成したりするために必要なソフトウェア機能2.契約、標準、仕様、またはその他の正式に課された文書を満たすために、システムまたはシステムコンポーネントが満たすか、または所有する必要があるソフトウェア機能
software characteristic specified or implied by requirements documentation.,要件ドキュメントによって指定または暗示されるソフトウェア特性。
"Software component refers to a part of a whole, such as a component of a software product or a component of a software identification tag.",ソフトウェア コンポーネントとは、ソフトウェア製品のコンポーネントやソフトウェア識別タグのコンポーネントなど、全体の一部を指します。
software component requirement,ソフトウェアコンポーネントの要件
software component that is called by the operating system of a computer and that usually calls other software components,コンピュータのオペレーティング システムによって呼び出され、通常は他のソフトウェア コンポーネントを呼び出すソフトウェア コンポーネント
software component that is not subdivided into other components,他のコンポーネントに分割されていないソフトウェアコンポーネント
"software component that, when installed, directly modifies files or device settings related to a different software component without changing the version number or release details for the related software component",インストールされると、関連するソフトウェア コンポーネントのバージョン番号やリリースの詳細を変更せずに、別のソフトウェア コンポーネントに関連するファイルやデバイス設定を直接変更するソフトウェア コンポーネント
software condition that is a prerequisite to an accident,事故の前提となるソフトウェアの状態
Software Configuration Item,ソフトウェア構成項目
Software Configuration Management,ソフトウェア構成管理
software configuration management plan,ソフトウェア構成管理計画
Software Configuration Management Planned Information.,ソフトウェア構成管理の計画情報。
software design description,ソフトウェア設計の説明
software design document,ソフトウェア設計書
software design stage with the objective of structuring a concurrent application into concurrent tasks and defining the task interfaces,同時アプリケーションを同時タスクに構造化し、タスク インターフェイスを定義することを目的としたソフトウェア設計段階
software design technique in which the architecture of a system is derived from analysis of the structure of the data sets with which the system must deal,システムが処理しなければならないデータセットの構造の分析からシステムのアーキテクチャを導き出すソフトウェア設計手法
software design technique that consists of identifying the steps involved in each process to be performed and identifying the inputs to and outputs from each step,実行される各プロセスに含まれるステップを特定し、各ステップへの入力と各ステップからの出力を特定することで構成されるソフトウェア設計手法
software designed to facilitate the operation and maintenance of a computer system and its associated programs,コンピュータシステムとその関連プログラムの運用と保守を容易にするために設計されたソフトウェア
software designed to fulfill specific needs of a user4. software of an application,ユーザーの特定のニーズを満たすように設計されたソフトウェア4.アプリケーションのソフトウェア
"software designed to help users perform particular tasks or handle particular types of problems, as distinct from software that controls the computer itself",コンピュータ自体を制御するソフトウェアとは異なり、ユーザーが特定のタスクを実行したり、特定の種類の問題に対処したりできるように設計されたソフトウェア
"software development approach based on iterative development, frequent inspection and adaptation, and incremental deliveries, in which requirements and solutions evolve through collaboration in cross-functional teams and through continuous stakeholder feedback",反復的な開発、頻繁な検査と適応、段階的な納品に基づくソフトウェア開発アプローチ。部門を超えたチームでのコラボレーションと継続的な利害関係者のフィードバックを通じて要件とソリューションが進化します。
"software development group that consists of a chief programmer, a backup programmer, a secretary/librarian, and additional programmers and specialists as needed, and that employs procedures designed to enhance group communication and to make optimum use of each member's skills",チーフプログラマー、バックアッププログラマー、秘書/司書、そして必要に応じて追加のプログラマーと専門家で構成され、グループのコミュニケーションを強化し、各メンバーのスキルを最適に活用するように設計された手順を採用するソフトウェア開発グループ。
"software development life-cycle phase during which the requirements for a software product, such as functional and performance capabilities, are defined, documented, and reviewed",ソフトウェア開発ライフサイクルの段階で、機能やパフォーマンスなどのソフトウェア製品の要件が定義、文書化、レビューされます。
"software development lifecycle phase during which the detailed design process takes place, using the software system design and software architecture from the previous phase (architectural design) to produce the detailed logic for each unit such that it is ready for coding",ソフトウェア開発ライフサイクル フェーズ。詳細な設計プロセスが行われます。前のフェーズ (アーキテクチャ設計) のソフトウェア システム設計とソフトウェア アーキテクチャを使用して、コーディングの準備ができるように各ユニットの詳細なロジックを作成します。
software development plan,ソフトウェア開発計画
"software development project described as maintenance to correct errors in an original requirements specification, to adapt a system to a new environment, or to enhance a system",元の要件仕様のエラーを修正したり、システムを新しい環境に適応させたり、システムを強化したりするためのメンテナンスとして説明されるソフトウェア開発プロジェクト
"software development technique based on the concept of team, rather than individual, responsibility for program development",プログラム開発に対する個人ではなくチームの責任という概念に基づいたソフトウェア開発手法
software development technique in which a system or component is expressed in terms of objects and connections between those objects,システムまたはコンポーネントをオブジェクトおよびそれらのオブジェクト間の接続の観点から表現するソフトウェア開発手法
software development technique in which data and processing steps are defined broadly at first and then further defined with increasing detail,データと処理ステップを最初に大まかに定義し、その後詳細を増やしながらさらに定義するソフトウェア開発手法
software development technique in which each module's interfaces reveal as little as possible about the module's inner workings and other modules are prevented from using information about the module that is not in the module's interface specification2. containment of a design or implementation decision in a single module so that the decision is hidden from other modules,各モジュールのインターフェースがモジュールの内部動作についてできる限り明らかにしないようにし、他のモジュールがモジュールのインターフェース仕様にないモジュールに関する情報を使用しないようにするソフトウェア開発手法。設計または実装の決定を単一のモジュールに含めて、その決定が他のモジュールから隠されるようにすること
"software development technique in which requirements definition, design, implementation, and testing occur in an overlapping, iterative (rather than sequential) manner, resulting in incremental completion of the overall software product",要件の定義、設計、実装、およびテストが (順次ではなく) 重複して反復的に行われ、結果としてソフトウェア製品全体が段階的に完成するソフトウェア開発手法
software development technique in which software is developed as a collection of modules,ソフトウェアをモジュールの集合として開発するソフトウェア開発手法
software development technique in which the structure of a system is derived from analyzing the flow of data through the system and the transformations that must be performed on the data,システムを通るデータの流れとデータに対して実行する必要がある変換を分析することによってシステムの構造を導き出すソフトウェア開発手法
software development technique in which the structure of a system is derived from analyzing the transactions that the system is required to process,システムが処理する必要があるトランザクションの分析からシステムの構造を導き出すソフトウェア開発手法
"software development technique in which two or more functionally identical variants of a program are developed from the same specification by different programmers or programming teams with the intent of providing error detection, increased reliability, additional documentation, or reduced probability that programming or compiler errors will influence the end results",エラー検出、信頼性の向上、ドキュメントの追加、またはプログラミングまたはコンパイラ エラーが最終結果に影響を与える可能性の低減を目的として、異なるプログラマーまたはプログラミング チームによって、機能的に同一のプログラムの 2 つ以上のバリアントが同じ仕様から開発されるソフトウェア開発手法。
software development technique that consists of isolating a system function or a set of data and operations on those data within a module and providing precise specifications for the module,システム機能または一連のデータとモジュール内のそれらのデータに対する操作を分離し、モジュールに正確な仕様を提供することで構成されるソフトウェア開発手法
software development technique that includes structured design and results in the development of structured programs,構造化設計を含み、構造化プログラムの開発を実現するソフトウェア開発手法
"software development tool that establishes a traceability among itemized software requirements specifications, design elements, code elements, and test cases",項目別のソフトウェア要件仕様、設計要素、コード要素、およびテスト ケース間のトレーサビリティを確立するソフトウェア開発ツール
software element that is not subdivided into other elements,他の要素に細分化されていないソフトウェア要素
Software Engineering,ソフトウェアエンジニアリング
Software Engineering Body of Knowledge,ソフトウェアエンジニアリングの知識体系
Software Engineering Environment,ソフトウェアエンジニアリング環境
Software Engineering Institute,ソフトウェア工学研究所
software engineering metamodel for development methodologies,開発方法論のためのソフトウェアエンジニアリングメタモデル
software engineering project-deliverable document that enables a system's maintenance personnel (rather than users) to maintain the system,システムの保守担当者 (ユーザーではなく) がシステムを保守できるようにするソフトウェア エンジニアリング プロジェクト成果物文書
software engineers who maintain software systems,ソフトウェア システムを保守するソフトウェア エンジニア
software entity that has been established as a configuration item,構成アイテムとして確立されたソフトウェアエンティティ
software identification,ソフトウェアの識別
"software instruction, independent of the physical format (lines of code) in which it appears",ソフトウェア命令は、それが現れる物理的な形式 (コード行) に依存しません。
software item or system for which a system design description (SDD) will be prepared,システム設計記述 (SDD) が作成されるソフトウェア項目またはシステム
software layer between an operating system and the software applications,オペレーティング システムとソフトウェア アプリケーションの間のソフトウェア層
software library containing computer readable and human readable information relevant to a software development effort,ソフトウェア開発作業に関連するコンピュータ可読および人間が可読な情報を含むソフトウェア ライブラリ
software library containing software approved for current operational use,現在の運用使用が承認されたソフトウェアを含むソフトウェア ライブラリ
software library containing system-resident software that can be accessed for use or incorporated into other programs by reference,アクセスして使用したり、参照によって他のプログラムに組み込んだりできるシステム常駐ソフトウェアを含むソフトウェア ライブラリ
"software library providing permanent, archival storage for software and related documentation",ソフトウェアおよび関連ドキュメントの永続的なアーカイブ ストレージを提供するソフトウェア ライブラリ
software license use rights as defined through agreements between a software licensor and a software consumer,ソフトウェア ライセンサーとソフトウェア消費者の間の契約によって定義されるソフトウェア ライセンス使用権
software life cycle,ソフトウェアのライフサイクル
"software life cycle process that contains activities of requirements analysis, design, coding, integration, testing, installation, and support for acceptance of software products",要件分析、設計、コーディング、統合、テスト、インストール、およびソフトウェア製品の受け入れサポートの活動を含むソフトウェア ライフ サイクル プロセス
Software Life Cycle Processes,ソフトウェアのライフサイクルプロセス
"software maintenance performed to improve the performance, maintainability, or other attributes of a computer program3. improvements in software's performance or functionality, for example, in response to user suggestions and requests",コンピュータ プログラムのパフォーマンス、保守性、またはその他の属性を向上させるために実行されるソフトウェア メンテナンス3。たとえば、ユーザーの提案や要求に応じたソフトウェアのパフォーマンスまたは機能の改善
software maintenance tool that lets the user determine where a variable is used or where a particular procedure is called on,変数がどこで使用されているか、または特定のプロシージャがどこで呼び出されているかをユーザーが判断できるようにするソフトウェア メンテナンス ツール
"software module that invokes and, perhaps, controls and monitors the execution of one or more other software modules",1 つまたは複数の他のソフトウェア モジュールを呼び出し、場合によってはその実行を制御および監視するソフトウェア モジュール
"software module that is defined in a general manner and that requires substitution of specific data, instructions, or both, in order to be used in a computer program",一般的な方法で定義され、コンピュータ プログラムで使用するために特定のデータ、命令、またはその両方を置き換える必要があるソフトウェア モジュール
"software module used to invoke a module under test and, often, provide test inputs, control and monitor execution, and report test results",テスト対象のモジュールを呼び出し、多くの場合、テスト入力を提供し、実行を制御および監視し、テスト結果を報告するために使用されるソフトウェア モジュール
"software or a program that aids in the development, maintenance, or use of other software or provides general application-independent capability",開発、メンテナンス、または他のソフトウェアの使用を支援する、あるいはアプリケーションに依存しない一般的な機能を提供するソフトウェアまたはプログラム
software or a program that is specific to the solution of an application problem,アプリケーションの問題の解決に特化したソフトウェアまたはプログラム
"software or hardware design technique in which the output of one process serves as input to a second, the output of the second process serves as input to a third, and so on, often with simultaneity within a single cycle time",1 つのプロセスの出力が 2 番目のプロセスの入力として機能し、2 番目のプロセスの出力が 3 番目のプロセスの入力として機能するというソフトウェアまたはハードウェアの設計手法で、多くの場合、単一サイクル タイム内で同時実行されます。
"software or hardware maintenance, user training",ソフトウェアまたはハードウェアのメンテナンス、ユーザートレーニング
software originally created without information structures,ソフトウェアは元々情報構造を持たずに作成されました
"software performance requirements, software external interface requirements, software design constraints, and software quality attributes.",ソフトウェアのパフォーマンス要件、ソフトウェアの外部インターフェイス要件、ソフトウェア設計の制約、およびソフトウェアの品質特性。
"software product available to any user, at cost or not, to use without the need to conduct development activities",開発活動を行う必要がなく、有償か無償かにかかわらず、あらゆるユーザーが使用できるソフトウェア製品
"software product defined by a market-driven need, commercially available, and whose fitness for use has been demonstrated by a broad spectrum of commercial users",市場主導のニーズによって定義され、市販されており、幅広い商用ユーザーによって使用への適合性が実証されているソフトウェア製品
software product developed for a specific application from a user requirements specification,ユーザー要件仕様に基づいて特定のアプリケーション向けに開発されたソフトウェア製品
"software product name, version, variant, and date information",ソフトウェア製品名、バージョン、バリアント、日付情報
software product providing automatic support for software life-cycle tasks,ソフトウェア ライフサイクル タスクの自動サポートを提供するソフトウェア製品
software product quality measurement reference model,ソフトウェア製品品質測定リファレンスモデル
software product that can assist software and system engineers by providing automated support for software and system engineering life-cycle activitie,ソフトウェアおよびシステム エンジニアリングのライフサイクル アクティビティの自動サポートを提供することにより、ソフトウェア エンジニアおよびシステム エンジニアを支援できるソフトウェア製品
software product that can assist software engineers by providing automated support for configuration management activities,構成管理アクティビティの自動サポートを提供することでソフトウェア エンジニアを支援できるソフトウェア製品
software product that can assist software engineers by providing automated support for software life-cycle activities,ソフトウェア ライフサイクル アクティビティの自動サポートを提供することでソフトウェア エンジニアを支援できるソフトウェア製品
"software product that is already developed and available, usable either 'as is' or with modification, and provided by the supplier, acquirer, or a third party",すでに開発されて利用可能であり、「現状のまま」または変更を加えて使用でき、サプライヤー、取得者、またはサードパーティによって提供されるソフトウェア製品
software product that provides support for software and system life cycle processes,ソフトウェアおよびシステムのライフサイクル プロセスをサポートするソフトウェア製品
"software programming language used to design and model hardware, especially digital logic circuits",ハードウェア、特にデジタル論理回路の設計とモデル化に使用されるソフトウェアプログラミング言語
software project life cycle model.,ソフトウェアプロジェクトのライフサイクルモデル。
software project life cycle process.,ソフトウェアプロジェクトのライフサイクルプロセス。
software project life cycle.,ソフトウェアプロジェクトのライフサイクル。
Software Project Management Planned Information.,ソフトウェア プロジェクト管理の計画情報。
Software Quality Assurance,ソフトウェアの品質保証
software quality assurance plan,ソフトウェア品質保証計画
Software quality characteristics can be refined into multiple levels of sub-characteristics and finally into software quality attributes.,ソフトウェア品質特性は、複数のレベルのサブ特性に洗練され、最終的にはソフトウェア品質属性に絞り込むことができます。
software quality control,ソフトウェアの品質管理
"Software quality requirements could be specified previously by the requestor of the evaluation, while the evaluation group would verify presence and value of the software quality requirements.",ソフトウェア品質要件は、評価の要求者によって事前に指定され、評価グループはソフトウェア品質要件の存在と価値を検証します。
Software Release Management Planned Information.,ソフトウェア リリース管理の計画情報。
software requirement specification that is represented in an executable requirements language,実行可能な要件言語で表現されたソフトウェア要件仕様
software requirement that describes not what the software will do but how the software will do it,ソフトウェアが何をするかではなく、ソフトウェアがそれをどのように行うかを説明するソフトウェア要件
software requirements and architecture review,ソフトウェア要件とアーキテクチャのレビュー
"software requirements elicitation, analysis, specification, verification, and management",ソフトウェア要件の抽出、分析、仕様、検証、および管理
software requirements review,ソフトウェア要件のレビュー
software requirements specification,ソフトウェア要件仕様
software specification review,ソフトウェア仕様のレビュー
software supplied by the government for reuse in another project,別のプロジェクトで再利用するために政府が提供するソフトウェア
software system or element,ソフトウェア システムまたは要素
software system or software product cycle initiated by a user need or a perceived customer need and terminated by discontinued use of the product or when the software is no longer available for use,ユーザーのニーズまたは認識された顧客のニーズによって開始され、製品の使用中止またはソフトウェアが使用できなくなったときに終了するソフトウェア システムまたはソフトウェア製品サイクル。
software system running on a computer,コンピュータ上で動作するソフトウェア システム
software test environment,ソフトウェアテスト環境
software test plan,ソフトウェアテスト計画
software that aids in the development or maintenance of other software,他のソフトウェアの開発またはメンテナンスを支援するソフトウェア
software that communicates between an embedded operating system and an embedded application or firmware,組み込みオペレーティング システムと組み込みアプリケーションまたはファームウェアの間で通信するソフトウェア
"software that falls into one or more of the following categories: a) software whose inadvertent response to stimuli, failure to respond when required, response out-of-sequence, or response in combination with other responses ca result in an accident b) software that is intended to mitigate the result of an accident c) software that is intended to recover from the result of an accident",次のカテゴリの 1 つ以上に該当するソフトウェア: a) 刺激に対する不注意な反応、必要なときに反応しないこと、順序を外れた反応、または他の反応と組み合わせた反応が事故を引き起こす可能性があるソフトウェア b) 事故の結果を軽減することを目的としたソフトウェア c) 事故の結果から回復することを目的としたソフトウェア
"software that has been produced prior to or independent of the project for which the plan is prepared, including software that is obtained or purchased from outside sources",計画が作成されるプロジェクトよりも前に、またはプロジェクトとは独立して作成されたソフトウェア (外部ソースから入手または購入したソフトウェアを含む)
"software that is already developed and available; is usable either ""as is"" or with modifications; and which is provided by the supplier, acquirer, or a third party",すでに開発され利用可能なソフトウェア。 「そのまま」または変更して使用できます。サプライヤー、取得者、または第三者によって提供されるもの
software that is part of a larger system and performs some of the requirements of that system,より大きなシステムの一部であり、そのシステムの要件の一部を実行するソフトウェア
software tool designed to perform some frequently used support function,頻繁に使用されるサポート機能を実行するように設計されたソフトウェア ツール
"software tool or hardware device that operates concurrently with a system or component and supervises, records, analyzes, or verifies the operation of the system or component",システムまたはコンポーネントと同時に動作し、システムまたはコンポーネントの動作を監視、記録、分析、または検証するソフトウェア ツールまたはハードウェア デバイス
"software tool that accepts as input a computer program and a representation of its specification and produces, possibly with human help, a proof or disproof of the correctness of the program",コンピュータ プログラムとその仕様の表現を入力として受け取り、場合によっては人間の助けを借りて、プログラムの正しさの証明または反証を作成するソフトウェア ツール
software tool that accepts as input a design or code representation of a program and produces as output a flowchart of the program,プログラムの設計またはコード表現を入力として受け取り、プログラムのフローチャートを出力として生成するソフトウェア ツール
"software tool that accepts as input source code, test criteria, specifications, or data structure definitions; uses these inputs to generate test input data; and, sometimes, determines expected results",ソースコード、テスト基準、仕様、またはデータ構造定義を入力として受け入れるソフトウェアツール。これらの入力を使用してテスト入力データを生成します。そして、場合によっては、期待される結果を決定します
software tool that accepts as input the requirements or design for a computer program and produces source code that implements the requirements or design generator,コンピューター プログラムの要件または設計を入力として受け入れ、要件または設計ジェネレーターを実装するソース コードを生成するソフトウェア ツール
"software tool that accepts as input the source code of a computer program and produces as output a listing that identifies each of the program's variables, labels, and other identifiers and indicates which statements in the program define, set, or use each one",コンピューター プログラムのソース コードを入力として受け入れ、プログラムの各変数、ラベル、その他の識別子を識別し、プログラム内のどのステートメントがそれぞれを定義、設定、または使用するかを示すリストを出力として生成するソフトウェア ツール
software tool that automates part or all of the verification process,検証プロセスの一部またはすべてを自動化するソフトウェア ツール
"software tool that compares two computer programs, files, or sets of data to identify commonalities or differences",2 つのコンピューター プログラム、ファイル、またはデータ セットを比較して共通点または相違点を特定するソフトウェア ツール
software tool that decompiles computer programs,コンピュータプログラムを逆コンパイルするソフトウェアツール
software tool that disassembles computer programs,コンピュータプログラムを逆アセンブルするソフトウェアツール
"software tool that estimates or measures the execution time of a computer program or portion of a computer program, either by summing the execution times of the instructions along specified paths or by inserting probes at specified points in the program and measuring the execution time between probes",指定されたパスに沿った命令の実行時間を合計するか、プログラム内の指定された点にプローブを挿入してプローブ間の実行時間を測定することによって、コンピュータ プログラムまたはコンピュータ プログラムの一部の実行時間を推定または測定するソフトウェア ツール
software tool that executes concurrently with another program and provides detailed information about the execution of the other program,別のプログラムと同時に実行し、他のプログラムの実行に関する詳細情報を提供するソフトウェア ツール
"software tool that parses computer programs or other text, often as the first step of assembly, compilation, interpretation, or analysis",多くの場合、アセンブリ、編集、解釈、または分析の最初のステップとして、コンピューター プログラムまたはその他のテキストを解析するソフトウェア ツール
software tool used for computer-aided software engineering (CASE),コンピュータ支援ソフトウェアエンジニアリング (CASE) に使用されるソフトウェアツール
"software tool, often part of a compiler or assembler, that generates a load map",ロード マップを生成するソフトウェア ツール。多くの場合、コンパイラまたはアセンブラの一部です。
software used in an aircraft or rapid transit system,航空機または高速輸送システムで使用されるソフトウェア
software used to assist in and automate parts of the process of management of software assets,ソフトウェア資産の管理プロセスの一部を支援および自動化するために使用されるソフトウェア
software version description,ソフトウェアバージョンの説明
software version that is made formally available to a wider community,より広範なコミュニティが正式に利用できるようになったソフトウェア バージョン
software-driven design and development of electronic components such as microcomputer units and circuit boards,ソフトウェアを活用したマイコンユニットや基板などの電子部品の設計・開発
software's main line of development; the main starting point of most branches,ソフトウェア開発の主な分野。ほとんどのブランチの主な開始点
"Some baselines are project deliverables, while others provide the basis for further work. A baseline, together with all approved changes to the baseline, represents the current approved configuration. The term is thus used to refer to a particular version of a software configuration item that has been agreed on, e.g., as a stable base for further development or to mark a specific project milestone. In either case, any new baseline is agreed through the project's agreed change control procedures.",ベースラインの中にはプロジェクトの成果物であるものもあれば、さらなる作業の基礎を提供するものもあります。ベースラインは、ベースラインに対する承認されたすべての変更とともに、現在承認されている構成を表します。したがって、この用語は、たとえばさらなる開発のための安定した基盤として、または特定のプロジェクトのマイルストーンをマークするために、合意されたソフトウェア構成アイテムの特定のバージョンを指すために使用されます。いずれの場合も、新しいベースラインはプロジェクトの合意された変更管理手順を通じて合意されます。
some concrete representation for the identity of an object (instance),オブジェクト（インスタンス）のアイデンティティを表す何らかの具体的な表現
Some expert systems are able to improve their knowledge base and develop new inference rules based on their experience with previous problems.,一部のエキスパート システムは、知識ベースを改善し、以前の問題の経験に基づいて新しい推論ルールを開発できます。
Some implied needs only become evident when the system or software product is used in particular conditions.,暗黙のニーズの中には、システムまたはソフトウェア製品が特定の条件で使用された場合にのみ明らかになるものもあります。
"Some objectives are ongoing; some are achieved once met. Objectives can have different aspects (such as financial, health and safety, and environmental goals) and can apply at different levels (such as strategic, organization-wide, project, product and process). The enterprise language systematically uses the term objective, (rather than purpose) and emphasizes the need of expressing objective in measurable terms.",いくつかの目標は進行中です。満たされると達成されるものもあります。目標にはさまざまな側面 (財務目標、健康と安全、環境目標など) があり、さまざまなレベル (戦略的、組織全体、プロジェクト、製品、プロセスなど) に適用できます。企業用語では、(目的ではなく) 目標という用語が体系的に使用され、測定可能な用語で目標を表現する必要性が強調されています。
Some preparatory work on the user's data can be required.,ユーザーのデータに対するいくつかの準備作業が必要になる場合があります。
Some stakeholders can have interests that oppose each other or oppose the system.,一部の利害関係者は、互いに対立したり、システムに反対したりする利害関係を持っている場合があります。
Some subset of the work products will be baselined and some will form the set of project deliverables.,作業成果物の一部のサブセットはベースライン化され、一部はプロジェクト成果物のセットを形成します。
someone with management authority over an organizational unit within a functional organization. The manager of any group that actually makes a product or performs a service. Sometimes called a line manager,機能別組織内の組織単位に対する管理権限を持つ人。実際に製品を製造したりサービスを実行したりするグループのマネージャー。ラインマネージャーと呼ばれることもあります
something of interest as a whole or as comprised of parts,全体として、または部分的に構成される興味のあるもの
"something tangible, such as a template or software program, used in performing an activity to produce a product or result",製品や結果を生み出すための活動を実行する際に使用される、テンプレートやソフトウェア プログラムなどの有形のもの
"something toward which work is to be directed, a strategic position to be attained, or a purpose to be achieved, a result to be obtained, a product to be produced, or a service to be performed.",仕事の方向性、達成すべき戦略的地位、または達成すべき目的、得られる結果、生産すべき製品、または実行すべきサービス。
something which happens,何かが起こる
"sometimes called integrated programming support environment. The environment typically includes tools for specifying, designing, editing, compiling, loading, testing, configuration management, and project management.",統合プログラミング支援環境と呼ばれることもあります。この環境には通常、指定、設計、編集、コンパイル、ロード、テスト、構成管理、プロジェクト管理のためのツールが含まれています。
"Sometimes privileges are associated with a specific part of the product (for example, artwork or documentation) or a specific branch.",権限は、製品の特定の部分 (アートワークやドキュメントなど) または特定のブランチに関連付けられている場合があります。
sometimes starts with a hostile backout.,敵対的な撤退から始まることもあります。
sort of an argument of an operator,演算子の引数のようなもの
sort of an output of an operator,演算子の出力のようなもの
"source code analyzers to compute code metrics, CASE tools to produce formalized models, test environments to run the executable programs, checklists to collect inspection data, or spreadsheets to produce syntheses of measures",コードメトリックを計算するソースコードアナライザー、形式化されたモデルを作成するCASEツール、実行可能プログラムを実行するテスト環境、検査データを収集するチェックリスト、または測定の合成を作成するスプレッドシート
source code and documentation that is kept in the custody of a third party until specified contractual conditions have been fulfilled,指定された契約条件が満たされるまで第三者の管理下に保管されるソース コードおよびドキュメント
"source code instruction that is replaced by a predefined sequence of source instructions, usually in the same language as the rest of the program and usually during assembly or compilation",事前に定義された一連のソース命令によって置き換えられるソースコード命令。通常はプログラムの残りの部分と同じ言語で、通常はアセンブリまたはコンパイル中に行われます。
"source code, code for execution, or multiple software assets packaged into an internal production release and tested for a target platform",ソース コード、実行用コード、または社内実稼働リリースにパッケージ化され、ターゲット プラットフォーム向けにテストされた複数のソフトウェア資産
"source code, object code, control code, control data, or a collection of these items",ソース コード、オブジェクト コード、制御コード、制御データ、またはこれらの項目のコレクション
source language instruction that provides information or direction to the assembler or compiler and is not translated into a target language instruction,アセンブラまたはコンパイラに情報や指示を提供するソース言語命令であり、ターゲット言語命令には翻訳されません。
"Source Lines of Code, the number of lines of programming language code in a program before compilation",コードのソース行数、コンパイル前のプログラム内のプログラミング言語コードの行数
"source of a defect such that if it is removed, the defect is decreased or removed",欠陥が除去されると、欠陥が減少または除去されるような欠陥の原因
"source of potential harm or a situation with a potential for harm in terms of human injury; damage to health, property, or the environment; or some combination of these",潜在的な危害の原因、または人身傷害という点で危害が及ぶ可能性のある状況。健康、財産、環境への損害。またはこれらの組み合わせ
source of variation of a process that exists because of normal and expected interactions among components of a process,プロセスのコンポーネント間の通常の予期される相互作用のために存在するプロセスの変動の原因
"source of variation that is not inherent in the system, is not predictable, and is intermittent",システムに固有ではなく、予測不可能で、断続的な変動の原因
source statement considered as a line of code,コード行としてみなされるソース ステートメント
"source statement that defines macros, or labels, or directs the compiler to insert external source statements (for example, an include statement), or directs conditional compilation, or is not described by one of the other type attributes",マクロまたはラベルを定義するソース ステートメント、または外部ソース ステートメント (include ステートメントなど) を挿入するようにコンパイラーに指示する、または条件付きコンパイルを指示する、または他の型属性のいずれかによって記述されないソース ステートメント
source statement that directs the actions of the computer at run time,実行時にコンピュータの動作を指示するソース ステートメント
source statement that has been changed from the original source,元のソースから変更されたソース ステートメント
"source statement that is developed in support of the final product, but not delivered to the customer",最終製品をサポートするために開発されているが、顧客には提供されていないソース ステートメント
source statement that is incorporated into the product delivered to the customer,顧客に提供される製品に組み込まれるソースステートメント
"source statement that is newly created for, added to, or modified for a software product",ソフトウェア製品用に新たに作成、追加、または変更されたソース ステートメント
source statement that is obtained from an external product,外部製品から取得したソースステートメント
source statement that is removed or modified from an existing software product as a new product is constructed,新しい製品が構築されるときに既存のソフトウェア製品から削除または変更されるソース ステートメント
source statement that reserves or initializes memory at compilation time,コンパイル時にメモリを予約または初期化するソース ステートメント
"Source statements can be classified by function as executable, data declaration, compiler directive, or comment. They can also be classified as deliverable or nondeliverable.",ソース ステートメントは、実行可能ファイル、データ宣言、コンパイラ ディレクティブ、またはコメントとして機能ごとに分類できます。また、成果物は成果物か成果物不可能かに分類することもできます。
sources of objective evidence used to support the assessors' judgment in rating process attributes,評価プロセスの属性における評価者の判断をサポートするために使用される客観的な証拠の情報源
spaces and tabs,スペースとタブ
special consideration within product line engineering process groups and tasks to associated specialized methods and tools,製品ラインエンジニアリングプロセスグループおよびタスク内で、関連する特殊な手法やツールに対する特別な考慮事項
special function register,特殊機能レジスタ
special instance of the case construct in which two or more different values of the control expression result in the same processing,制御式の 2 つ以上の異なる値が同じ処理となる case 構造の特別なインスタンス
special kind of model that specifies the abstract syntax of a modeling language,モデリング言語の抽象構文を指定する特別な種類のモデル
"special marking of a place, defined with the high-level net",ハイレベルネットで定義された場所の特別なマーキング
special-purpose register that contains a program status word as in (1),(1)のようなプログラムステータスワードを含む特殊目的レジスタ
specialization of a receptacle that allows multiple simultaneous connections,複数の同時接続を可能にするレセプタクルの特殊化
specialization of a receptacle that only allows a single connection at a given time,特定の時点で 1 つの接続のみを許可するレセプタクルの特殊化
specialization of one or more superclasses,1 つ以上のスーパークラスの特殊化
specific (not many-to-many) relationship in which every attribute in the primary key of the parent entity i contained in the primary key of the child entity,親エンティティの主キーのすべての属性が子エンティティの主キーに含まれる特定の (多対多ではない) 関係
"specific approach to acquiring products and services that is based on considerations of supply sources, acquisition methods, requirements specification types, contract or agreement types, and related acquisition risks",供給源、取得方法、要件仕様の種類、契約または協定の種類、および関連する取得リスクの考慮に基づいた、製品およびサービスを取得するための具体的なアプローチ
"specific certification requirements related to specified categories of persons, to which the same particular standards and rules and the same procedures apply",特定のカテゴリーの人物に関連する特定の認証要件。同じ特定の基準と規則、同じ手順が適用されます。
specific complexity rating assigned to a function using defined rules,定義されたルールを使用して関数に割り当てられる特定の複雑さの評価
specific constraints associated with a policy in some particular epoch,特定のエポックにおけるポリシーに関連付けられた特定の制約
"specific data items identified as contents of information items for appraising a factor in an evaluation, audit, test or review",評価、監査、テストまたはレビューにおける要素を評価するための情報項目の内容として特定される特定のデータ項目
"specific entity that exists in a program at runtime, in object-oriented programming",オブジェクト指向プログラミングにおいて、実行時にプログラム内に存在する特定のエンティティ
specific implementation of FSM defined by a set of rules,一連のルールによって定義された FSM の特定の実装
specific instantiation of a test sub-proces,テストサブプロセスの特定のインスタンス化
"specific or generic tool which is used for test execution and test management such as test results recording, test results display, test results interpretation, generation of test data, generation of test procedure, generation of test scripts, test modelling",テスト結果の記録、テスト結果の表示、テスト結果の解釈、テストデータの生成、テスト手順の生成、テストスクリプトの生成、テストモデリングなど、テストの実行およびテスト管理に使用される特定または汎用のツール
"specific tools, systems, computer programs, etc., used to transfer information among project stakeholders",プロジェクトの関係者間で情報を転送するために使用される特定のツール、システム、コンピューター プログラムなど
specific type of activity that contributes to the execution of a process,プロセスの実行に寄与する特定の種類のアクティビティ
"specific type of repository for CM information, usually a data store, used to record attributes of configuration items, and the relationships between configuration items, throughout their lifecycle",CM 情報の特定のタイプのリポジトリ (通常はデータ ストア)。構成アイテムの属性と、ライフサイクル全体にわたる構成アイテム間の関係を記録するために使用されます。
specific value of an independent variable,独立変数の特定の値
specific version of test target which is used for one-time execution of Dynamic Test Execution or Code Analysis,動的テスト実行またはコード分析の 1 回限りの実行に使用されるテスト ターゲットの特定のバージョン
specific way to allocate a target system into a category,ターゲット システムをカテゴリに割り当てる具体的な方法
"specific, measurable, achievable, relevant and traceable",具体的、測定可能、達成可能、関連性があり、追跡可能
"specific, named collection of features that can be described by an IDL component definition or a corresponding structure in an interface repository",IDL コンポーネント定義またはインターフェイス リポジトリ内の対応する構造によって記述できる、特定の名前付き機能のコレクション
specific; detailed,特定の;詳しい
specifically defined division or grouping of software based upon one or more attributes or characteristics,1 つ以上の属性または特性に基づいて、ソフトウェアを具体的に定義した分割またはグループ化
"Specifically, a meta-entity represents a set of zero or more meta-attributes, stored together to represent a thing event or concept that has instances in a model.",具体的には、メタ エンティティは、モデル内にインスタンスを持つモノのイベントや概念を表すために一緒に格納された 0 個以上のメタ属性のセットを表します。
"Specifically, a meta-meta-relationship represents the definition of a relationship between instances of me meta-entities",具体的には、メタメタ関係は、me メタエンティティのインスタンス間の関係の定義を表します。
"Specifically, a meta-relationship represents the definition of a relationship between meta-entities that ha instances in a model. A meta-relationship can also define a set of zero or more meta-attributes, stored together to represen characteristics of a relationship between meta-entities",具体的には、メタ関係は、モデル内のインスタンスを持つメタ エンティティ間の関係の定義を表します。メタ関係では、メタ エンティティ間の関係の特性を表すために一緒に保存される、0 個以上のメタ属性のセットを定義することもできます。
"Specifically, a request can be for the value of an attribute, for the value of a participant property, for the application of an operation, or for the truth of a constraint. Request also encompasses sentences of such requests. Logical sentences about the property values and constraints of objects are used for queries, pre-conditions, post-conditions, an responsibility realizations.",具体的には、リクエストは、属性の値、参加者プロパティの値、操作の適用、または制約の真偽を求めるものです。要請には、そのような要請の文も含まれる。オブジェクトのプロパティ値と制約に関する論理文は、クエリ、事前条件、事後条件、責任の実現に使用されます。
"Specifically, an arrow label identifies the object type set that is represented by an arrow segment.",具体的には、矢印ラベルは、矢印セグメントによって表されるオブジェクト タイプ セットを識別します。
"Specifically, the CDIF meta-metamodel defines an Entity-Relationship-Attribute model that is used to construct and define both metamodels and the CDIF meta-metamodel itself",具体的には、CDIF メタメタモデルは、メタモデルと CDIF メタメタモデル自体の両方を構築および定義するために使用されるエンティティ関係属性モデルを定義します。
"Specifically, used to designate the location of an object in the three model layers.",具体的には、3 つのモデル レイヤー内のオブジェクトの位置を指定するために使用されます。
specification change notice,仕様変更のお知らせ
"specification describing a concurrent task's interface, structure, timing characteristics, relative priority, errors detected, and task event sequencing logic",同時タスクのインターフェイス、構造、タイミング特性、相対的な優先順位、検出されたエラー、およびタスク イベント シーケンス ロジックを記述する仕様
"specification language with special constructs and, sometimes, verification protocols, used to develop, analyze, and document a hardware or software design",ハードウェアまたはソフトウェアの設計を開発、分析、文書化するために使用される、特別な構成要素と、場合によっては検証プロトコルを備えた仕様言語
"specification language with special constructs and, sometimes, verification protocols, used to develop, analyze, and document a program design",プログラム設計の開発、分析、文書化に使用される、特別な構造と、場合によっては検証プロトコルを備えた仕様言語
"specification language with special constructs and, sometimes, verification protocols, used to develop, analyze, and document hardware or software requirements",ハードウェアまたはソフトウェアの要件を開発、分析、文書化するために使用される、特別な構造と、場合によっては検証プロトコルを備えた仕様言語
specification of a given behavior as a composition,特定の動作を構成として指定する
specification of a given object as a composition,特定のオブジェクトを構成として指定する
"specification of an action that comprises the name for the action, the number, names and types of its parameters, and an indication of the causality of the object that instantiates the action template",アクションの名前、そのパラメータの数、名前とタイプ、およびアクション テンプレートをインスタンス化するオブジェクトの因果関係の指示で構成されるアクションの仕様
specification of constraints on the replication of an object including both constraints on the availability of the object and constraints on the performance of the object,オブジェクトの可用性に関する制約とオブジェクトのパフォーマンスに関する制約の両方を含む、オブジェクトのレプリケーションに関する制約の仕様
"specification of constraints on the use of specific processing, storage and communication functions",特定の処理、ストレージ、および通信機能の使用に関する制約の仕様
specification of data retention capabilities for the subject software,対象ソフトウェアのデータ保持機能の仕様
specification of failure modes which an object will not exhibit,オブジェクトが示さない故障モードの仕様
"specification of how many instances of a first class can or are required to exist for each instance of a second (not necessarily distinct) class, and how many instances of a second class can or are required to exist for each instance of a first class",2 番目の (必ずしも別個の) クラスのインスタンスごとに最初のクラスのインスタンスがいくつ存在できるか、または存在する必要があるか、および最初のクラスのインスタンスごとに 2 番目のクラスのインスタンスが何個存在できるか、または存在する必要があるかの仕様
"specification of the allowable state changes of one or more information objects, subject to the constraints of any invariant schemata",不変スキーマの制約に従って、1 つまたは複数の情報オブジェクトの許容される状態変更の仕様
specification of the common features of a collection of <X>s in sufficient detail that an <X> can be instantiated using it,<X> のコレクションの共通機能を、それを使用して <X> をインスタンス化できるほど詳細に指定する
"specification of the concepts, relationships and rules that are used to define a methodology",方法論を定義するために使用される概念、関係、ルールの仕様
specification of the conventions for constructing and using a view,ビューの構築と使用に関する規則の仕様
specification of the elements and conventions available for constructing and using a design view,デザイン ビューの構築と使用に使用できる要素と規約の仕様
specification of the functions of the components of a software system and of the working relationships between them,ソフトウェア システムのコンポーネントの機能とコンポーネント間の動作関係の仕様
specification of the functions of the components of a system and of the working relationships among them,システムのコンポーネントの機能とコンポーネント間の動作関係の仕様
specification of the object management group for repositories of type information for arbitrary type systems,任意の型システムの型情報のリポジトリに対するオブジェクト管理グループの仕様
"specification of the objectives, requirements, and scope of a project and its relations to other projects",プロジェクトの目的、要件、範囲の指定、および他のプロジェクトとの関係
"specification of the process to follow together with the work products to be used and generated, plus the consideration of the people and tools involved, during an IBD development effort",IBD 開発作業中に、使用および生成される作業成果物とともに従うべきプロセスの仕様に加えて、関係する人材とツールの考慮事項
"specification of the state of one or more information objects, at some point in time, subject to the constraints of any invariant schemata",不変スキーマの制約に従って、ある時点での 1 つまたは複数の情報オブジェクトの状態を指定すること
"specification or product that has been formally reviewed and agreed upon, that thereafter serves as the basis for further development, and that can be changed only through formal change control procedures",正式にレビューおよび合意され、その後さらなる開発の基礎として機能し、正式な変更管理手順を通じてのみ変更できる仕様または製品
specification putting constraints on the mobility of an object,オブジェクトの可動性に制約を課す仕様
"specification that a property is total (i.e., mandatory), single-valued, and constant",プロパティが合計 (つまり、必須)、単一値、および定数であるという仕様
"specification that an attribute or participant property value, once assigned, shall not be changed, or that an operation shall always provide the same output argument values given the same input argument values.",属性または参加者プロパティ値は、一度割り当てられると変更してはならない、または同じ入力引数の値が与えられた場合、操作は常に同じ出力引数の値を提供しなければならないという仕様です。
specification that is used to prove mathematically the validity of an implementation or to derive mathematically the implementation,実装の正当性を数学的に証明するため、または実装を数学的に導出するために使用される仕様
specification written and approved in accordance with established standards,確立された規格に従って作成および承認された仕様
"specification written in a formal notation, often for use in proof of correctness",正式な表記法で書かれた仕様。多くの場合、正確性の証明に使用されます。
"specification, construction, testing and delivery of a new application or of a discrete addition to an existing application",新しいアプリケーションまたは既存のアプリケーションへの個別の追加の仕様、構築、テスト、および配信
"specification, for a collection-valued property, of how many members the value of the property, that is, the collection, can or is required to have for each instance",コレクション値プロパティの場合、プロパティの値、つまりコレクションがインスタンスごとに持つことができる、または持つ必要があるメンバーの数の仕様
"specification, for a property, of ""who can see it?""",プロパティの「誰がそれを見ることができるか」の仕様。
specifications that are in effect at a given time for a system under development,開発中のシステムに対して特定の時点で有効な仕様
specified arrangement and encoding for data to be communicated or stored and retrieved,通信または保存および取得されるデータの指定された配置とエンコーディング
specified way to carry out an activity or process,活動またはプロセスを実行するための指定された方法
speed and ease with which a program can be corrected or changed,プログラムの修正や変更の速度と容易さ
"spending by an enterprise to acquire tangible infrastructure or facilities items, such as furniture, computers, and the like",家具やコンピュータなどの有形のインフラストラクチャまたは施設アイテムを取得するために企業が支出する支出
spreading of computation and data across a number of computers connected by a network,ネットワークで接続された多数のコンピュータ間での計算とデータの分散
"square enclosure encompassing a box number, which indicates that the box is decomposed or detailed by a child diagram",ボックス番号を囲む正方形の囲み。ボックスが子図によって分解または詳細化されていることを示します。
"stage in the life cycle when completed software or documentation is prepared, published, and packaged for distribution",完成したソフトウェアまたはドキュメントが準備、公開され、配布用にパッケージ化されるライフサイクルの段階
Stage-Gate methodology,ステージゲート手法
Stages relate to major progress and achievement milestones of the system through its life cycle. Stages can overlap.,ステージは、システムのライフサイクル全体にわたる主要な進歩と達成のマイルストーンに関連しています。ステージは重複する可能性があります。
stakeholder,利害関係者
stakeholder requirements specification,利害関係者の要件仕様
stakeholder responsible for devising and documenting the software design,ソフトウェア設計の考案と文書化を担当する利害関係者
stakeholder that acquires or procures a product or service from a supplier,サプライヤーから製品またはサービスを取得または調達する利害関係者
stakeholder that is identified for involvement in specified activities and is included in a plan,特定の活動への関与が特定され、計画に含まれる利害関係者
standard against which results can be measured or assessed,結果を測定または評価できる基準
Standard Generalized Markup Language,標準の汎用マークアップ言語
standard operating procedure,標準操作手順
"standard that complies with the ODP Reference Model, directly or indirectly.",ODP 参照モデルに直接的または間接的に準拠する標準。
standard that deals with the series of actions or operations used in making or achieving a product,製品の製造または実現に使用される一連のアクションまたは操作を扱う規格
"standard that defines what constitutes completeness and acceptability of items that are used or produced, formally or informally, during the software engineering process",ソフトウェアエンジニアリングプロセス中に、公式または非公式に使用または作成されるアイテムの完全性と許容性を構成するものを定義する標準
standard that describes the characteristics of a course of study on a body of knowledge that is offered by an educational institution,教育機関が提供する一連の知識に関する学習コースの特徴を説明する標準
standard that describes the characteristics of a design or a design description of data or program components,設計の特性を記述する規格、またはデータまたはプログラムコンポーネントの設計記述
"standard that describes the characteristics of a language used to describe a requirements specification, a design, or test data",要件仕様、設計、またはテストデータを記述するために使用される言語の特性を記述する標準
standard that describes the characteristics of a scheme for accomplishing defined objectives or work within specified resources,定義された目標または指定されたリソース内での作業を達成するためのスキームの特性を説明する標準
"standard that describes the characteristics of a set of moral principles dealing with accepted standards of conduct by, within, and among professionals",専門家による、専門家内、および専門家間で受け入れられた行動基準を扱う一連の道徳原則の特徴を説明する基準
"standard that describes the characteristics of a system or set of names, or designations, or symbols",システム、名前、指定、シンボルのセットの特性を説明する標準
standard that describes the characteristics of an authorization given by an official or a legal authority to an individual or organization to do or own a specific thing,特定のものを行うか所有するために役人または法的権限によって個人または組織に与えられる認可の特徴を説明する標準
standard that describes the characteristics of applying accumulated technical or management skills and methods in the creation of a product or performing a service,製品の作成またはサービスの実行において、蓄積された技術または管理スキルと方法を適用する特徴を説明する規格
standard that describes the characteristics of data or program components subdivided into other components,他のコンポーネントに細分化されたデータまたはプログラムコンポーネントの特性を記述する標準
standard that describes the characteristics of describing results of engineering and management activities,エンジニアリングおよび管理活動の結果の記述の特徴を記述する標準
standard that describes the characteristics of evaluating a process or product,プロセスまたは製品の評価の特徴を説明する基準
standard that describes the characteristics of formal interfaces within a profession,専門職内の正式なインターフェースの特徴を説明する標準
standard that describes the characteristics of portraying aspects of an engineering or management product,エンジニアリングまたは管理製品の側面の描写の特徴を説明する標準
"standard that describes the characteristics of product information or procedures provided to help understand, test, install, operate, or maintain the product",製品の理解、テスト、設置、操作、保守を支援するために提供される製品情報または手順の特性を説明する規格
standard that describes the characteristics of the general areas of work or profession,仕事または職業の一般的な分野の特徴を説明する標準
standard that describes the characteristics of the orderly process or procedure used in the engineering of a product or performing a service,製品のエンジニアリングまたはサービスの実施に使用される秩序あるプロセスまたは手順の特徴を説明する規格
standard that identifies a profession as a discipline and distinguishes it from other professions,専門職を専門分野として特定し、他の専門職と区別する基準
standard that is adopted by an international standardizing/standards organization and made available to the public,国際標準化/標準化団体によって採用され、一般に公開される規格
standard vehicle format supported by CDIF,CDIF がサポートする標準車両フォーマット
standardized in IEEE 1394,IEEE 1394で標準化
"standardized notation, modeling technique, or other representation scheme and its usage conventions, shown to be effective in representing and communicating design information",設計情報の表現と伝達に効果的であることが示されている、標準化された表記法、モデリング技術、またはその他の表現スキームとその使用規則
"standards, rules, or tests on which a judgment or decision can be based, or by which a product, service, result, or process can be evaluated",判断や決定の基礎となる、あるいは製品、サービス、結果、プロセスを評価する基準、規則、テスト。
start-to-finish [A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition,最初から最後まで [プロジェクト管理知識体系ガイド (PMBOK® ガイド) - 第 5 版]
start-to-start [A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition,スタートからスタート [プロジェクト管理知識体系ガイド (PMBOK® ガイド) - 第 5 版]
state class that is not a dependent state class,依存状態クラスではない状態クラス
state comprising properties associated with a unit that are defined by functional dependence on the properties of past interaction occurrences and that affect the properties of future output interaction occurrences,過去のインタラクション発生のプロパティへの関数依存によって定義され、将来の出力インタラクション発生のプロパティに影響を与える、ユニットに関連付けられたプロパティで構成される状態。
"state in which a computer system is expending most or all of its resources on overhead operations, such as swapping data between main and auxiliary storage, rather than on intended computing functions",コンピュータ システムが、意図したコンピューティング機能ではなく、主記憶装置と補助記憶装置の間でのデータの交換などのオーバーヘッド操作にそのリソースのほとんどまたはすべてを費やしている状態
state of,の状態
"state of a system which, in combination with some states of the environment, will result in adverse consequence",環境のいくつかの状態と組み合わされて悪影響をもたらすシステムの状態
state of having a contractual context in common,契約上の共通の文脈を持っている状態
state of the system or system environment which can lead to adverse effects,悪影響をもたらす可能性のあるシステムまたはシステム環境の状態
state which represents the partitioning of all unit behavior patterns into (possibly overlapping) subsets of behavior patterns that can be elicited from a unit at a particular point in time,すべてのユニットの行動パターンを、特定の時点でユニットから引き出せる行動パターンの（重複する可能性がある）サブセットに分割することを表す状態
"state, even partial, of deficiency of information related to understanding or knowledge of an event, its consequence, or likelihood",出来事、その結果、または可能性についての理解または知識に関連する情報が部分的であっても欠落している状態
"stated level of usability expressed in terms of effectiveness, efficiency and satisfaction in a specified context of use which can be verified",検証可能な特定の使用状況における有効性、効率性、満足度の観点から表現されるユーザビリティの明示されたレベル
statement about some feature or characteristic of an asset that can be assessed as being true or false during a certification process,認証プロセス中に真または偽として評価できる、資産の何らかの機能または特性に関する記述
statement conforming to the syntax of the Semantic Transfer Language (STL) that describes and characterizes a software behavior concept recognized within the STL,セマンティック転送言語 (STL) の構文に準拠したステートメント。STL 内で認識されるソフトウェアの動作概念を記述および特徴付ける。
"statement in a programming language, specifying an operation to be performed by a computer and the addresses or values of the associated operands",プログラミング言語のステートメント。コンピューターによって実行される操作と、関連するオペランドのアドレスまたは値を指定します。
"statement of a problem, which can include a description of the data, the method, the procedures, and algorithms used to solve it",問題の記述。問題を解決するために使用されるデータ、方法、手順、アルゴリズムの説明が含まれる場合があります。
statement of causal and affective relationships in a behavior model linking particular stimulus interactions to particular response interactions and changes within a unit under a certain set of conditions on a unit's lifeline,ユニットのライフライン上の特定の条件下で、特定の刺激の相互作用を特定の反応の相互作用とユニット内の変化に結びつける、行動モデルにおける因果関係と感情関係の記述。
statement of constraints or relations that can be used to distinguish a subset of particular property states that all satisfy the condition,すべてが条件を満たす特定のプロパティ状態のサブセットを区別するために使用できる制約または関係のステートメント
statement of how property values are combined to yield a result,プロパティ値を組み合わせて結果を生成する方法のステートメント
statement of objectives,目標宣言
statement of the circumstances (input interaction occurrences and property state) that allow a stimulus to cause the occurrence of a particular behavior pattern,刺激が特定の行動パターンの発生を引き起こす状況（入力相互作用の発生と特性状態）の記述
statement of the constraints that will be satisfied by output interaction occurrences and the next property state as a result of the occurrence of a particular behavior pattern,出力相互作用の発生と、特定の動作パターンの発生の結果としての次のプロパティの状態によって満たされる制約のステートメント
"statement of what the interface to a responsibility ""looks like"".",責任へのインターフェースが「どのようなものであるか」を示すステートメント。
statement of what the responsibility means,責任が何を意味するかについての声明
statement of work,作業明細書
statement that identifies what results a product or process shall produce,製品またはプロセスがどのような結果を生み出すかを特定する声明
"statement that some terms or other linguistic constructs in a specification from one viewpoint are associated with (e.g., describe the same entities as) terms or constructs in a specification from a second viewpoint",ある観点からの仕様内の一部の用語または他の言語構成が、第 2 の観点からの仕様内の用語または構成に関連付けられている (たとえば、同じエンティティを記述する) という記述
statement that translates or expresses a need and its associated constraints and conditions,ニーズとそれに関連する制約や条件を翻訳または表現するステートメント
statement where a variable is assigned a value,変数に値を代入するステートメント
"statement which, when compiled, is translated into object code, which will be executed procedurally when the test item is running and can perform an action on program data",コンパイル時にオブジェクト コードに変換されるステートメント。テスト項目の実行時に手続き的に実行され、プログラム データに対してアクションを実行できます。
"statement, provided as part of the assessment input, which defines the reasons for performing the assessment",評価入力の一部として提供されるステートメント。評価を実行する理由を定義します。
states of being that must be present before an effort can begin successfully2. artifacts and other review or audit elements that must be completed before the review or audit can be conducted,努力がうまく始まる前に存在しなければならない存在の状態2.レビューまたは監査を実施する前に完了する必要があるアーティファクトおよびその他のレビューまたは監査要素
"states of being that must be present before an effort can end successfully2. review or audit elements that must be assessed, completed, and action items closed before successful completion of the technical review or audit can be declared",努力が正常に終了する前に存在しなければならない存在の状態2.技術的なレビューまたは監査の正常な完了を宣言する前に評価、完了し、アクションアイテムを終了する必要があるレビューまたは監査の要素
"static analysis technique in which a designer or programmer leads members of the development team and other interested parties through a segment of documentation or code, and the participants ask questions and make comments about possible errors, violation of development standards, and other problems",設計者またはプログラマーが開発チームのメンバーやその他の関係者をドキュメントやコードのセグメントを通じて導き、参加者が潜在的なエラー、開発標準の違反、その他の問題について質問したりコメントしたりする静的分析手法
"static analysis technique in which code listings, test results, or other documentation are visually examined, usually by the person who generated them, to identify errors, violations of development standards, or other problems",コードリスト、テスト結果、またはその他の文書を、通常はそれらを作成した人が視覚的に検査して、エラー、開発標準の違反、またはその他の問題を特定する静的分析手法
"static analysis, static binding",静的解析、静的バインディング
"static and dynamic models, other documents and source code",静的モデルと動的モデル、その他のドキュメントとソースコード
"Static attributes include those that relate to the software architecture, structure and its components. Static attributes can be verified by review, inspection, simulation, or automated tools.",静的属性には、ソフトウェア アーキテクチャ、構造、およびそのコンポーネントに関連する属性が含まれます。静的属性は、レビュー、検査、シミュレーション、または自動ツールによって検証できます。
"static programming entity in an object-oriented program that contains a combination of functionality and data3. of <X>s, the set of all <X>s satisfying a type",機能とデータの組み合わせを含むオブジェクト指向プログラム内の静的プログラミング エンティティ3。 <X> のセット、タイプを満たすすべての <X> のセット
static random access memory,スタティックランダムアクセスメモリ
statistical formula that relates the conditional probability P (A | B) to the inverse conditional probability P (B | A),条件付き確率 P (A | B) を逆条件付き確率 P (B | A) に関連付ける統計式
"statistically based analysis of a process and measures of process performance, which identify common and special causes of variation in process performance and maintain process performance within limits",統計に基づいたプロセスの分析とプロセスパフォーマンスの測定。プロセスパフォーマンスの変動の一般的および特殊な原因を特定し、プロセスパフォーマンスを制限内に維持します。
status of an information structure that follows the specified XML Schema document and is valid from an XML perspective,指定された XML スキーマ文書に従い、XML の観点から有効な情報構造のステータス
step-by-step description of a series of events that occur concurrently or sequential,同時または順次に起こる一連の出来事の段階的な説明
steps taken to reduce or mitigate risk,リスクを軽減または軽減するために講じられた措置
steps to take when a contingency plan does not solve the associated problem,緊急時対応計画が関連する問題を解決できない場合にとるべき手順
stimulus used to periodically activate a task,タスクを定期的にアクティブにするために使用される刺激
stock keeping unit,在庫管理単位
storage allocation technique in which auxiliary storage can be addressed as though it were part of main storage,補助記憶域を主記憶域の一部であるかのようにアドレス指定できる記憶域割り当て技術
"storage allocation technique in which computer program segments are loaded from auxiliary storage to main storage when needed, overwriting other segments not currently in use",必要に応じてコンピュータプログラムのセグメントを補助記憶装置から主記憶装置にロードし、現在使用されていない他のセグメントを上書きする記憶割り当て技術
storage allocation technique in which contiguous blocks of non-allocated storage are combined to form single block,割り当てられていないストレージの連続ブロックを結合して単一のブロックを形成するストレージ割り当て技術
storage allocation technique in which each search for a suitable block of storage begins with the block following the one last allocated,ストレージの適切なブロックの検索を、最後に割り当てられたブロックに続くブロックから開始するストレージ割り当て技術
storage allocation technique in which pages are transferred from auxiliary storage to main storage in anticipation of a need for those pages,ページの必要性を見込んでページを補助記憶装置から主記憶装置に転送するストレージ割り当て技術
storage allocation technique in which pages are transferred from auxiliary storage to main storage only when those pages are needed,ページが必要な場合にのみ補助記憶装置から主記憶装置にページを転送するストレージ割り当て技術
"storage allocation technique in which programs or data are divided into fixed-length blocks called pages, main storage is divided into blocks of the same length called page frames, and pages are stored in page frames, not necessarily contiguously or in logical order",プログラムまたはデータをページと呼ばれる固定長のブロックに分割し、主記憶域をページ フレームと呼ばれる同じ長さのブロックに分割し、ページをページ フレームに格納するストレージ割り当て技術。必ずしも連続的または論理的な順序で保存される必要はありません。
"storage allocation technique in which programs or data are divided into fixed-length blocks called pages, main storage is divided into blocks of the same length called page frames, and pages are transferred between main and auxiliary storage as needed",プログラムまたはデータをページと呼ばれる固定長のブロックに分割し、主記憶装置をページ フレームと呼ばれる同じ長さのブロックに分割し、必要に応じて主記憶装置と補助記憶装置の間でページを転送するストレージ割り当て技術
"storage allocation technique in which programs or data to be stored are allocated a block of storage of equal or greater size, so that logically contiguous programs and data are assigned physically contiguous storage locations",ストレージ割り当て技術。論理的に連続したプログラムやデータに物理的に連続したストレージ位置が割り当てられるように、格納されるプログラムまたはデータに同等以上のサイズのストレージのブロックが割り当てられます。
storage allocation technique in which the contents of all allocated storage areas are moved to the beginning of the storage space and the remaining storage blocks are combined into a single block,割り当てられたすべてのストレージ領域の内容がストレージスペースの先頭に移動され、残りのストレージブロックが単一のブロックに結合されるストレージ割り当て技術
"storage allocation technique in which the storage assigned to a computer program varies during program execution, based on the current needs of the program and of other executing programs",プログラムおよび他の実行中のプログラムの現在のニーズに基づいて、プログラムの実行中にコンピューター プログラムに割り当てられるストレージを変更するストレージ割り当て手法
"storage devices, input-output units, one or more processing units, data, files, and program",ストレージデバイス、入出力ユニット、1 つ以上の処理ユニット、データ、ファイル、およびプログラム
"storage which enables a functional process to store data beyond the life of the functional process, or which enables a functional process to retrieve data stored by another functional process, or stored by an earlier occurrence of the same functional process, or stored by some other process",機能プロセスが機能プロセスの寿命を超えてデータを保存できるようにするストレージ、または機能プロセスが別の機能プロセスによって保存されたデータ、同じ機能プロセスの以前の発生によって保存されたデータ、または他のプロセスによって保存されたデータを取得できるようにするストレージ。
"strategy designed by senior management to ensure an organization's continued existence and enhance its profitability, market share, and other factors influencing the organization's success",組織の存続を確保し、収益性、市場シェア、および組織の成功に影響を与えるその他の要素を強化するために上級管理者によって設計された戦略
strength of the relationships between modules.,モジュール間の関係の強さ。
"strengths, weaknesses, opportunities, and threats",強み、弱み、機会、脅威
"string that consists of a number of bits, treated as a unit, and usually representing a character or a part of a character",多数のビットで構成され、1 つの単位として扱われ、通常は文字または文字の一部を表す文字列
"Strongly positive or negative terms influence the overall composite value disproportionately, although the weight stays the same. There are various non-compensatory models depending on the evaluation policy, the purpose of the composite measure, or the measurement scale.",強い正または負の項は、重みは同じであっても、全体の複合値に不均衡な影響を与えます。非補償モデルには、評価方針、複合尺度の目的、測定規模に応じてさまざまなモデルがあります。
structural components or features of a language and rules that define the ways in which the language constructs can be assembled together to form sentences,言語の構造コンポーネントまたは特徴、および言語構造を組み立てて文を形成する方法を定義する規則
"structural or grammatical rules that define how the symbols in a language are to be combined to form words, phrases, expressions, and other allowable constructs",言語内の記号をどのように組み合わせて単語、語句、表現、その他の許容される構成要素を形成するかを定義する構造的または文法的規則
structure charts and pseudocode,構造図と疑似コード
"structure in which components are ranked into levels of subordination; each component has zero, one, or more subordinates; and no component has more than one superordinate component2. arrangement of model elements according to traceability relationships, where an element that owns or groups other elements is considered at a higher level than the owned (grouped) elements",コンポーネントが従属レベルにランク付けされる構造。各コンポーネントには、0 個または 1 個以上の下位要素があります。また、複数の上位コンポーネントを持つコンポーネントはありません2。トレーサビリティ関係に従ったモデル要素の配置。他の要素を所有またはグループ化する要素は、所有される (グループ化された) 要素よりも高いレベルで考慮されます。
structure of encapsulated behaviors with visible interactions and messages,目に見えるインタラクションとメッセージを含むカプセル化された動作の構造
structure wherein attaining the goals of a set of process areas establishes a maturity level; each level builds a foundation for subsequent levels,一連のプロセス領域の目標を達成することで成熟度レベルが確立される構造。各レベルは後続のレベルの基礎を構築します
"Structure-based testing is not restricted to use at component level and can be used at all levels, e.g. menu item coverage as part of a system test.",構造ベースのテストはコンポーネント レベルでの使用に限定されず、すべてのレベルで使用できます。システムテストの一環としてのメニュー項目の範囲。
"structured and has a style such that changes can be made completely, consistently, and correctly while retaining the structure",構造化されており、その構造を維持しながら完全に、一貫して、正確に変更を加えることができるようなスタイルを持っています。
structured approach to evaluating alternative solutions against established criteria to determine a recommended solution to address an issue,問題に対処するための推奨ソリューションを決定するために、確立された基準に照らして代替ソリューションを評価するための構造化されたアプローチ
structured collection of data that describes the potential variety of behavior possible from a system,システムから起こり得る潜在的なさまざまな動作を説明する、構造化されたデータのコレクション
structured collection of information that embodies the requirements of the system,システムの要件を具体化する構造化された情報の収集
"structured collection of the requirements (functions, performance, design constraints, and attributes) of the software and its external interfaces",ソフトウェアとその外部インターフェイスの要件 (機能、パフォーマンス、設計上の制約、属性) を構造化してまとめたもの
"structured collection of the requirements (functions, performance, design constraints, and attributes) of the system and its operational environments and external interfaces",システムとその動作環境、外部インターフェースの要件（機能、性能、設計上の制約、属性）を構造化して集めたもの。
Structured Query Language,構造化クエリ言語
"structured way of transmitting data held electronically from database to database, usually using telecommunications networks",通常は電気通信ネットワークを使用して、電子的に保持されているデータをデータベースからデータベースに送信する構造化された方法
"structuring mechanism used to split a large net graph into smaller parts, which are also the units of the net to be printed",大きなネット グラフを小さな部分に分割するために使用される構造化メカニズム。これらの部分は、印刷されるネットの単位でもあります。
study of the effects of a system after it has reached a stabilized state of operational use,システムの運用使用が安定した状態に達した後のシステムの影響の研究
"study to examine a problem and determine whether or not it requires being solved during the time period under consideration. ISO/IEC 2382:2015, Information technology — Vocabulary]",問題を調査し、検討中の期間内に解決する必要があるかどうかを判断するための研究。 ISO/IEC 2382:2015、情報技術 - 語彙]
"study to identify and analyze a problem and its potential solutions in order to determine their viability, costs, and benefits.",実行可能性、コスト、利点を判断するために、問題とその潜在的な解決策を特定および分析するための研究。
subclass cluster in which an instance of the superclass exists without also being an instance of any of the subclasses,サブクラス クラスタには、どのサブクラスのインスタンスにもならずにスーパークラスのインスタンスが存在します。
subclass cluster in which each instance of a superclass must be an instance of at least one of the subclasses of the cluster,スーパークラスの各インスタンスが、クラスターの少なくとも 1 つのサブクラスのインスタンスである必要があるサブクラス クラスター
"subgraph of an activity which is itself an activity and which satisfies the following condition: for any pair of fork join actions in the parent activity, if one of these actions is included in the subgraph, then both must be included in the subgraph",それ自体がアクティビティであり、次の条件を満たすアクティビティのサブグラフ: 親アクティビティ内のフォーク結合アクションのペアについて、これらのアクションの 1 つがサブグラフに含まれている場合、両方ともサブグラフに含まれている必要があります。
"Subject areas are used to define scoped areas of interest. Subject areas overlap to ensure the integration of the overall metamodel, but a tool need only use those subject areas relevant to the data to be exported or imported.",サブジェクト領域は、対象範囲を定めた領域を定義するために使用されます。メタモデル全体の統合を確実にするためにサブジェクト領域は重複しますが、ツールはエクスポートまたはインポートするデータに関連するサブジェクト領域のみを使用する必要があります。
subject-matter expert,対象分野の専門家
submission of jobs through a remote input device connected to a computer through a data link,データリンクを介してコンピュータに接続されたリモート入力デバイスを介したジョブの送信
submit data activity,データアクティビティを送信する
subprocess for identifying and bounding the functional domains that are important to an envisioned product line and provide sufficient reuse potential to justify the product line creation,想定される製品ラインにとって重要であり、製品ラインの作成を正当化するのに十分な再利用の可能性を提供する機能ドメインを特定して境界付けるためのサブプロセス
"subprocess for identifying stakeholders relevant to an application, eliciting application specific requirements, and binding the appropriate variants",アプリケーションに関連する利害関係者を特定し、アプリケーション固有の要件を引き出し、適切なバリアントをバインドするためのサブプロセス
"subprocess of product line scoping that determines the product roadmap, that is 1) the targeted markets; 2) the product categories that the product line organization should be developing, producing, marketing, and selling; 3) the common and variable features that the products should provide in order to reach the long and short-term business objectives of the product line organization, and 4) the schedule for introducing products to markets",製品ロードマップを決定する製品ラインの範囲設定のサブプロセス、つまり 1) 対象市場。 2) 製品ライン組織が開発、生産、マーケティング、販売すべき製品カテゴリー。 3) 製品ライン組織の長期および短期のビジネス目標を達成するために製品が提供すべき共通の可変機能、および 4) 製品を市場に導入するスケジュール
"subprocess that confirms that domain requirements are correct, consistent, and complete",ドメイン要件が正しく、一貫性があり、完全であることを確認するサブプロセス
subprocess that confirms that the application specific requirements are consistent and feasible and ensures that the bound variants satisfy the specific product's requirements,アプリケーション固有の要件が一貫していて実現可能であることを確認し、バインドされたバリアントが特定の製品の要件を満たすことを保証するサブプロセス
subprocess that documents domain requirements for a product line based on domain analysis results,ドメイン分析結果に基づいて製品ラインのドメイン要件を文書化するサブプロセス
subprocess that documents the application specific requirements and integrates it with the domain requirements specification whose variants are bound,アプリケーション固有の要件を文書化し、それをバリアントがバインドされているドメイン要件仕様と統合するサブプロセス
subprocess that identifies initial requirements from domain stakeholders for a product line,製品ラインのドメイン関係者からの初期要件を特定するサブプロセス
subprocess that manages traceability and changes on application requirements,トレーサビリティとアプリケーション要件の変更を管理するサブプロセス
subprocess that manages traceability and changes with respect to domain requirements and their relevant domain/application artefacts,ドメイン要件およびそれに関連するドメイン/アプリケーション成果物に関するトレーサビリティと変更を管理するサブプロセス
subprocess that models domain requirements so as to analyze and scrutinize commonality/variability of a product line in requirements,要件における製品ラインの共通性/変動性を分析および精査するために、ドメイン要件をモデル化するサブプロセス
"subprocess that understands all application specific requirements, scrutinizes incorrect and inconsistent application requirements through modelling, and then analyses and negotiates application requirements that cannot be satisfied through the domain requirements",アプリケーション固有の要件をすべて理解し、モデリングを通じて不正確で一貫性のないアプリケーション要件を精査し、ドメイン要件では満たせないアプリケーション要件を分析して交渉するサブプロセス
subprogram that is called by other programs and subprograms,他のプログラムおよびサブプログラムによって呼び出されるサブプログラム
subroutine that is copied into a computer program at each place that it is called,呼び出されるたびにコンピューター プログラムにコピーされるサブルーチン
subroutine that is stored at one given location rather than being copied into a computer program at each place that it is called,呼び出されるたびにコンピューター プログラムにコピーされるのではなく、指定された 1 つの場所に保存されるサブルーチン
"subset of a data type, obtained by constraining the set of possible values of the data type",データ型のサブセット。データ型の可能な値のセットを制約することによって取得されます。
subset of a naming context such that all naming actions are performed by the controlling object of the domain (the name authority object),すべてのネーミングアクションがドメインの制御オブジェクト (名前権限オブジェクト) によって実行されるようなネーミングコンテキストのサブセット。
"subset of categorization space, which the stakeholders are interested in, specified using a combination of one or more equivalence classes",利害関係者が関心を持つ分類空間のサブセット。1 つ以上の同値クラスの組み合わせを使用して指定されます。
subset of instantiations from the set of all possible instantiations of all object types within an object type set.,オブジェクト タイプ セット内のすべてのオブジェクト タイプのすべての可能なインスタンス化のセットからのインスタンス化のサブセット。
"subset of intended users who are differentiated from other intended users by factors such as age, culture or expertise that are likely to influence usability",ユーザビリティに影響を与えると考えられる年齢、文化、専門知識などの要素によって他の対象ユーザーと区別される対象ユーザーのサブセット
subset of interconnections that share common features in an interconnection group,相互接続グループ内の共通の機能を共有する相互接続のサブセット
subset of the objects participating in a binding managed by the group function,グループ関数によって管理されるバインディングに参加するオブジェクトのサブセット
"subset of the range of values of a variable, or set of variables, within a test item or at its interfaces, such that all the values in the partition can reasonably be expected to be treated similarly by the test item (i.e., they are considered ""equivalent""",テスト項目内またはそのインターフェイスにおける変数の値の範囲のサブセット、または変数のセット。パーティション内のすべての値がテスト項目によって同様に扱われることが合理的に期待できる（つまり、それらは「同等」であるとみなされる）。
subset of the user requirements specifying what the software shall do in terms of tasks and services,タスクとサービスに関してソフトウェアが何を行うかを指定するユーザー要件のサブセット
substance with conductive properties between those of a conductor and an insulator,導体と絶縁体の中間の導電性を持つ物質
subsystem design made up of a collection of abstract and concrete classes and interfaces between them,抽象クラスと具象クラスのコレクションとそれらの間のインターフェイスで構成されるサブシステム設計
"Such a language usually consists of patterns of 1s and 0s, with no symbolic naming of operations or addresses.",このような言語は通常、1 と 0 のパターンで構成され、演算やアドレスの記号的な名前は付けられません。
Such a relationship is considered to be an integral part of the essence of the dependent class.,このような関係は、依存クラスの本質の不可欠な部分であると考えられます。
Such a system is either busy or idle.,このようなシステムはビジー状態かアイドル状態のいずれかです。
Such an item can require minor modifications to meet the requirements of its current intended use.,このようなアイテムは、現在の用途の要件を満たすために若干の変更が必要になる場合があります。
Such approval does not shift responsibility from the supplier to meet requirements under a two-party situation,このような承認は、二者関係の状況下で要件を満たすというサプライヤーの責任を転嫁するものではありません。
"Such as a cardinality constraint. A named constraint is explicitly named, its meaning is stated in natural language, and its realization is written in the specification language.",カーディナリティ制約など。名前付き制約は明示的に名前が付けられ、その意味は自然言語で記述され、その実現は仕様言語で記述されます。
"Such as a class, responsibility, subject domain, etc.",クラス、責任、主題ドメインなど。
such as facilities cost or loan interest,設備費やローン金利など
Such persons belong to a level of management in the organization above the immediate level responsible for the process.,このような人は、プロセスを担当する直属のレベルより上の組織内の管理レベルに属します。
sudden and complete failure of a computer system or component,コンピュータシステムまたはコンポーネントの突然の完全な障害
sum of the added and modified source statements,追加および変更されたソース ステートメントの合計
sum of the multiplicities of each of the members of the multiset,マルチセットの各メンバーの多重度の合計
summing the lower-level cost estimates associated with the various work packages for a given level within the project's WBS or for a given cost control account,プロジェクトの WBS 内の特定のレベルまたは特定のコスト管理アカウントのさまざまな作業パッケージに関連する下位レベルのコスト見積もりを合計する
"Sunk costs have a psychological impact, but are irrelevant in business decisions.",埋没費用は心理的な影響を及ぼしますが、ビジネス上の意思決定には無関係です。
superclass that is either an immediate superclass of the class or a generic ancestor of one of the superclasses of the class,クラスの直接のスーパークラス、またはクラスのスーパークラスのいずれかのジェネリック祖先であるスーパークラス
Supplemental Ents provide extended information about a primary Ent and are linked to primary Ents by the <linkedToPrimaryEntId> attribute.,補足 Ent は、プライマリ Ent に関する拡張情報を提供し、<linkedToPrimaryEntId> 属性によってプライマリ Ent にリンクされます。
supplementary information used to distinguish a version of a configuration item from other versions,構成アイテムのバージョンを他のバージョンから区別するために使用される補足情報
"supplier's offer to provide a system or service, usually including benefits, costs, risks, opportunities, and other factors applicable to decisions",システムまたはサービスを提供するサプライヤーの申し出。通常、利益、コスト、リスク、機会、および意思決定に適用されるその他の要素が含まれます。
supply chain risk management,サプライチェーンのリスク管理
support from more than 50 percent of the members of the group,グループメンバーの50パーセント以上からの支持
"supporting documentation outlining the details used in establishing project estimates such as assumptions, constraints, level of detail, ranges, and confidence levels",仮定、制約、詳細レベル、範囲、信頼レベルなど、プロジェクトの見積もりを確立する際に使用される詳細を概説するサポート文書
surface feature through which clients and other elements of an application environment can interact with a component,クライアントおよびアプリケーション環境の他の要素がコンポーネントと対話できる表面機能
surface mount rectangular circuit package with gull-wing shaped leads extending from each of the four side,4 つの側面のそれぞれから伸びるガルウィング形状のリードを備えた表面実装長方形回路パッケージ
surface-mounted integrated circuit (chip) package with gull-wing pins extending outwa,外側に伸びるガルウィングピンを備えた表面実装集積回路 (チップ) パッケージ
surface-mounted integrated circuit package with multiple connections in a grid pattern on the bottom surface,底面に格子状に複数の接続がある表面実装型集積回路パッケージ
suspension of a process to handle an event external to the process,プロセスの外部のイベントを処理するためにプロセスを一時停止する
"symbol or message displayed by a computer system, requesting input from the user of the system",コンピュータ システムによって表示され、システムのユーザーに入力を要求するシンボルまたはメッセージ
symbol representing the name of a function,関数名を表す記号
symbol representing the name of a set,セットの名前を表す記号
symbol that can take a range of values defined by a set it is defined as a constant in the signature,セットによって定義される値の範囲を取ることができるシンボル。署名内で定数として定義されます。
"symbol used when the precise nature or form of, for example, the process or data media is known and when it is necessary to depict the actual medium",プロセスやデータメディアなどの正確な性質や形式がわかっている場合、および実際のメディアを描写する必要がある場合に使用される記号
"symbol used when the precise nature or form of, for example, the process or data media is not known or when it is not necessary to depict the actual medium",プロセスやデータメディアなどの正確な性質や形式が不明な場合、または実際のメディアを描写する必要がない場合に使用される記号
"symbol, word, or phrase used to denote a particular source of goods or services",商品またはサービスの特定の供給源を示すために使用される記号、単語、または語句
symbolic name assigned to a specific release or a branch,特定のリリースまたはブランチに割り当てられたシンボル名
symbolic name or other means of referencing a decision table from other documents,他の文書からデシジョンテーブルを参照するための記号名またはその他の手段
symbolic value representing a degree of compliance within an integrity level scheme,整合性レベルスキーム内の準拠度を表す記号値
symmetric net,対称ネット
synchronous (full duplex) serial communication interface used for two devices in embedded systems,組み込みシステムの 2 つのデバイスに使用される同期 (全二重) シリアル通信インターフェイス
synchronous dynamic random access memory,同期ダイナミックランダムアクセスメモリ
"synchronous dynamic random access memory unit with higher access speed and bandwidth, because it transfers two consecutive words in one internal clock cycle",1 内部クロック サイクルで 2 つの連続するワードを転送するため、より高いアクセス速度と帯域幅を備えた同期ダイナミック ランダム アクセス メモリ ユニット
synchronous graphics random access memory,同期グラフィックス ランダム アクセス メモリ
"syntactic unit that conforms to the rules of a particular programming language and that is composed of declarations and statements or instructions needed for a certain function, task, or problem solution",特定のプログラミング言語の規則に準拠し、特定の関数、タスク、または問題解決に必要な宣言とステートメントまたは命令で構成される構文単位
syntax keyword used to specify a partial mapping,部分マッピングを指定するために使用される構文キーワード
syntax keyword used to specify a total mapping,全体のマッピングを指定するために使用される構文キーワード
syntax used in the STL both for defining simple conditions and for compounding simple conditions to define more complex conditions,STL で単純な条件を定義する場合と、単純な条件を複合してより複雑な条件を定義する場合の両方に使用される構文
system breakdown structure,システム内訳構造
system condition that is a prerequisite to an accident,事故の前提となるシステム状態
"system containing one or more components and elements such as computers (hardware), associated software, and data",コンピュータ (ハードウェア)、関連ソフトウェア、データなどの 1 つ以上のコンポーネントと要素を含むシステム
system containing one or more computers and associated software,1 台以上のコンピュータと関連ソフトウェアを含むシステム
system definition and realization,システムの定義と実現
"system design activity concerned with specifying the logical aspects of the system organization, its processes, and the flow of information through the system",システムの組織、そのプロセス、およびシステムを通る情報の流れの論理的側面の指定に関係するシステム設計活動
system design document,システム設計書
system design review,システム設計レビュー
system design that has been agreed on by all stakeholders interested in the system development,システム開発に関わるすべての関係者が合意したシステム設計
system development approach in which the most critical aspects of a system are implemented first,システムの最も重要な側面を最初に実装するシステム開発アプローチ
"system development phase at the end of which the hardware, software and procedures of the system become operational",システム開発段階。システムのハードウェア、ソフトウェア、および手順が完了すると運用可能になります。
system element that is software,ソフトウェアであるシステム要素
"System engineering is used when there is a single system-of-interest; systems engineering is for the discipline in general. It includes the definition of technical performance measures; the integration of engineering specialties toward the establishment of an architecture; and the definition of supporting lifecycle processes that balance cost, performance, and schedule objectives.",システム エンジニアリングは、対象システムが 1 つだけの場合に使用されます。システムエンジニアリングは学問全般を対象としています。これには、技術的なパフォーマンス尺度の定義が含まれます。アーキテクチャの確立に向けたエンジニアリングの専門知識の統合。そして、コスト、パフォーマンス、スケジュール目標のバランスをとるサポート ライフサイクル プロセスの定義です。
"system engineering or software engineering tool for tabulating, defining, analyzing, and describing functional interfaces and interactions among system components",システムコンポーネント間の機能インターフェースおよび相互作用を表化、定義、分析、および記述するためのシステムエンジニアリングまたはソフトウェアエンジニアリングツール
"system follow-up report that describes how the system objectives have been met, identifies the remaining problems, and is intended to assist future development",システムの目標がどのように達成されたかを説明し、残っている問題を特定し、将来の開発を支援することを目的としたシステム追跡レポート
"system for collecting, saving, processing, and presenting data by means of a computer",コンピュータを使用してデータを収集、保存、処理、表示するためのシステム
"system for which software is a major technical challenge and is perhaps the major factor that affects system schedule, cost, and risk",ソフトウェアが大きな技術的課題であり、おそらくシステムのスケジュール、コスト、リスクに影響を与える主要な要素であるシステム
system for which software is of primary importance to the stakeholders,ソフトウェアが利害関係者にとって最も重要なシステム
system functional review,システム機能のレビュー
"system having the potential for serious impact on the users or environment, due to factors including safety, performance, and security",安全性、パフォーマンス、セキュリティなどの要因により、ユーザーまたは環境に重大な影響を与える可能性のあるシステム
"system hierarchy, with identified enabling systems, and personnel that is typically used to assign development teams, support technical reviews, and to partition the assigned work and associated resource allocations to each of the tasks necessary to accomplish the technical objectives of the project",識別された有効化システムと、開発チームの割り当て、技術レビューのサポート、プロジェクトの技術目標を達成するために必要な各タスクへの割り当てられた作業と関連リソースの割り当ての分割に通常使用される担当者を含むシステム階層。
system integration laboratory,システムインテグレーション研究室
system integration plan,システム統合計画
"system of activities, which use resources to transform inputs into outputs",リソースを使用して入力を出力に変換する活動システム
system of controls and processes required to achieve the strategic objectives set by the organization's governing body,組織の統治機関が設定した戦略目標を達成するために必要な管理とプロセスのシステム
"system of postulates, value declarations and inference rules presented as a description of a state of affairs (universe of discourse)",情勢の説明として提示される公準、価値宣言、および推論規則の体系 (言説の世界)
system of systems,システムのシステム
system on a chip,システムオンチップ
system on a programmable chip,プログラマブルチップ上のシステム
"system or component whose inputs, outputs, and general function are known but whose contents or implementation are unknown or irrelevant",入力、出力、一般的な機能はわかっているが、その内容や実装が不明または無関係なシステムまたはコンポーネント
system or component whose internal contents or implementation are known,内部の内容や実装が既知であるシステムまたはコンポーネント
system or software document that defines a work product that has been placed under configuration management,構成管理下に置かれた作業成果物を定義するシステムまたはソフトウェア文書
system or software product of the development process that is used as inputs to other stages of the development process,開発プロセスの他の段階への入力として使用される、開発プロセスのシステムまたはソフトウェア製品
system or software product that is measurable during execution in a testing or an operational environment,テスト環境または運用環境での実行中に測定可能なシステムまたはソフトウェア製品
system or software requirement specifying a performance characteristic that a system/software system or system/software component must possess,システムまたはソフトウェア要件 システム/ソフトウェア システムまたはシステム/ソフトウェア コンポーネントが備えなければならないパフォーマンス特性を指定するもの
"system or software requirement that specifies a hardware, software, or database element with which a system/software system or system/software component must interface, or that sets forth constraints on formats, timing, or other factors caused by such an interface",システム/ソフトウェア システムまたはシステム/ソフトウェア コンポーネントがインターフェースする必要があるハードウェア、ソフトウェア、またはデータベース要素を指定する、またはそのようなインターフェースによって生じるフォーマット、タイミング、またはその他の要因に関する制約を規定する、システムまたはソフトウェアの要件。
system performance specification,システム性能仕様
"System Performance Specification (SPS), System Requirements Document (SRD), and System/Subsystem Specification (SSS).",システム パフォーマンス仕様 (SPS)、システム要件ドキュメント (SRD)、およびシステム/サブシステム仕様 (SSS)。
System Requirement Specification,システム要件仕様
system requirements document,システム要件ドキュメント
system requirements review,システム要件のレビュー
system requirements specification.,システム要件の仕様。
system security engineering,システムセキュリティエンジニアリング
system that has been transformed (i.e. state change) by applying the disposal process,廃棄プロセスを適用することによって変換 (つまり、状態変化) されたシステム
system that supports a system-of-interest during its life cycle stages but does not necessarily contribute directl to its function during operation,ライフサイクル段階では目的のシステムをサポートしますが、動作中には必ずしもその機能に直接寄与しないシステム
"system to be categorized, which can be an IT system and software, including service provided by IT system",分類されるシステム。IT システムおよびソフトウェア (IT システムによって提供されるサービスを含む) が考えられます。
system verification review,システム検証レビュー
system which conforms to the requirements of ODP standards.,ODP規格の要件に準拠したシステム。
system which uses information technologies,情報技術を活用したシステム
system whose life cycle is under consideration,ライフサイクルを考慮したシステム
system whose life cycle is under consideration in the application of verification and validation (V&V),検証と検証（V&V）の適用においてライフサイクルが考慮されているシステム
system-of-interest,関心のあるシステム
system-of-interest (SOI) whose elements are themselves systems,要素自体がシステムであるシステム・オブ・インタレスト (SOI)
"system, component, file, procedure, or person available to replace or help restore a primary item in the event of a failure or externally caused disaster2. to create or designate a system, component, file, procedure, or person as a replacement",障害や外部からの災害が発生した場合に、主要なアイテムを交換したり、復元を支援したりできるシステム、コンポーネント、ファイル、手順、または担当者2。システム、コンポーネント、ファイル、手順、または人を作成したり、代替者として指定したりすること
"system, software product or task executed by system or software product to which measurement or evaluation process is applied",測定または評価プロセスが適用されるシステム、ソフトウェア製品、またはシステムまたはソフトウェア製品によって実行されるタスク
"system, software, or hardware product developed for one use but having other uses, or one developed specifically to be usable on multiple projects or in multiple roles on one project",1 つの用途のために開発されたが他の用途を持つシステム、ソフトウェア、またはハードウェア製品、または複数のプロジェクトまたは 1 つのプロジェクトの複数の役割で使用できるように特別に開発された製品
"system, subsystem, program, or module",システム、サブシステム、プログラム、またはモジュール
system/software process improvement,システム/ソフトウェアプロセスの改善
system/subsystem specification,システム/サブシステムの仕様
"systematic application of scientific and technological knowledge, methods, and experience to the design, implementation, testing, and documentation of software",ソフトウェアの設計、実装、テスト、文書化に対する科学的および技術的な知識、方法、経験の体系的な適用
"systematic approach to creating a design consisting of the ordered application of a specific collection of tools, techniques, and guidelines",特定のツール、テクニック、ガイドラインのコレクションを順序立てて適用することで構成されるデザインを作成するための体系的なアプローチ
systematic approach to reducing software risks,ソフトウェアのリスクを軽減するための体系的なアプローチ
systematic assessment and analysis of selected processes against a target process profile,ターゲットプロセスプロファイルに対する選択されたプロセスの体系的な評価と分析
"systematic decomposition of system requirements into allocated and derived requirements, appropriately assigned to low-level functional components",システム要件を割り当て要件と派生要件に体系的に分解し、低レベルの機能コンポーネントに適切に割り当てる
systematic determination of the extent to which an entity meets its specified criteria,企業が指定された基準をどの程度満たしているかを体系的に決定すること
"systematic evaluation of a software acquisition, supply, development, operation, or maintenance process performed by or on behalf of management that monitors progress, determines the status of plans and schedules, confirms requirements and their system allocation, or evaluates the effectiveness of management approaches used to achieve fitness for purpose",経営者によって、または経営者に代わって実行されるソフトウェアの取得、供給、開発、運用、保守プロセスの体系的な評価。進捗状況の監視、計画とスケジュールの状況の決定、要件とそのシステム割り当ての確認、または目的への適合性を達成するために使用される管理アプローチの有効性の評価。
systematic evaluation of a software product by a team of qualified personnel that examines the suitability of the software product for its intended use and identifies discrepancies from specifications and standards,資格のある担当者のチームによるソフトウェア製品の体系的な評価。ソフトウェア製品が意図された用途に適しているかどうかを検査し、仕様や規格との相違点を特定します。
"systematic examination of the extent to which a product, process, or device fulfills specified requirements",製品、プロセス、またはデバイスが指定された要件をどの程度満たしているかを体系的に検査すること
systematic examination of the extent to which a software product is capable of satisfying stated and implied needs,ソフトウェア製品が明示的および暗黙的なニーズをどの程度満たすことができるかを体系的に検査すること
systematic examination of the extent to which an entity is capable of fulfilling specified requirements,企業が指定された要件を満たすことができる程度の体系的な検査
"systematic examination of the requirements, design, or implementation of a system, or any part of it, by qualified personnel",資格のある担当者による、システムまたはその一部の要件、設計、実装の体系的な検査
"systematic exploration technique to expose any circumstance or event having the potential to cause harm to a system in the form of destruction, disclosure, modification of data, or denial of service.",破壊、開示、データの変更、サービス拒否などの形でシステムに損害を与える可能性のある状況やイベントを明らかにするための体系的な調査手法。
systematic investigation of a real or planned system to determine the information requirements and processes of the system and how these relate to each other and to any other system,システムの情報要件とプロセス、およびそれらが相互に、または他のシステムとどのように関連しているかを判断するための、実際のシステムまたは計画中のシステムの体系的な調査
systematic investigation of information and its flow in a real or planned system,実際のシステムまたは計画されたシステムにおける情報とそのフローの体系的な調査
systematic investigation of the data and their flow in a real or planned system,実際のシステムまたは計画されたシステムにおけるデータとそのフローの体系的な調査
systematic investigation of the functions of a real or planned system,実際のシステムまたは計画されたシステムの機能の体系的な調査
systematic investigation of user requirements to arrive at a definition of a system,システムの定義に到達するためのユーザー要件の体系的な調査
systematic iteration of conformity assessment activities as a basis for maintaining the validity of the statement of conformity,適合性宣言の有効性を維持するための基礎として、適合性評価活動を体系的に反復すること
"systematic means of communicating ideas by the use of conventionalized signs, sounds, gestures, or marks and rules for the formation of admissible expressions",慣例化された記号、音声、ジェスチャー、またはマーク、および許容される表現を形成するためのルールを使用してアイデアを伝達する体系的な手段
systematic performance of operations upon data,データに対する操作の系統的なパフォーマンス
"systematic performance of operations upon information, which includes data processing and can include operations such as data communication and office automation",情報に対する操作の体系的な実行。これにはデータ処理が含まれ、データ通信やオフィス オートメーションなどの操作が含まれる場合があります。
"systematic, independent and documented process for obtaining audit evidence and evaluating it objectively to determine the extent to which audit criteria are fulfilled",監査証拠を入手し、それを客観的に評価して監査基準がどの程度満たされているかを判断するための、体系的で独立した文書化されたプロセス
"systematic, independent, documented process for obtaining records, statements of fact, or other relevant information and assessing them objectively, to determine the extent to which specified requirements are fulfilled",記録、事実の陳述、またはその他の関連情報を取得し、それらを客観的に評価して、指定された要件がどの程度満たされているかを判断するための、体系的で独立した文書化されたプロセス。
"systems engineer, business analyst",システムエンジニア、ビジネスアナリスト
systems engineering and technical assistance,システムエンジニアリングと技術支援
Systems Engineering Management Plan,システムエンジニアリング管理計画
Systems Engineering Plan,システムエンジニアリング計画
systems engineering technical review,システムエンジニアリング技術レビュー
systems or software process that is performed either fully or partially supported by CASE tools,CASE ツールによって完全または部分的にサポートされて実行されるシステムまたはソフトウェア プロセス
t manner in which the hardware and software of an information processing system are organized and interconnected,情報処理システムのハードウェアとソフトウェアが編成され相互接続される方法
table of all contingencies that are to be considered in the description of a problem together with the action to be taken,問題を説明する際に考慮すべきすべての偶発事態と取るべき措置をまとめた表
"table of conditions that are to be considered in the analysis of a problem, together with the action to be taken for each condition",問題の分析で考慮される条件と、各条件に対して実行されるアクションの表
table that identifies the location of pages in storage and gives significant attributes of those pages,ストレージ内のページの場所を特定し、それらのページの重要な属性を示すテーブル
table that links requirements to their origin and traces them throughout the project life cycle2. a grid that links product requirements from their origin to the deliverables that satisfy them,要件をその起源に結び付け、プロジェクトのライフサイクル全体を通して追跡する表2。製品要件をその起源からそれを満たす成果物までリンクするグリッド
"table that presents program symbols and their corresponding addresses, values, and other attributes",プログラムシンボルとそれに対応するアドレス、値、その他の属性を示す表
table used to show sets of conditions and the actions resulting from them,一連の条件とその結果として生じるアクションを示すために使用される表
tag that has a subsidiary relationship to another tag,別のタグと従属関係にあるタグ
"Tailoring a process adapts the process description for a particular end. For example, a project creates its defined process by tailoring the organization's set of standard processes to meet the objectives, constraints, and environment of the project. The organization's set of standard processes is described at a general level that is not directly usable to perform a process. Tailoring guidelines aid those who establish the defined processes for specific needs. Tailoring guidelines describe what can and cannot be modified and identify process components that are candidates for modification.",プロセスを調整すると、プロセスの記述が特定の目的に合わせて調整されます。たとえば、プロジェクトは、プロジェクトの目的、制約、環境に合わせて組織の標準プロセスのセットを調整することによって、定義されたプロセスを作成します。組織の標準プロセスのセットは、プロセスの実行に直接使用できない一般的なレベルで説明されています。調整ガイドラインは、特定のニーズに合わせて定義されたプロセスを確立する人を支援します。調整ガイドラインでは、変更できるものとできないものを説明し、変更の候補となるプロセス コンポーネントを特定します。
tangible machine-readable document created during software development,ソフトウェア開発中に作成される有形の機械可読文書
tangible results from a certification process,認証プロセスから得られる具体的な結果
tangible results from an assessment,評価による具体的な結果
task activated on demand,オンデマンドでアクティブ化されるタスク
task containing nested objects,ネストされたオブジェクトを含むタスク
task ensuring sequential access to a resource,リソースへの順次アクセスを保証するタスク
task structuring criterion in which a group of objects are combined into one task because only one object can be executed at any one time,一度に実行できるオブジェクトは 1 つだけであるため、オブジェクトのグループを 1 つのタスクに結合するタスク構造化基準
task that a timer event activates at regular intervals,タイマー イベントが定期的にアクティブになるタスク
task that can be added to the minimum testing tasks to address specific requirements.,特定の要件に対処するために、最小限のテスト タスクに追加できるタスク。
task that hides the details of the interface to and interacts sequentially with a human user,人間のユーザーへのインターフェイスの詳細を隠し、人間のユーザーと順次対話するタスク
task that hides the interface to and communicates with an external system or subsystem,外部システムまたはサブシステムとのインターフェイスを隠し、外部システムまたはサブシステムと通信するタスク
task that interfaces to a passive I/O device and either reads from it or writes to it on demand,パッシブ I/O デバイスに接続し、オンデマンドで読み取りまたは書き込みを行うタスク
task that interfaces to a passive I/O device and polls it regularly,パッシブ I/O デバイスに接続し、定期的にポーリングするタスク
task that interfaces to an I/O device and is activated by interrupts from that device,I/O デバイスに接続し、そのデバイスからの割り込みによってアクティブ化されるタスク
"task that is part of the application, which interfaces to the external environment",アプリケーションの一部であり、外部環境と接続するタスク
task that makes decisions to control other tasks' execution,他のタスクの実行を制御するための決定を下すタスク
task that must meet a hard deadline,厳しい期限を守らなければならない仕事
"task to make a decision on relevant variants, which will be application assets, from domain assets using the domain variability model and from application assets using the application variability model",ドメイン変動モデルを使用してドメイン資産から、およびアプリケーション変動モデルを使用してアプリケーション資産から、アプリケーション資産となる関連バリアントについて決定を下すタスク
task-structuring criterion by which a control object is combined into a task with the objects it control,制御オブジェクトを、それが制御するオブジェクトとともにタスクに結合するためのタスク構造化基準
"task-structuring criterion by which activities that are not sequentially dependent, but are activated by the same event are grouped into a task",連続的に依存していないが、同じイベントによってアクティブ化されるアクティビティをタスクにグループ化するためのタスク構造化基準
task-structuring criterion in which objects that are constrained to execute sequentially are mapped to a tas,逐次的に実行するように制約されているオブジェクトをタスクにマッピングするタスク構造化基準
task's external specification,タスクの外部仕様
taxonomy in which instances of both entities represent the same real or abstract thing,両方の実体のインスタンスが同じ現実のものまたは抽象的なものを表す分類法
"team of specialists who facilitate the definition, maintenance, and improvement of processes used by the organization",組織で使用されるプロセスの定義、維持、改善を促進する専門家のチーム
team that has the responsibility to develop and implement process improvement activities for an organization as documented in a process action plan,プロセス行動計画に文書化されたように、組織のプロセス改善活動を開発および実装する責任を持つチーム
"technical and organizational activities, comprising configuration identification, control, status accounting and auditing",構成の識別、制御、ステータスの会計および監査を含む技術的および組織的な活動
technical data package,技術データパッケージ
technical interchange meeting,技術交流会
technical operation that consists of producing an assessment of one or more characteristics of a software product according to a specified procedure,指定された手順に従ってソフトウェア製品の 1 つまたは複数の特性の評価を作成することからなる技術的操作
technical or managerial procedure that aids in the evaluation and improvement of the software development process,ソフトウェア開発プロセスの評価と改善に役立つ技術的または管理的手順
technical performance management,技術的パフォーマンス管理
technical performance measure,技術的なパフォーマンスの尺度
"technical processes to define, design, and construct or assemble a product",製品を定義、設計、構築または組み立てするための技術的プロセス
technical requirements,技術的要件
Technical reviews can also provide recommendations of alternatives and examination of various alternatives.,技術レビューでは、代替案の推奨やさまざまな代替案の検討も行うことができます。
"technical, legal, organizational, safety, economic, engineering, cost, schedule",技術、法律、組織、安全、経済、エンジニアリング、コスト、スケジュール
technically sophisticated computer enthusiast,技術的に洗練されたコンピューター愛好家
technically sophisticated computer enthusiast who uses his or her knowledge and means to gain unauthorized access to protected resources,技術的に洗練されたコンピュータ愛好家であり、自分の知識と手段を利用して、保護されたリソースへの不正アクセスを取得する
technique for monitoring bus performance in multi-layer memory cach,多層メモリキャッシュでバスパフォーマンスを監視する技術
technique for naming that joins the name of a parent class to the name of a dependent class with the period character,親クラスの名前と依存クラスの名前をピリオド文字で結合する名前付け手法
technique in which a peripheral takes direct control of a central processing unit's memory bus to transfer data to or from memory,周辺機器が中央処理装置のメモリ バスを直接制御して、メモリとの間でデータを転送する技術
"technique of filling out a fixed-length block of data with dummy characters, words, or records",固定長のデータ ブロックをダミーの文字、単語、またはレコードで埋める技術
"technique that uses network charts for planning, scheduling. and controlling a project",計画やスケジューリングにネットワーク チャートを使用する手法。そしてプロジェクトをコントロールする
technique to evaluate the degree to which the data about risks is useful for risk management,リスクに関するデータがリスク管理にどの程度役立つかを評価する手法
"technique to obtain the use of data, the use of storage in order to read or write data, or the use of an input-output channel to transfer data",データの使用を取得する技術、データの読み取りまたは書き込みのためのストレージの使用、またはデータ転送のための入出力チャネルの使用
"technique used in computer performance evaluation, in which a computer system is represented as a hierarchy of subsystems, the subsystems are analyzed to determine their performance characteristics, and the results are used to evaluate the performance of the overall system",コンピュータのパフォーマンス評価で使用される手法。コンピュータ システムがサブシステムの階層として表現され、サブシステムが分析されてそのパフォーマンス特性が決定され、その結果がシステム全体のパフォーマンスの評価に使用されます。
"technique used to consolidate ideas created through individual brainstorming sessions into a single map to reflect commonality and differences in understanding, and to generate new ideas",個々のブレインストーミング セッションを通じて作成されたアイデアを 1 つのマップに統合して、理解の共通点と相違点を反映し、新しいアイデアを生み出すために使用される手法
"Techniques include use of breakpoints, desk checking, dumps, inspection, reversible execution, single-step operation, and traces.",テクニックには、ブレークポイントの使用、デスクチェック、ダンプ、検査、可逆実行、シングルステップ操作、トレースが含まれます。
"techniques involved in designing, building, and using robots",ロボットの設計、構築、使用に関わる技術
techniques that are used to generate ideas within a group of stakeholders,利害関係者のグループ内でアイデアを生み出すために使用されるテクニック
techniques used to shorten the schedule duration without reducing the project scope,プロジェクトの範囲を縮小せずにスケジュール期間を短縮するために使用されるテクニック
"techniques, processes, tools, measures and relevant technical information used for evaluation",評価に使用される技術、プロセス、ツール、手段、および関連する技術情報
technology maturation and risk reduction,テクノロジーの成熟とリスクの軽減
Telecommunication Information Networking Architecture,電気通信情報ネットワークアーキテクチャ
template for a technology object,テクノロジーオブジェクトのテンプレート
temporary dummy objects created to aid testing until the real objects become available,実際のオブジェクトが使用可能になるまでのテストを支援するために作成される一時的なダミー オブジェクト
"temporary endeavor undertaken to create or change a unique information technology product, system, or service",独自の情報技術製品、システム、またはサービスを作成または変更するために行われる一時的な取り組み
temporary information processing system used to facilitate the transition from an operational system to its successor,運用システムから後継システムへの移行を容易にするために使用される一時的な情報処理システム
temporary or unpredictable fault in a component,コンポーネントの一時的または予測不可能な障害
"temporary storage in computer memory, to improve operations by having frequently used data readily available for retrieval2. RAM with very high operating speed used for data storage within a processor",頻繁に使用されるデータをすぐに取得できるようにすることで、操作を改善するためのコンピュータ メモリ内の一時ストレージ2。プロセッサ内のデータストレージに使用される非常に高速な動作速度を備えたRAM
term comprising constants and operators but no variables,定数と演算子で構成されるが、変数は含まれない用語
"term which, in a given naming context, refers to an entity",特定の命名コンテキストでエンティティを指す用語
terminal symbol,端子記号
terminal that enables a user to communicate with a computer,ユーザーがコンピュータと通信できるようにする端末
termination of a process prior to completion,完了前のプロセスの終了
termination of the ability of a system to perform a required function or its inability to perform within previously specified limits; an externally visible deviation from the system's specification,必要な機能を実行するシステムの能力の終了、または以前に指定された制限内でシステムが実行できなくなること。システムの仕様からの外部から見える逸脱
terminology for technical complexity adjustment factors,技術的な複雑さの調整係数に関する用語
terms of reference against which the significance of a risk is evaluated,リスクの重要性を評価する基準となる条件
terms of reference by which the significance of risk is assessed,リスクの重要性を評価する基準
test,テスト
test and evaluation,テストと評価
test and evaluation master plan,テストと評価の基本計画
test design technique in which test cases are constructed to force execution of individual statements in a test item,テスト項目内の個々のステートメントを強制的に実行するようにテスト ケースを構築するテスト設計手法
"test design technique in which test cases are derived on the basis of the tester's knowledge of past failures, or general knowledge of failure modes",過去の障害に関するテスターの知識、または障害モードに関する一般的な知識に基づいてテスト ケースを導き出すテスト設計手法
test design technique in which test cases are designed to exercise equivalence partitions by using one or more representative members of each partition,各パーティションの 1 つ以上の代表メンバーを使用して等価パーティションを実行するようにテスト ケースを設計するテスト設計手法
"test management and dynamic (and static) test processes used to perform a specific test level (e.g. system testing, acceptance testing) or test type (e.g. usability testing, performance testing) normally within the context of an overall test process for a test project",通常、テスト プロジェクトの全体的なテスト プロセスのコンテキスト内で、特定のテスト レベル (例: システム テスト、受け入れテスト) またはテスト タイプ (例: ユーザビリティ テスト、パフォーマンス テスト) を実行するために使用されるテスト管理および動的 (および静的) テスト プロセス
test management process for ensuring that testing is performed in accordance with a test plan and with organizational test specifications,テストがテスト計画および組織のテスト仕様に従って確実に実行されるようにするためのテスト管理プロセス
"test management process for ensuring that useful test assets are made available for later use, test environments are left in a satisfactory condition, and the results of testing are recorded and communicated to relevant stakeholders",有用なテスト資産を後で使用できるようにし、テスト環境を満足のいく状態に保ち、テスト結果を記録して関係者に伝達するためのテスト管理プロセス。
test management process used to complete test planning and develop test plans,テスト計画を完了し、テスト計画を作成するために使用されるテスト管理プロセス
test of a system or functional unit usually performed by the purchaser on his premises after installation with the participation of the vendor to ensure that the contractual requirements are met,システムまたは機能ユニットのテスト。契約上の要件が満たされていることを確認するために、設置後にベンダーの参加を得て、通常は購入者が敷地内で実行します。
test of a system to prove that it meets all its specified requirements at a particular stage of its development.,システムが開発の特定の段階で指定された要件をすべて満たしていることを証明するためのシステムのテスト。
test of individual hardware or software units or groups of related units,個々のハードウェアまたはソフトウェアユニット、または関連するユニットのグループのテスト
test of individual programs or modules in order to ensure that there are no analysis or programming errors,分析やプログラミングのエラーがないことを確認するための、個々のプログラムまたはモジュールのテスト
test procedure specification for manual or automated testing,手動または自動テストのテスト手順の仕様
test process containing the sub-processes that are required for the management of a test project,テスト プロジェクトの管理に必要なサブプロセスを含むテスト プロセス
test process for deriving and specifying test cases and test procedures,テストケースとテスト手順を導き出し、指定するためのテストプロセス
test process for developing and managing organizational test specifications,組織のテスト仕様を開発および管理するためのテストプロセス
test readiness review,テスト準備状況のレビュー
test to determine whether an implemented system fulfils its functional purpose as determined by its users,実装されたシステムが、ユーザーが決定した機能上の目的を満たしているかどうかを判断するテスト
test to determine whether an implemented system fulfils its specified requirements,実装されたシステムが指定された要件を満たしているかどうかを判断するためのテスト
test type conducted to evaluate the degree of effectiveness and efficiency with which a test item can be modified,テスト項目を変更することで有効性と効率性の程度を評価するために実施されるテストの種類
"test, inspection, or analytical process by which a group of configuration items comprising a system is verified to have met specific contractual performance requirements",システムを構成する構成アイテムのグループが特定の契約上のパフォーマンス要件を満たしていることを検証するテスト、検査、または分析プロセス
"testable aspect of a component or system, such as a function, transaction, feature, quality attribute, or structural element identified as a basis for testing",コンポーネントまたはシステムのテスト可能な側面 (テストの基礎として特定される機能、トランザクション、機能、品質属性、または構造要素など)
tester intervention in the form of direct procedural help provided by the test administrator to the test participants in order to allow the test to continue when the participants could not complete the tasks on their own,参加者が自分でタスクを完了できない場合にテストを続行できるようにするために、テスト管理者がテスト参加者に提供する直接的な手順上の支援の形でのテスター介入。
"testing conducted in accordance with test plans and procedures that have been reviewed and approved by a customer, user, or designated level of management",顧客、ユーザー、または指定されたレベルの管理者によって検討および承認されたテスト計画および手順に従って実施されるテスト
"testing conducted in accordance with test plans and procedures that have not been reviewed and approved by a customer, user, or designated level of management",顧客、ユーザー、または指定されたレベルの管理者によってレビューおよび承認されていないテスト計画および手順に従って実施されたテスト
testing conducted in the operational or support environment to ensure that a software product performs as required after installation.,インストール後にソフトウェア製品が要求どおりに動作することを確認するために、運用環境またはサポート環境で実施されるテスト。
"testing conducted on a complete, integrated system to evaluate the system's compliance with its specified requirements",指定された要件に対するシステムの準拠性を評価するために、完全な統合システム上で実施されるテスト
"testing conducted on multiple complete, integrated systems to evaluate their ability to communicate successfully with each other and to meet the overall integrated systems' specified requirements.",テストは、複数の完全な統合システムに対して実施され、相互に正常に通信し、統合システム全体の指定された要件を満たす能力を評価します。
testing conducted to determine whether a system or component is suitable for operational use.,システムまたはコンポーネントが運用に適しているかどうかを判断するために実施されるテスト。
testing conducted to determine whether a system satisfies its acceptance criteria and to enable the customer to determine whether to accept the system,システムが受け入れ基準を満たしているかどうかを判断し、顧客がシステムを受け入れるかどうかを決定できるようにするために実施されるテスト
"testing conducted to ensure that a modified system retains the capability of exchanging information with systems of different types, and of using that information",変更されたシステムが、異なるタイプのシステムと情報を交換し、その情報を使用する機能を保持していることを確認するために実施されるテスト
testing conducted to evaluate a system or component in its operational environment.,運用環境でシステムまたはコンポーネントを評価するために実施されるテスト。
testing conducted to evaluate the compliance of a system or component with specified functional requirements,システムまたはコンポーネントが指定された機能要件に準拠しているかを評価するために実施されるテスト
testing conducted to evaluate whether systems or components pass data and control correctly to one another,システムまたはコンポーネントが相互にデータと制御を正しく受け渡すかどうかを評価するために実施されるテスト
testing designed to execute all or selected paths through a computer program,コンピュータプログラムを通じてすべてまたは選択されたパスを実行するように設計されたテスト
testing designed to execute each outcome of each decision point in a computer program,コンピュータプログラムの各決定点の各結果を実行するように設計されたテスト
testing designed to execute each statement of a computer program,コンピュータプログラムの各ステートメントを実行するように設計されたテスト
"testing following modifications to a test item or to its operational environment, to identify whether regression failures occur",回帰障害が発生するかどうかを特定するための、テスト項目またはその運用環境への変更後のテスト
testing in which a test item is examined against a set of quality or other criteria without code being executed,コードを実行せずに、一連の品質またはその他の基準に照らしてテスト項目を検査するテスト
"testing in which signals or data from a test device are input to a system or component, and results are returned to the test device for measurement or comparison",テストデバイスからの信号またはデータがシステムまたはコンポーネントに入力され、結果が測定または比較のためにテストデバイスに返されるテスト
"testing in which software components, hardware components, or both are combined and tested to evaluate the interaction among them",ソフトウェア コンポーネント、ハードウェア コンポーネント、またはその両方を組み合わせてテストし、それらの間の相互作用を評価するテスト
"testing in which the management, selection, prioritization, and use of testing activities and resources are consciously based on corresponding types and levels of analyzed risk",テスト活動とリソースの管理、選択、優先順位付け、使用が、分析されたリスクの対応する種類とレベルに意識的に基づいて行われるテスト
"testing in which the principal test basis is the external inputs and outputs of the test item, commonly based on a specification, rather than its implementation in source code or executable software",主なテストの基礎がテスト項目の外部入出力であり、通常はソース コードや実行可能ソフトウェアでの実装ではなく仕様に基づくテスト
"testing in which two or more variants of a program are executed with the same inputs, the outputs are compared, and errors are analyzed in case of discrepancies",プログラムの 2 つ以上のバリアントを同じ入力で実行し、出力を比較し、矛盾がある場合はエラーを分析するテスト
testing methodology in which two or more program mutations are executed using the same test cases to evaluate the ability of the test cases to detect differences in the mutations,同じテスト ケースを使用して 2 つ以上のプログラムの突然変異を実行し、突然変異の違いを検出するテスト ケースの能力を評価するテスト方法論
testing of groups of related components.,関連コンポーネントのグループのテスト。
"testing of individual hardware or software components [IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1;",個々のハードウェアまたはソフトウェア コンポーネントのテスト [IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation、3.1;
testing of individual routines and modules by the developer or an independent tester,開発者または独立したテスターに​​よる個々のルーチンおよびモジュールのテスト
testing performed based on a documented test script,文書化されたテストスクリプトに基づいて実行されるテスト
testing performed with both the software and the documentation to evaluate that the documentation is fit for purpose and supports the users sufficiently in their use of the software,ソフトウェアとドキュメントの両方を使用して実行されるテスト。ドキュメントが目的に適合しており、ソフトウェアの使用においてユーザーを十分にサポートしているかどうかを評価します。
"testing required to determine that a change to a system component has not adversely affected functionality, reliability or performance and has not introduced additional defects",システムコンポーネントへの変更が機能、信頼性、パフォーマンスに悪影響を与えておらず、追加の欠陥が生じていないことを判断するために必要なテスト
testing task that is re-performed during maintenance after having been originally performed during development.,開発中に最初に実行された後、メンテナンス中に再実行されるテスト タスク。
testing that ignores the internal mechanism of a system or component and focuses solely on the outputs generated in response to selected inputs and execution conditions,システムまたはコンポーネントの内部メカニズムを無視し、選択された入力と実行条件に応じて生成される出力のみに焦点を当てるテスト
testing that requires the execution of program code,プログラムコードの実行を必要とするテスト
testing that requires the execution of the test item,テスト項目の実行が必要なテスト
testing that takes into account the internal mechanism of a system or component,システムまたはコンポーネントの内部メカニズムを考慮したテスト
"testing, conducted by the developer and witnessed by the acquirer (as appropriate), to demonstrate that a software product meets its specifications and is ready for use in its target environment or integration with its containing system",ソフトウェア製品が仕様を満たしており、ターゲット環境での使用またはそれを含むシステムとの統合の準備が整っていることを実証するために、開発者によって実施され、（必要に応じて）取得者によって立ち会いられるテスト。
text displayed on the screen that responds to user input,ユーザー入力に応答して画面に表示されるテキスト
"text listing, often indented, of the nodes in an IDEF0 model, shown in outline order",IDEF0 モデル内のノードのテキスト リスト (多くの場合インデントされ、アウトライン順に表示)
text that identifies the topic that will be covered in the following text,次のテキストで説明するトピックを識別するテキスト
"text, symbol, or small graphic that helps the user identify where particular types of information are located or where the information in the current display fits into the whole document.",特定の種類の情報がどこにあるか、または現在の表示内の情報が文書全体のどこに収まるかをユーザーが識別するのに役立つテキスト、記号、または小さなグラフィック。
textual and/or graphical component of a diagram that records a fact not otherwise depicted by a diagram's boxes and arrows,図のボックスや矢印によって示されていない事実を記録する、図のテキストおよび/またはグラフィックコンポーネント
textual or graphical overview of the navigation structure of a website,Web サイトのナビゲーション構造のテキストまたはグラフィックによる概要
"that an item was designed and integrated correctly to approved standards by competent people in accordance with approved procedures with sufficient mitigation, and tested sufficiently",品目は、十分な緩和を伴う承認された手順に従って、有能な担当者によって承認された基準に合わせて正しく設計および統合され、十分にテストされていること
"That is, a box detailed by a child diagram. The existence of this child diagram is indicated by a box detail reference.",つまり、子図によって詳細化されたボックスです。この子図の存在は、ボックス詳細参照によって示されます。
"That is, a diagram that does not contain any function that has been decomposed.",つまり、分解された関数が含まれていない図です。
"That is, a logical group of permanent data seen from the perspective of the user. FPA assigns each data function a type and distinguishes between the following types: the internal logical file and the external interface file.",つまり、ユーザーの観点から見た永続的なデータの論理的なグループです。 FPA は各データ関数にタイプを割り当て、内部論理ファイルと外部インターフェイス ファイルのタイプを区別します。
"That is, an object type set whose instances are created by a function by transforming the function's input. The arrowtail of an output arrow is attached to the right side of a box.",つまり、関数の入力を変換することによって関数によってインスタンスが作成されるオブジェクト タイプ セットです。出力矢印の矢尻はボックスの右側に取り付けられます。
"That is, an object type set whose instances are transformed by a function into output. The arrowhead of an input arrow is attached to the left side of a box.",つまり、そのインスタンスが関数によって出力に変換されるオブジェクト タイプ セットです。入力矢印の矢頭はボックスの左側に取り付けられます。
"That is, an object type set whose instances are used by a function to transform input into output. The arrowhead of a mechanism arrow is attached to the bottom side of a box.",つまり、入力を出力に変換する関数によってインスタンスが使用されるオブジェクト タイプ セットです。仕掛け矢の矢尻は箱の底面に取り付けられています。
"That is, an object type set whose instances establish a condition or set of conditions required for a function to produce correct output. The arrowhead of a control arrow is attached to the top side of a box.",つまり、関数が正しい出力を生成するために必要な条件または一連の条件をインスタンスが確立するオブジェクト タイプ セットです。コントロールアローの矢尻はボックスの上面に取り付けられます。
"that is, at most one lower-priority task can block a higher-priority tas",つまり、優先度の低いタスクは最大でも 1 つだけで、優先度の高いタスクをブロックできます。
"That is, data (information) models.",つまり、データ（情報）モデルです。
"That is, having constituent parts.",つまり、構成部品を持っているということです。
"That is, having no parts.",つまり部品が無いということです。
"That is, instantiation must be accomplished via a subclass. A class for which every instance must also be an instance of a subclass in the cluster (a total cluster) is called an abstract class with respect to that cluster.",つまり、インスタンス化はサブクラスを介して実行する必要があります。すべてのインスタンスがクラスター (クラスター全体) 内のサブクラスのインスタンスでもある必要があるクラスは、そのクラスターに関して抽象クラスと呼ばれます。
"That is, it does no updates.",つまり、更新は行われません。
"That is, some instances map to no related instance. An attribute can be declared partial, meaning it may have no value. A participant property is declared optional as part of the relationship syntax. An operation is declared partial when it has no meaning for some instances, i.e., it does not give an answer or produce a response.",つまり、一部のインスタンスは、関連するインスタンスにマップされません。属性は部分的に宣言できます。これは、値が存在しない可能性があることを意味します。参加者プロパティは、関係構文の一部としてオプションとして宣言されます。操作が一部のインスタンスにとって意味を持たない場合、つまり、答えを与えない、または応答を生成しない場合、操作は部分的であると宣言されます。
"That is, the designation given to a property whose implementation is not specified in this class. A property that is a subclass responsibility is a specification in the superclass of an interface that each of its subclasses must provide. A property that is designated as a subclass responsibility has its realization deferred to the subclass(es) of the class.",つまり、このクラスで実装が指定されていないプロパティに与えられる指定です。サブクラスの責任であるプロパティは、各サブクラスが提供する必要があるインターフェイスのスーパークラス内の仕様です。サブクラスの責任として指定されたプロパティは、その実現がクラスのサブクラスに延期されます。
"That is, the separation of object types from an object type set.",つまり、オブジェクト タイプ セットからオブジェクト タイプを分離することです。
"That is, visible to any requester (available to all without restriction).",つまり、すべての要求者に表示されます (制限なくすべての要求者が利用可能)。
that part of a diagram reference that corresponds to a diagram's parent function's node number,ダイアグラムの親関数のノード番号に対応するダイアグラム参照の部分
that portion of an operating system that is kept in main memory at all times,オペレーティング システムの、常にメイン メモリに保持される部分
that portion of main storage that is assigned to a computer program for temporary storage of data,データを一時的に保存するためにコンピュータプログラムに割り当てられる主記憶域の部分
the 'logon' command to initiate a computer session,コンピュータセッションを開始するための「logon」コマンド
the ability of an FSM method to take into account the characteristics of functional user requirements (FUR) which are pertinent to FSM in a functional domain,機能ドメインにおける FSM に関連する機能ユーザー要件 (FUR) の特性を考慮する FSM メソッドの機能
the ability to convert the results from applying two or more FSM methods in the measurement of a functional size of the same set of functional user requirements,同じ機能ユーザー要件セットの機能サイズの測定に 2 つ以上の FSM 手法を適用した結果を変換する機能
"the ability to plan, organize, direct, and control individuals or groups of people to achieve specific goals",特定の目標を達成するために個人または人々のグループを計画、組織、指揮、制御する能力
"the absolute sum of the number of function points of all the functions to be added to, changed in, or deleted from the project or the application to be counted",カウント対象となるプロジェクトまたはアプリケーションに追加、変更、削除されるすべての関数の関数ポイント数の絶対和
the accounts payable segment of a financial system,金融システムの買掛金セグメント
"The acquirer and the supplier sometimes are part of the same organization. The application management organization can have internal or external suppliers. A supplier can be another application management organization, but also IT infrastructure management organizations or consultants.",取得者と供給者は同じ組織の一部である場合があります。アプリケーション管理組織には、内部または外部のサプライヤーを含めることができます。サプライヤーには、別のアプリケーション管理組織だけでなく、IT インフラストラクチャ管理組織やコンサルタントも含まれます。
"The acquirer can be internal or external to the supplier organization. Acquisition of a software product can involve, but does not necessarily require, a legal contract or a financial transaction between the acquirer and supplier.",取得者は、サプライヤー組織の内部または外部の場合があります。ソフトウェア製品の取得には、取得者と供給者との間の法的契約または金融取引が含まれる場合がありますが、必ずしも必要というわけではありません。
the act of carefully selecting process and related inputs and outputs contained within the PMBOK Guide® to determine a subset of specific processes that will be included within a project's overall management approach,プロジェクトの全体的な管理アプローチに含まれる特定のプロセスのサブセットを決定するために、PMBOK Guide® に含まれるプロセスおよび関連するインプットとアウトプットを慎重に選択する行為
"the action by which an ODP system assigns a relative status to something, according to estimation by the system",システムによる推定に従って、ODP システムが何かに相対ステータスを割り当てるアクション
the activities carried out for an application that change the specifications of the application and that also usually change the number of function points as a result,アプリケーションに対して実行されるアクティビティで、アプリケーションの仕様を変更し、通常はその結果としてファンクション ポイントの数も変更されます。
"the activity of representing some elements of a process, device, or concept",プロセス、デバイス、またはコンセプトのいくつかの要素を表現する活動
"the aggregate of things used by an organization in any undertaking, such as equipment, apparatus, tools, machinery, gear, material, and supplies",設備、装置、工具、機械、ギア、資材、消耗品など、組織があらゆる事業で使用する物の集合体
"the aggregation of the processes, tools, techniques, methodologies, resources, and procedures to manage a project",プロジェクトを管理するためのプロセス、ツール、テクニック、方法論、リソース、手順の集合体
"the alignment of project objectives with the strategy of the larger organization by the project sponsor and project team. A project's governance is defined by and must fit within the larger context of the program or organization sponsoring it, but is separate from organizational governance",プロジェクトのスポンサーとプロジェクト チームによるプロジェクトの目標と、より大きな組織の戦略との調整。プロジェクトのガバナンスは、それをスポンサーするプログラムまたは組織によって定義され、そのより大きなコンテキスト内に適合する必要がありますが、組織ガバナンスとは別のものです。
The alternative to a perpetual license is a term or subscription-based license,永久ライセンスの代替となるのは、期間ベースまたはサブスクリプションベースのライセンスです。
"the amount of budget deficit or surplus at a given point in time, expressed as the difference between the earned value and the actual cost",稼得価値と実際のコストの差として表される、特定の時点での財政赤字または黒字の額。
the amount of time that a schedule activity can be delayed or extended from its early start date without delaying the project finish date or violating a schedule constraint,プロジェクトの終了日を遅らせたり、スケジュールの制約に違反したりすることなく、スケジュールアクティビティを早期の開始日から遅らせたり延長したりできる時間。
the amount of time that a schedule activity can be delayed without delaying the early start date of any successor or violating a schedule constraint.,後続アクティビティの早期開始日を遅らせたり、スケジュール制約に違反したりすることなく、スケジュール アクティビティを遅延できる時間。
the amount of time whereby a successor activity can be advanced with respect to a predecessor activity,先行アクティビティに対して後続アクティビティを進めることができる時間
the amount of time whereby a successor activity is required to be delayed with respect to a predecessor activity,後続アクティビティが先行アクティビティに対して遅延する必要がある時間量
The application architecture captures the high-level design of a specific member product of a product line,アプリケーション アーキテクチャは、製品ラインの特定のメンバー製品の高レベルの設計をキャプチャします。
the application as seen through the eyes of the user,ユーザーの目を通して見たアプリケーション
"the application of knowledge, skills, tools, and techniques to a program to meet the program requirements and to obtain benefits and control not available by managing projects individually.",知識、スキル、ツール、テクニックをプログラムに適用して、プログラムの要件を満たし、プロジェクトを個別に管理することでは得られない利点と制御を獲得すること。
"the application of knowledge, skills, tools, and techniques to project activities to meet the project requirements",プロジェクト要件を満たすために、知識、スキル、ツール、テクニックをプロジェクト活動に適用すること
"the application of software tools to software design, requirements tracing, code production, testing, document generation, and other software engineering activities",ソフトウェア設計、要件追跡、コード生成、テスト、ドキュメント生成、およびその他のソフトウェア エンジニアリング活動へのソフトウェア ツールの適用
"The appropriate combination of organization, labeling, navigation schemes and retrieval mechanisms within an information space will facilitate task completion and efficient access to content.",情報空間内の編成、ラベル付け、ナビゲーション スキーム、検索メカニズムを適切に組み合わせることで、タスクの完了とコンテンツへの効率的なアクセスが容易になります。
"The approval authority can include multiple entities, e.g. individuals or organizations. These can include different entitles with different levels of approval and/or different areas of interest. In two-party situations, approval authority often rests with the acquirer. In regulatory situations, the approval authority can be a third party such as a governmental organization or its agent. In other situations, e.g. the purchase of off-the-shelf products developed by a single-party, the independence of the approval authority can be a relevant issue to the acquirer.",承認機関には複数のエンティティが含まれる場合があります。個人または組織。これらには、異なる承認レベルや異なる関心分野を持つ異なる資格が含まれる場合があります。二者間の状況では、多くの場合、承認権限は買収者にあります。規制状況では、承認機関は政府機関やその代理人などの第三者となる場合があります。他の状況では、例えば単一当事者によって開発された既製製品を購入する場合、承認当局の独立性が取得者にとって関連する問題となる可能性があります。
the approved estimate for the project or any work breakdown structure component or any schedule activity,プロジェクトまたは作業分解構造コンポーネントまたはスケジュールアクティビティの承認された見積もり
the approved version of a schedule model that can be changed only through formal change control procedures and is used as a basis for comparison to actual results,スケジュール モデルの承認済みバージョン。正式な変更管理手順を通じてのみ変更でき、実際の結果との比較の基礎として使用されます。
the approved version of a work product that can be changed only through formal change control procedures and is used as a basis for comparison,正式な変更管理手順を通じてのみ変更でき、比較の基礎として使用される作業成果物の承認済みバージョン。
"the approved version of the time-phased project budget, excluding any management reserves, which can be changed only through formal change control procedures and is used as a basis for comparison to actual results",管理予備金を除いた、時間段階のプロジェクト予算の承認済みバージョン。正式な変更管理手順を通じてのみ変更でき、実際の結果との比較の基礎として使用されます。
"the area composed of three standard deviations on either side of the centerline, or mean, of a normal distribution of data plotted on a control chart, which reflects the expected variation in the data",管理図上にプロットされたデータの正規分布の中心線または平均の両側にある 3 つの標準偏差で構成される領域。データの予想される変動を反映します。
"the area, on either side of the centerline, or mean, of data plotted on a control chart that meets the customer's requirements for a product or service. This area may be greater than or less than the area defined by the control limits",製品またはサービスに対する顧客の要件を満たす、管理図上にプロットされたデータの中心線または平均の両側の領域。この領域は、管理限界によって定義される領域よりも大きい場合もあれば、小さい場合もあります。
"the assessment sponsor, assessors, and organizational unit members",評価スポンサー、評価者、組織単位のメンバー
"the assignment of main memory, input/output devices, and auxiliary storage to jobs executing concurrently in a computer system",コンピュータ システム内で同時に実行されるジョブへのメイン メモリ、入出力デバイス、および補助記憶装置の割り当て
"the assignment of tasks to specific resources when the resources are available to start work, rather than when the project is planned",プロジェクトの計画時ではなく、作業を開始できるリソースが利用可能になったときに、特定のリソースにタスクを割り当てる
The association is named for the sense in which the instances are related. A relationship can be represented as a time-varying binary relation between the instances of the current extents of two state classes,この関連付けは、インスタンスが関連しているという意味に基づいて名前が付けられています。関係は、2 つの状態クラスの現在のエクステントのインスタンス間の時間変化する二項関係として表すことができます。
"the assurance that a product, service, or system meets the needs of the customer and other identified stakeholders. It often involves acceptance and suitability with external customers",製品、サービス、またはシステムが顧客およびその他の特定の利害関係者のニーズを満たしているという保証。多くの場合、外部顧客への受け入れと適合性が伴います。
the authorized budget assigned to scheduled work,スケジュールされた作業に割り当てられる承認された予算
The basic flow is written assuming that no errors or alternatives exist.,基本的なフローは、エラーや代替案が存在しないことを前提として記述されています。
the basic functional component of Mk II FPA,Mk II FPA の基本的な機能コンポーネント
The bent shape is thought to resemble a bird wing.,曲がった形状は鳥の翼に似ていると考えられています。
"The bit string '00000011' when logically ANDed with an eight-bit data item, gives a result that retains the last two bits of the data item and has zero in all the other bit positions.",ビット文字列「00000011」を 8 ビットのデータ項目と論理積すると、データ項目の最後の 2 ビットが保持され、他のすべてのビット位置が 0 になる結果が得られます。
the border between the application and its environment of other applications and users,アプリケーションと、他のアプリケーションやユーザーの環境との間の境界
"The boundary provides the measurement analyst(s) with a solid delimiter to distinguish, without ambiguity, what is included inside the measured software from what is part of the measured software's operating environment.",境界は、測定アナリストに、測定対象ソフトウェアの内部に含まれるものと測定対象ソフトウェアの動作環境の一部を曖昧さなく区別するための確実な区切り文字を提供します。
The branch is typically not released but is collapsed back at some point to its parent branch.,通常、ブランチは解放されませんが、ある時点で親ブランチに折りたたまれます。
the branch used for releasing the product's stable production version.,製品の安定した製品バージョンをリリースするために使用されるブランチ。
"the capability to identify, assess, and manage the personal emotions of oneself and other people, as well as the collective emotions of groups of people",自分自身と他人の個人的な感情、および人々のグループの集合的な感情を特定、評価、管理する能力
"The CDIF family of standards supports multiple transfer formats, each composed of a syntax and an encoding.",CDIF ファミリの標準規格は複数の転送フォーマットをサポートしており、それぞれが構文とエンコーディングで構成されています。
The CDIF semantic metamodel defines an Entity-Relationship-Attribute model that is used to construct an define models used in systems development.,CDIF セマンティック メタモデルは、システム開発で使用される定義モデルを構築するために使用されるエンティティ-関係-属性モデルを定義します。
the centralized management of one or more portfolios to achieve strategic objectives,戦略的目標を達成するための 1 つまたは複数のポートフォリオの集中管理
"The certification scheme owner can be the certification body itself, a governmental authority, trade association, group of certification bodies, or other.",認証スキームの所有者は、認証機関自体、政府機関、業界団体、認証機関のグループなどになります。
The changes are not committed to the original branch.,変更は元のブランチにコミットされません。
The character set used is significant in the encoding of text and string meta-attributes for a CDIF transfer,使用される文字セットは、CDIF 転送のテキストおよび文字列メタ属性のエンコードにおいて重要です。
"The class TreeSpecies is a powertype of the class Tree, since each instance of TreeSpecies is also a subclass of Tree.",TreeSpecies の各インスタンスは Tree のサブクラスでもあるため、クラス TreeSpecies はクラス Tree のパワータイプです。
"The classes and subject domains in a subject domain together supply the knowledge, behavior, and rules that make up the subject. These notions are collectively referred to as the subject domain's responsibilities. Subject domain responsibilities are not distinguished as sub-domains or classes during the early stages of analysis",サブジェクト ドメイン内のクラスとサブジェクト ドメインは一緒になって、サブジェクトを構成する知識、動作、およびルールを提供します。これらの概念は、総称してサブジェクト ドメインの責任と呼ばれます。サブジェクト ドメインの責任は、分析の初期段階ではサブドメインまたはクラスとして区別されません。
the closeness of the agreement between the result of a measurement and the true value of the measurand,測定結果と測定量の真の値との間の一致の近さ
the code BNZ to designate the operation 'branch if not zero'.,コード BNZ は、「ゼロでない場合に分岐」操作を指定します。
the collection of activities focused on creating source code,ソースコードの作成に焦点を当てたアクティビティのコレクション
the collection of information for describing and controlling the schedule,スケジュールを記述および制御するための情報の収集
the collection of schedule activity dependencies that makes up a project schedule network diagram,プロジェクトのスケジュール ネットワーク図を構成するスケジュール アクティビティの依存関係の集合
the collection of the names and definitions of all defined concepts that appear within the views of a model,モデルのビュー内に表示されるすべての定義された概念の名前と定義のコレクション
The combination of SYNTAX.1 and ENCODING.1 forms the initial CDIF transfer syntax and encoding.,SYNTAX.1 と ENCODING.1 の組み合わせにより、初期の CDIF 転送構文とエンコーディングが形成されます。
"the comparison of actual or planned practices, such as processes and operations, to those of comparable organizations to identify best practices, generate ideas for improvement, and provide a basis for measuring performance",ベストプラクティスを特定し、改善のためのアイデアを生み出し、パフォーマンスを測定するための基礎を提供するために、プロセスや運用などの実際または計画されたプラクティスと同等の組織のプラクティスを比較する。
"the compilation, loading, and execution of a computer program",コンピュータプログラムのコンパイル、ロード、および実行
"The component model supports four basic kinds of ports: facets, receptacles, event sources, event sinks and attributes.",コンポーネント モデルは、ファセット、レセプタクル、イベント ソース、イベント シンク、および属性という 4 つの基本的な種類のポートをサポートします。
"The computer is provided with data concerning the item to be designed, how it is to function, and the rules for the way in which the different components can be joined.",コンピューターには、設計対象のアイテム、それがどのように機能するか、さまざまなコンポーネントを結合する方法のルールに関するデータが提供されます。
The concept of maturity can be applied to quality characteristics to indicate the degree to which they meet required needs under normal operation.,成熟度の概念を品質特性に適用して、通常の運用において要求されるニーズをどの程度満たしているかを示すことができます。
"The concept of property-of-interest is introduced in order to characterize negative effects of consequences. I the safety context, human lives and health are instances of properties-of-interest. Assets in the security context are instances o properties-of-interes",利益の概念は、結果の悪影響を特徴付けるために導入されます。安全性に関して言えば、人の命と健康は重要な資産の例です。セキュリティ コンテキストにおける資産は、インスタンスまたは関心のあるプロパティです。
the condition that causes termination of an online process if no user input is received within a specified period of time,指定された期間内にユーザー入力が受信されなかった場合にオンライン プロセスが終了する条件
The constituent instances of a value class do not come and go and cannot change state.,値クラスの構成インスタンスは行き来せず、状態を変更できません。
The construct is a consequence of its measures and each measure is a determinant of the construct.,構成要素はその尺度の結果であり、各尺度は構成要素の決定要因です。
"The COSMIC Functional Size Measurement Method has four types of data movements: Entry, Exit, Read and Write. For measurement purposes, each data movement is considered to account for certain associated data manipulation",COSMIC Functional Size Measurement Method には、Entry、Exit、Read、Write の 4 種類のデータ移動があります。測定目的では、各データ移動は、関連する特定のデータ操作を考慮して考慮されます。
The criteria will vary based on the level of test being performed.,基準は、実行されるテストのレベルに応じて異なります。
"The critical piece can be defined in terms of services provided, degree of risk, difficulty, or other criteria.",重要な部分は、提供されるサービス、リスクの程度、難易度、またはその他の基準の観点から定義できます。
The data format and transmission speeds are configurable. Commonly part of a microcontroller.,データ形式と伝送速度は設定可能です。通常はマイクロコントローラーの一部です。
"the data item FIVE, with an unchanging value of 5",データ項目 FIVE、不変の値 5
The data name THREE is reserved to represent the value 3.,データ名 THREE は、値 3 を表すために予約されています。
The data structures are usually documented in technical and logical data models.,データ構造は通常、技術的および論理的なデータ モデルで文書化されます。
the deferred cost of work not done at an earlier point in the product life cycle,製品ライフサイクルの初期の時点で行われなかった作業の繰延コスト
"the degree of uncertainty an entity is willing to take on, in anticipation of a reward",企業が報酬を期待して喜んで引き受ける不確実性の程度
"the degree to which the requirements and design of a given system element match, the degree to which each element in a bubble chart references the requirement that it satisfies",特定のシステム要素の要件と設計が一致する度合い、バブル チャート内の各要素が満たす要件を参照する度合い
"the degree, amount, or volume of risk that an organization or individual will withstand",組織または個人が耐えることができるリスクの程度、量、または量
"the depiction in a diagram format of the inputs, process actions, and outputs of one or more processes within a system",システム内の 1 つ以上のプロセスの入力、プロセス アクション、および出力を図形式で表現したもの
"the description of the project scope, major deliverables, assumptions, and constraints",プロジェクトの範囲、主要な成果物、前提条件、制約の説明
The designated storage location can contain the address of the desired operand or another indirect address; the chain of addresses eventually leads to the operand.,指定された記憶場所には、目的のオペランドのアドレスまたは別の間接アドレスを含めることができます。アドレスのチェーンは最終的にオペランドにつながります。
The determination of transition modes guarantees that the transition condition is satisfied.,移行モードの決定により、移行条件が満たされることが保証されます。
The developer prepares the Maintainability Plan.,開発者は保守計画を作成します。
"The developmental configuration is under the developer's control, and therefore is not called a baseline.",開発構成は開発者の制御下にあるため、ベースラインとは呼ばれません。
The device can be rewritten many times.,デバイスは何度でも書き換え可能です。
The diagram feature reference ABC/A31.3 uses dot notation to join the page reference of the parent diagram ABC/A31 to the feature reference for box 3 in that diagram.,ダイアグラムのフィーチャー参照 ABC/A31.3 は、ドット表記を使用して、親ダイアグラム ABC/A31 のページ参照を、そのダイアグラムのボックス 3 のフィーチャー参照に結合します。
The diagram number refers to the diagram that details or decomposes the function designated by the same node number.,図番号は、同じノード番号で指定される機能を詳細または分解した図を指します。
The diagram title of a child diagram is the box name of its parent box.,子図の図タイトルは、親ボックスのボックス名になります。
"The discrimination threshold can depend on, for example, noise (internal or external) or friction. It can also depend on the value of the stimulus.",識別閾値は、たとえば、ノイズ (内部または外部) または摩擦に依存する可能性があります。それは刺激の値にも依存する可能性があります。
"The disposition can be to reject, to defer for further analysis, or to accept. Upon acceptance the proposed change becomes an approved modification. There can be a one-to-one, one-to-many, or many-to-many relationship between pro changes and approved modifications.",処分は、拒否することも、さらなる分析を延期することも、受け入れることもできます。承認されると、提案された変更は承認された変更になります。プロによる変更と承認された変更の間には、1 対 1、1 対多、または多対多の関係が存在する可能性があります。
"the document that describes how the project will be executed, monitored, and controlled",プロジェクトがどのように実行、監視、制御されるかを説明する文書
the documented narrative description of the product scope,製品範囲の文書化された物語的説明
the documented results of control quality activities,品質管理活動の文書化された結果
"the documents utilized in bid and proposal activities, which include the buyer's Invitation for Bid, Invitation for Negotiations, Request for Information, Request for Quotation, Request for Proposal and seller's responses",入札および提案活動で使用される文書。これには、買主の入札招待状、交渉招待状、情報請求書、見積依頼書、提案依頼書および売主の回答が含まれます。
"The domain architecture contains the designs that are intended to satisfy requirements specified in the domain model. The domain architecture documents design, whereas the domain model documents requirements. A domain architecture: 1) can be adapted to create designs for software systems within a domain, and 2) provides a framework for configuring assets within individual software systems. The term ""architecture"" has been deliberately redefined to more properly convey its meaning in the software reuse context.",ドメイン アーキテクチャには、ドメイン モデルで指定された要件を満たすことを目的とした設計が含まれています。ドメイン アーキテクチャは設計を文書化し、ドメイン モデルは要件を文書化します。ドメイン アーキテクチャ: 1) ドメイン内のソフトウェア システムの設計を作成するために適用でき、2) 個々のソフトウェア システム内で資産を構成するためのフレームワークを提供します。 「アーキテクチャ」という用語は、ソフトウェア再利用の文脈においてその意味をより適切に伝えるために意図的に再定義されました。
"The domain model identifies and describes the structure of data, flow of information, functions, constraints, and controls within the domain that are included in software systems in the domain. The domain model describes the commonalities and variabilities among requirements for software systems in the domain.",ドメイン モデルは、ドメイン内のソフトウェア システムに含まれる、ドメイン内のデータの構造、情報の流れ、機能、制約、および制御を識別し、記述します。ドメイン モデルは、ドメイン内のソフトウェア システムの要件間の共通性と変動性を記述します。
"The elements of the process dimension include processes, process purpose statements, process outcomes, and process performance indicators.",プロセス ディメンションの要素には、プロセス、プロセスの目的ステートメント、プロセスの結果、プロセス パフォーマンス指標が含まれます。
The emulated users submit only chains of specified chain types to the SUT.,エミュレートされたユーザーは、指定されたチェーン タイプのチェーンのみを SUT に送信します。
"The enterprise object(s) participating in an action of commitment can be parties or agents acting on behalf of a party or parties. In the case of an action of commitment by an agent, the principal becomes obligated.",コミットメントのアクションに参加する企業オブジェクトは、当事者または当事者を代表して行動するエージェントであることができます。代理人によるコミットメント行為の場合、本人が義務を負います。
The entitlement schema enables the recording of entitlement allocations.,資格スキーマにより、資格割り当ての記録が可能になります。
the entity responsible for providing the project's sponsor and a conduit for project funding or other project resources,プロジェクトのスポンサーと、プロジェクト資金やその他のプロジェクト リソースのパイプラインを提供する責任のある団体
"The environment of a system includes developmental, technological, business, operational, organizational, political, economic, legal, regulatory, ecological and social influences.",システムの環境には、開発、技術、ビジネス、運用、組織、政治、経済、法律、規制、生態学的、社会的な影響が含まれます。
"The essence of a declaration is that, by virtue of the act of declaration itself and the authority of the object or its principal, it causes a state of affairs to come into existence outside the object making the declaration.",宣言の本質は、宣言の行為自体と、オブジェクトまたはその主体の権限によって、宣言を行うオブジェクトの外部で状況が発生することです。
"the evaluation of whether or not a product, service, or system complies with a regulation, requirement, specification, or imposed condition. It is often an internal process",製品、サービス、またはシステムが規制、要件、仕様、または課された条件に準拠しているかどうかの評価。多くの場合、それは内部プロセスです
"The evaluators can include usability specialists, developers, end users, or other types of professionals.",評価者には、ユーザビリティの専門家、開発者、エンド ユーザー、またはその他の種類の専門家が含まれる場合があります。
"The evaluators making the inspections typically are usability specialists, but can also include end users and members of the design team. Inspection-based evaluation can be conducted by machines in some cases, e.g., when consistency with required terminology is being evaluated. Established criteria typically include user requirements, usability guidelines in standards, design conventions contained in manufacturer guidelines and style guides, task models to be supported, as well as standardized principles.",検査を行う評価者は通常、ユーザビリティの専門家ですが、エンド ユーザーや設計チームのメンバーが含まれる場合もあります。検査ベースの評価は、必要な用語との整合性を評価する場合など、機械によって実行される場合もあります。確立された基準には通常、ユーザーの要件、標準規格のユーザビリティ ガイドライン、メーカーのガイドラインやスタイル ガイドに含まれる設計規約、サポートされるタスク モデル、標準化された原則などが含まれます。
"The event can be certain or uncertain. The event can be a single occurrence or a series of occurrences. The probability associated with the event can be estimated for a given period of time. An event can be an external interrupt, a timer expiration, an internal signal, or an internal message. [SOURCE: ISO Guide 73:2009, definition 3.6.1.3]",その出来事は確実なものである場合もあれば、不確実なものである場合もあります。イベントは、単一の発生である場合もあれば、一連の発生である場合もあります。イベントに関連する確率は、一定期間にわたって推定できます。イベントには、外部割り込み、タイマーの期限切れ、内部信号、内部メッセージなどがあります。 [出典: ISO ガイド 73:2009、定義 3.6.1.3]
The event of starting the preparation time depends on the definition of the task mode of the following task.,準備時間の開始イベントは、次のタスクのタスクモードの定義に依存します。
the expected cost to finish all the remaining project work,残りのプロジェクト作業をすべて完了するために予想されるコスト
the expected or observed time between consecutive failures in a system or component,システムまたはコンポーネントの連続した障害の間の予想または観察された時間
the expected total cost of completing all work expressed as the sum of the actual cost to date and the estimate to complete,すべての作業を完了するために予想される総コスト。現在までの実際のコストと完了までの見積もりの​​合計として表されます。
The expression must evaluate to a multiset over the type of the arc's associated place.,式は、アークに関連付けられた場所のタイプにわたるマルチセットとして評価される必要があります。
"The extent to which software is usable using a small screen, with low network bandwidth, by a non expert user, and in a fault-tolerant mode (e.g. no network connectivity)",小さな画面、低いネットワーク帯域幅、専門知識のないユーザーによる、フォールト トレラント モード (例: ネットワーク接続なし) でソフトウェアが使用できる範囲。
"the external interface file that is counted for the set of all FPA tables identified in an application that are only used by the application to be counted, but that are maintained by a different application",アプリケーション内で識別されるすべての FPA テーブルのセットとしてカウントされる外部インターフェイス ファイル。カウント対象のアプリケーションによってのみ使用され、別のアプリケーションによって維持されます。
"The fault tolerance discipline distinguishes between a human action (a mistake), its manifestation (a hardware or software fault), the result of the fault (a failure), and the amount by which the result is incorrect (the error).",フォールト トレランスの規律では、人間の行為 (間違い)、その兆候 (ハードウェアまたはソフトウェアの障害)、障害の結果 (失敗)、および結果がどの程度間違っているか (エラー) が区別されます。
"the features and functions that characterize a product, service or result",製品、サービス、または結果を特徴づける特徴と機能
The final decision on whether to do the full project is deferred from the point when the uncertainties are the greatest (the beginning) to a point where the uncertainties are significantly reduced.,プロジェクト全体を実行するかどうかの最終決定は、不確実性が最も大きい時点 (開始時) から、不確実性が大幅に減少する時点まで延期されます。
"The five function types identified in ISO/IEC 20926:2009 are External Input, External Output, External Inquiry, Internal Logical File and External Interface File.",ISO/IEC 20926:2009 で特定されている 5 つの関数タイプは、外部入力、外部出力、外部問い合わせ、内部論理ファイル、および外部インターフェイス ファイルです。
"the five types of components of which an application consists, seen from the perspective of FPA",FPA の観点から見た、アプリケーションを構成する 5 種類のコンポーネント
The focus of an optimizing process is on continually improving the range of process performance through both incremental and innovative improvements.,最適化プロセスの焦点は、段階的改善と革新的な改善の両方を通じてプロセス パフォーマンスの範囲を継続的に改善することにあります。
"The following are two types of chains identified:  supply chains of the IT organizations that are involved in the management and operation of the application (application manager, computer center, workspace manager, network manager, business information manager, suppliers, etc.);  business chains in which the user organization using the application participates (the business process supported by the application forms part of a chain across several organizations; for example, the chain of criminal justice, the healthcare chain).",特定されたチェーンには次の 2 種類があります。アプリケーションの管理と運用に関与する IT 組織のサプライ チェーン (アプリケーション マネージャー、コンピューター センター、ワークスペース マネージャー、ネットワーク マネージャー、ビジネス情報マネージャー、サプライヤーなど)。  アプリケーションを使用するユーザー組織が参加するビジネス チェーン (アプリケーションによってサポートされるビジネス プロセスは、いくつかの組織にわたるチェーンの一部を形成します。たとえば、刑事司法チェーン、医療チェーンなど)。
"The following association types represent existence dependencies: identifying relationships, categorization structures and mandatory nonidentifying relationships. [key style]",次の関連付けタイプは存在依存関係を表します: 識別関係、分類構造、および必須の非識別関係。 【キースタイル】
The form of expression used to state an associative literal is className with propertyName: propertyValue.,連想リテラルを記述するために使用される式の形式は、className と propertyName: propertyValue です。
"The forms of association that can be expressed will depend on the specification technique used. The terms associated by a correspondence need not necessarily be expressed using a single specification technique. The correspondence can associate a term in one specification technique with a term in some different specification technique. Rather than linking every individual pair of terms, general correspondences can also be expressed between specification techniques themselves. For example, composition operators defined in different specification techniques can be associated, implying correspondences wherever these operators are used to link terms in the respective viewpoints.",表現できる関連付けの形式は、使用される仕様手法によって異なります。対応関係によって関連付けられた用語は、必ずしも単一の仕様手法を使用して表現される必要はありません。対応関係により、ある仕様技術の用語を別の仕様技術の用語と関連付けることができます。個々の用語のペアをすべてリンクするのではなく、仕様技術自体の間で一般的な対応関係を表現することもできます。たとえば、異なる仕様技術で定義された合成演算子を関連付けることができ、これらの演算子がそれぞれの観点の用語をリンクするために使用される場合はどこでも対応関係を暗示します。
"The four model layers in CDIF are user data, model, metamodel, meta-metamodel. Any given model layer provides an accurate and complete definition of all the instances that occur one layer below the given layer. For example, the meta-metamodel provides a set of definitions that are used to construct and understand the metamodel; the metamodel provides a set of definitions that are used to construct and understand a model.",CDIF の 4 つのモデル層は、ユーザー データ、モデル、メタモデル、メタメタモデルです。任意のモデル レイヤーは、そのレイヤーの 1 つ下のレイヤーで発生するすべてのインスタンスの正確かつ完全な定義を提供します。たとえば、メタメタモデルは、メタモデルを構築して理解するために使用される一連の定義を提供します。メタモデルは、モデルを構築して理解するために使用される一連の定義を提供します。
The functional size of a development project can include the size of conversion functionality.,開発プロジェクトの機能サイズには、変換機能のサイズが含まれる場合があります。
"The Functional User Requirement is to print a check and mark the appropriate account as paid. If only part of the Functional User Requirement is completed (e.g., only printing the check or only marking it as paid), the application is not in a consistent state. The printing of a check without marking the account as paid causes an inconsistency in the application as does marking it as paid without printing it.",機能ユーザーの要件は、小切手を印刷し、適切なアカウントに支払い済みのマークを付けることです。機能ユーザー要件の一部のみが完了している場合 (たとえば、小切手の印刷のみ、または支払い済みとしてマークのみ)、アプリケーションは一貫した状態にありません。アカウントを支払い済みとしてマークせずに小切手を印刷すると、印刷せずに支払い済みとしてマークする場合と同様に、アプリケーションで不整合が発生します。
The graphic presentation of instances can be useful when only a few instances are presented.,インスタンスのグラフィック表示は、少数のインスタンスのみが表示される場合に役立ちます。
"The hardware and software of an embedded system are usually minimized and optimized for specific functions. The embedded system includes at least one microcontroller, microprocessor or digital signal processor. The embedded system designed to optimize reliability, cost, size and power saving for applications.",組み込みシステムのハードウェアとソフトウェアは通常、特定の機能に合わせて最小化され、最適化されます。組み込みシステムには、少なくとも 1 つのマイクロコントローラー、マイクロプロセッサー、またはデジタル信号プロセッサーが含まれます。アプリケーションの信頼性、コスト、サイズ、省電力を最適化するように設計された組み込みシステム。
"the idea that a module has an outside that is distinct from its inside, that it has an external interface and an internal implementation",モジュールには内部とは異なる外部があり、外部インターフェイスと内部実装があるという考え
"The identity is expressed in relevant phenomenological terms. Generally, an interaction identity can be categorized as energy transfer, matter transfer, or information transfer.",アイデンティティは、関連する現象学的用語で表現されます。一般に、相互作用の同一性は、エネルギー伝達、物質伝達、または情報伝達として分類できます。
"The identity of a constant state class instance is represented by #K, where K is an integer or a name.",定常状態クラス インスタンスの ID は #K で表されます。K は整数または名前です。
The implementation is not required to be collocated with the container where the components managed by the home are activated.,この実装は、ホームによって管理されるコンポーネントがアクティブ化されるコンテナーと併置する必要はありません。
the implementation of a dialog by means of a series of interrelated menus and screens,相互に関連する一連のメニューと画面によるダイアログの実装
The implementation of the process is intended to provide tangible benefits to the stakeholders.,このプロセスの実装は、利害関係者に具体的な利益を提供することを目的としています。
The individual or organization acting as developer or acquirer for the target system to be evaluated cannot become the independent evaluator for the system. The independent evaluator can be an organization.,評価対象システムの開発者または取得者として活動する個人または組織は、システムの独立した評価者になることはできません。独立した評価者は組織である場合があります。
"The information can include error indicators, the address of the next instruction to be executed, or currently enabled interrupts.",情報には、エラーインジケータ、実行される次の命令のアドレス、または現在有効になっている割り込みが含まれる場合があります。
"The information concerning an individual risk includes the current description, causes, likelihood, consequences, estimation scales, confidence of the estimates, treatment, threshold, and an estimate of when the risk will reach its threshold.",個々のリスクに関する情報には、現在の説明、原因、可能性、結果、推定スケール、推定の信頼度、治療法、閾値、およびリスクが閾値に達する時期の推定が含まれます。
The initial Ent is typically a record of the first transaction between software licensor and end customer. An initial Ent is a type of primary Ent.,通常、最初の Ent は、ソフトウェア ライセンサーと最終顧客の間の最初のトランザクションの記録です。初期 Ent は、主 Ent の一種です。
The initial investment is shown at the end of period zero.,初期投資は期間 0 の終了時に表示されます。
the initiation of the sending of a message in a messaging system,メッセージング システムでのメッセージの送信の開始
The input from a passive input device must be read either on a polled basis or on demand.,パッシブ入力デバイスからの入力は、ポーリングベースまたはオンデマンドで読み取る必要があります。
The instances in the extensional set correspond to the database and data modeling notion of instance.,拡張セット内のインスタンスは、データベースおよびデータ モデリングのインスタンスの概念に対応します。
"The integrated repository typically includes key data, e.g., schema, models, tools, technical management decisions, process analysis information, requirement changes, process and product metrics, trade-offs and other analyses",統合リポジトリには通常、スキーマ、モデル、ツール、技術管理上の決定、プロセス分析情報、要件の変更、プロセスと製品のメトリクス、トレードオフ、その他の分析などの主要なデータが含まれます。
"The interaction alias is used to indicate identity or compatibility of matching interactions at two ports of a port couple or a port alias. In a port alias, both interactions have the same direction. In a port coupling, the interactions have opposite directions. This provides an element of ""model bookkeeping"" necessary for permitting models developed independently for different units to be integrated into a unified composite model.",インタラクション エイリアスは、ポート カップルまたはポート エイリアスの 2 つのポートでの一致するインタラクションの同一性または互換性を示すために使用されます。ポート エイリアスでは、両方の相互作用は同じ方向になります。ポート結合では、相互作用は反対方向になります。これにより、さまざまなユニット用に個別に開発されたモデルを統合された複合モデルに統合できるようにするために必要な「モデル ブックキーピング」の要素が提供されます。
the internal logical file that is counted for the set of all identifiable and maintainable FPA tables in an application,アプリケーション内のすべての識別可能および保守可能な FPA テーブルのセットとしてカウントされる内部論理ファイル
the iterative process of increasing the level of detail in a project management plan as greater amounts of information and more accurate estimates become available,より多くの情報とより正確な見積もりが利用可能になるにつれて、プロジェクト管理計画の詳細レベルを高める反復プロセス
the knowledge gained during a project which shows how project events were addressed or should be addressed in the future with the purpose of improving future performance,将来のパフォーマンスを向上させる目的で、プロジェクトのイベントがどのように対処されたか、または今後対処されるべきかを示す、プロジェクト中に得られた知識
the language output by an assembler or compiler,アセンブラまたはコンパイラによって出力される言語
the language used to write a computer program,コンピュータープログラムを書くために使用される言語
"the level of an organization's ability to deliver the desired strategic outcomes in a predictable, controllable and reliable manner",予測可能、制御可能、信頼性の高い方法で望ましい戦略的成果を達成する組織の能力のレベル
The LQFP package can be encapsulated in plastic.,LQFP パッケージはプラスチックに封入できます。
"The mapping M from a set D to a set R is total if for every X in D, there is at least one Y in R and pair [X,Y] in M. A property of a class is total, meaning that it will have a value for every instance of the class, unless it is explicitly declared partial.","集合 D から集合 R へのマッピング M は、D 内のすべての X に対して、R に少なくとも 1 つの Y があり、M に [X,Y] のペアが存在する場合、合計になります。クラスのプロパティは合計です。これは、明示的に部分的に宣言されていない限り、クラスのすべてのインスタンスに対して値を持つことを意味します。"
The matrix allocates this weight on the basis of the number of data element types in combination with the number of record types or file types referenced.,マトリックスは、参照されるレコード タイプまたはファイル タイプの数と組み合わせたデータ要素タイプの数に基づいて、この重みを割り当てます。
the mean execution time maximally accepted by the emulated user,エミュレートされたユーザーが最大許容する平均実行時間
"the mean of the probability distribution, the point where the cumulative probability function equals 0.5",確率分布の平均、累積確率関数が 0.5 に等しくなる点
the mean time the maintenance team requires to implement a change and restore the system to working order,メンテナンス チームが変更を実装し、システムを正常な状態に復元するために必要なその間の時間
the mean value of all execution times of tasks of the j-the task type which were submitted within the rating interval,j のタスクのすべての実行時間の平均値 - 評価間隔内に送信されたタスク タイプ
the measure of work performed expressed in terms of the budget authorized for that work,その作業に対して認可された予算の観点から表現された、実行された作業の尺度
"the meetings with prospective sellers prior to the preparation of a bid or proposal to ensure all prospective vendors have a clear and common understanding of the procurement. Also known as contractor conferences, vendor conferences, or pre-bid conferences",すべての見込みベンダーが調達について明確かつ共通の理解を持っていることを確認するため、入札または提案の準備に先立って将来の売り手とのミーティング。請負業者カンファレンス、ベンダーカンファレンス、または入札前カンファレンスとも呼ばれます。
"the members of the project team who are directly involved in project management activities. On some smaller projects, the project management team may include virtually all of the project team members",プロジェクト管理活動に直接関与するプロジェクト チームのメンバー。一部の小規模プロジェクトでは、プロジェクト管理チームに事実上プロジェクト チーム メンバー全員が含まれる場合があります。
"the members of the project team who perform project management activities such as schedule, communications, risk management, etc.",スケジュール、コミュニケーション、リスク管理などのプロジェクト管理活動を実行するプロジェクト チームのメンバー。
the modeling process of placing the primary key of a parent or generic entity in its child or category entity as a foreign key,親または汎用エンティティの主キーをその子またはカテゴリ エンティティに外部キーとして配置するモデリング プロセス
"the modification of an existing application comprising additions, changes and deletions",追加、変更、削除を含む既存のアプリケーションの修正
The modification repairs the software product to satisfy requirements.,修正により、要件を満たすようにソフトウェア製品が修復されます。
the most accurate count to determine the size of an application or a project in which all the specifications needed for FPA are known in detail,FPA に必要なすべての仕様が詳細にわかっているアプリケーションまたはプロジェクトのサイズを決定するための最も正確な数
"the most elementary form of data as seen by the user that serves for controlling, recording, or transferring information",情報の制御、記録、転送に役立つ、ユーザーから見える最も基本的なデータ形式
the most pessimistic of the uncertainty techniques,不確実性手法の中で最も悲観的な手法
"The MR can be classified as a correction or enhancement and identified as corrective, preventive, adaptive, or perfective maintenance. Trouble/problem-reporting documents include incident and problem reports; configuration change control documents include software change requests (SCRs).",MR は修正または強化として分類でき、修正、予防、適応、または完全なメンテナンスとして識別できます。トラブル/問題報告文書には、インシデントおよび問題報告が含まれます。構成変更管理文書には、ソフトウェア変更要求 (SCR) が含まれます。
The N 2 diagram is a matrix structure that graphically displays the bidirectional interrelationships between functions and components in a given system or structure.,N 2 ダイアグラムは、特定のシステムまたは構造内の機能とコンポーネント間の双方向の相互関係をグラフィック表示するマトリックス構造です。
"The name is derived from the usual shape of the graph: a period of decreasing failures (the early-failure period), followed by a relatively steady period (the constant-failure period), followed by a period of increasing failures (the wearout failure period).",この名前は、グラフの通常の形状に由来しています。つまり、故障が減少する期間 (初期故障期間)、その後に比較的安定した期間 (定数故障期間)、その後に故障が増加する期間 (摩耗故障期間) が続きます。
"The number of failures found during testing is an external measure of software quality related to the internal measure, the number of faults present in the computer system. The two measures are not necessarily identical since testing might not find all faults, and a fault can give rise to apparently different failures in different circumstances.",テスト中に見つかった障害の数は、コンピュータ システム内に存在する障害の数である内部尺度に関連するソフトウェア品質の外部尺度です。テストではすべての障害が見つかるとは限らず、障害が異なる状況で明らかに異なる障害を引き起こす可能性があるため、2 つの対策は必ずしも同一であるとは限りません。
"The number of failures found during testing is an external measure of software quality related to the number of faults present in the computer system. The two measures are not necessarily identical since testing does not find all faults, and a fault can give rise to apparently different failures in different circumstances.",テスト中に見つかった障害の数は、コンピュータ システム内に存在する障害の数に関連するソフトウェア品質の外部尺度です。テストではすべての障害が見つかるわけではなく、障害が異なる状況で明らかに異なる障害を引き起こす可能性があるため、2 つの対策は必ずしも同一であるとは限りません。
"The number of failures found during testing is an external measure of the number of faults in the program, because the number of failures is counted during the operation of a computer system running the program. External measures can be used to evaluate quality attributes closer to the ultimate objectives of the design.",障害の数は、プログラムを実行しているコンピュータ システムの動作中にカウントされるため、テスト中に見つかった障害の数は、プログラム内の障害の数の外部測定値となります。外部測定を使用して、設計の最終目標に近い品質特性を評価できます。
"the number of labor units required to complete a schedule activity or work breakdown structure component, often expressed in hours, days or weeks",スケジュール活動または作業分解構造コンポーネントを完了するために必要な労働単位の数。多くの場合、時間、日、または週で表されます。
"The number of lines of code, complexity measures, the number of faults found in a walk through and the Fog Index are all internal measures made on the product itself.",コードの行数、複雑さの測定値、ウォークスルーで見つかった障害の数、および霧指数はすべて、製品自体で行われる内部測定です。
The number of reading references is equal to 0 for all BFC types where it is applicable.,読み取り参照の数は、該当するすべての BFC タイプで 0 に等しくなります。
"the number of software story points, features, functions, user stories, use cases, or requirements completed per work unit (week or iteration)",作業単位 (週またはイテレーション) ごとに完了したソフトウェア ストーリー ポイント、機能、機能、ユーザー ストーリー、ユース ケース、または要件の数
The number of writing references is greater than 0 with all BFC types where it is applicable.,書き込み参照の数は、該当するすべての BFC タイプで 0 より大きくなります。
"The object identifier (OID) is used to show examples of instances with identity, to formalize the notion of identity, and to support the notion in programming languages or database systems.",オブジェクト識別子 (OID) は、アイデンティティを持つインスタンスの例を示し、アイデンティティの概念を形式化し、プログラミング言語やデータベース システムでその概念をサポートするために使用されます。
The objective is expressed as a contract which specifies how the objective can be met.,目的は、その目的を達成する方法を指定する契約として表現されます。
"The one-box A-0 context diagram is a required context diagram; those with diagram numbers A-1, A-2, …, are optional context diagrams.",ワンボックス A-0 コンテキスト ダイアグラムは必須のコンテキスト ダイアグラムです。図番号 A-1、A-2、… が付いたものは、オプションのコンテキスト図です。
The only box that can be numbered 0 is the box that represents the A0 function in A-0 and A-1 context diagram,0 の番号を付けることができる唯一のボックスは、A-0 および A-1 コンテキスト図の A0 関数を表すボックスです。
"the only context diagram that is required for a valid IDEF0 model, the A-0 diagram contains one box, which represents the top-level function being modeled, the inputs, controls, outputs, and mechanisms attached to this box, the full model name, the model name abbreviation, the model's purpose statement, and the model's viewpoint statement",有効な IDEF0 モデルに必要な唯一のコンテキスト ダイアグラム。A-0 ダイアグラムには、モデル化されている最上位関数、このボックスに接続されている入力、制御、出力、メカニズム、完全なモデル名、モデル名の略称、モデルの目的ステートメント、およびモデルの視点ステートメントを表す 1 つのボックスが含まれています。
The operating system is upgraded and some changes are made to accommodate the new operating system.,オペレーティング システムがアップグレードされ、新しいオペレーティング システムに対応するためにいくつかの変更が加えられます。
"The operational concept is designed to give an overall picture of the operations using one or more specific systems, or set of related systems, in the organization's operational environment from the users' and operators' perspective.",運用コンセプトは、組織の運用環境内で 1 つ以上の特定のシステムまたは一連の関連システムを使用した運用の全体像を、ユーザーとオペレータの観点から示すように設計されています。
The operations applicable to the subtype are the same as those of the original data type.,サブタイプに適用される操作は、元のデータ型の操作と同じです。
"The organizational framework whose structure provides the policies, processes, procedures, and resources required to implement the quality management plan. The typical project quality management plan should be compatible to the organization's quality management system",品質管理計画を実施するために必要なポリシー、プロセス、手順、およびリソースを提供する構造を備えた組織フレームワーク。一般的なプロジェクトの品質管理計画は、組織の品質管理システムと互換性がある必要があります。
"The outcome can be a loss or a benefit, or neither, and can be expressed qualitatively or quantitatively.",結果は損失か利益か、あるいはどちらでもない可能性があり、定性的または定量的に表現できます。
The output medium used is not relevant for FPA and it can pertain to both an external output and an external inquiry.,使用される出力媒体は FPA には関係なく、外部出力と外部問い合わせの両方に関係します。
"The package includes evaluation methods and techniques, input to be evaluated, data to be measured and collected, and supporting procedures and tools.",パッケージには、評価方法と技術、評価対象のインプット、測定および収集対象のデータ、およびサポート手順とツールが含まれています。
"The page reference incorporates a diagram reference to the associated diagram, the type of page, and any sequencing data needed to distinguish different pages of the same type that are associated with the same diagram.",ページ参照には、関連する図への図参照、ページのタイプ、および同じ図に関連付けられている同じタイプの異なるページを区別するために必要なシーケンス データが組み込まれています。
The parameters for counting are configured programmatically.,カウントのパラメータはプログラムで構成されます。
The PDPC is used to understand a goal in relation to the steps for getting to the goal,PDPC は、目標に到達するためのステップと関連して目標を理解するために使用されます。
"the performance data collected from various controlling processes, analyzed in context and integrated based on relationships across areas",さまざまな制御プロセスから収集され、状況に応じて分析され、領域間の関係に基づいて統合されたパフォーマンス データ
the person assigned by the performing organization to lead the team that is responsible for achieving the project objectives,プロジェクトの目標を達成する責任を負うチームを率いるために、実行組織によって任命された人
the person or organization that owns the intellectual property rights for the FSM method,FSM メソッドの知的財産権を所有する個人または組織
the person or organization that requires the verification to be performed and provides financial or other resources to carry it out,検証の実行を要求し、検証を実行するための財政的またはその他のリソースを提供する個人または組織
the person or organization that will use the project's product or service or result,プロジェクトの製品、サービス、または結果を使用する個人または組織
the physical form that information can take and that an application distributes,情報が取り得る物理的な形式、およびアプリケーションが配布する物理的な形式
"the physical or electronic representation of work performance information compiled in project documents, intended to generate decisions, actions, or awareness",意思決定、行動、認識を生み出すことを目的とした、プロジェクト文書にまとめられた作業パフォーマンス情報の物理的または電子的表現
The platform provider is typically the vendor of the relevant operating system or virtual environment.,プラットフォーム プロバイダーは通常、関連するオペレーティング システムまたは仮想環境のベンダーです。
The plural is VSEs (very small entities),複数形は VSE (非常に小さなエンティティ)
"The predicates constrain the possible states and state changes of the objects to which they apply. Thus, an invariant schema is the specification of the types of one or more information objects that will always be satisfied by whatever behavior the objects might exhibit.",述語は、述語が適用されるオブジェクトの可能な状態と状態変化を制限します。したがって、不変スキーマは、オブジェクトが示すどのような動作によっても常に満たされる 1 つまたは複数の情報オブジェクトのタイプの仕様です。
The primary goal of risk management is to identify and respond to potential problems with sufficient lead-time to avoid a crisis situation. Includes initial identification and handling of risk factors as well as continuous risk management.,リスク管理の主な目標は、潜在的な問題を特定し、十分なリードタイムで対応して危機的状況を回避することです。リスク要因の初期特定と処理、および継続的なリスク管理が含まれます。
The primary intent of an EI is to maintain one or more ILFs and/or to alter the behavior of the system. An external input is a type of base functional component.,EI の主な目的は、1 つ以上の ILF を維持すること、および/またはシステムの動作を変更することです。外部入力は、基本機能コンポーネントの一種です。
The primary intent of an EIF is to hold data referenced through one or more elementary processes within the boundary of the application counted. This means an EIF counted for an application must be in an ILF in another application. An external interface file is a type of base functional component.,EIF の主な目的は、アプリケーションの境界内で 1 つ以上の基本プロセスを通じて参照されるデータをカウントしたまま保持することです。これは、アプリケーションに対してカウントされる EIF は、別のアプリケーションの ILF 内に存在する必要があることを意味します。外部インターフェイス ファイルは、基本機能コンポーネントの一種です。
"The primary intent of an external inquiry is to present information to a user through the retrieval of data or control information from an ILF or EIF. The processing logic contains no mathematical formulas or calculations, and creates no derived data. No ILF is maintained during the processing, nor is the behavior of the system altered. An external inquiry is a type of base functional component.",外部問い合わせの主な目的は、ILF または EIF からのデータまたは制御情報の取得を通じてユーザーに情報を提示することです。処理ロジックには数式や計算は含まれず、派生データは作成されません。処理中に ILF は維持されず、システムの動作も変更されません。外部問い合わせは、基本機能コンポーネントの一種です。
"The primary intent of an external output is to present information to a user through processing logic other than, or in addition to, the retrieval of data or control information. The processing logic must contain at least one mathematical formula or calculation, or create derived data. An external output can also maintain one or more ILFs and/or alter the behavior of the system. An external output is a type of base functional component.",外部出力の主な目的は、データまたは制御情報の取得以外の、またはそれに加えて、処理ロジックを通じてユーザーに情報を提示することです。処理ロジックには、少なくとも 1 つの数式または計算が含まれるか、派生データを作成する必要があります。外部出力は、1 つ以上の ILF を維持したり、システムの動作を変更したりすることもできます。外部出力は、基本機能コンポーネントの一種です。
The primary intent of an ILF is to hold data maintained through one or more elementary processes of the application being counted. An internal logical file is a type of base functional component.,ILF の主な目的は、カウントされるアプリケーションの 1 つ以上の基本プロセスを通じて維持されるデータを保持することです。内部論理ファイルは、基本機能コンポーネントの一種です。
the primary vehicle through which a component exposes its functional application behavior to clients during normal execution,通常の実行中にコンポーネントがその機能的なアプリケーションの動作をクライアントに公開するための主要な手段
"The probability is a function of the inputs to and use of the system as well as a function of the existence of faults in the software. The inputs to the system determine whether existing faults, if any, are encountered.",確率は、システムへの入力とシステムの使用の関数であるだけでなく、ソフトウェア内の障害の存在の関数でもあります。システムへの入力によって、既存の障害が発生するかどうかが決まります。
"The procedures ensure that the validity of changes is confirmed, that the effects on other items are examined, and that those people concerned with the development are notified of the changes.",この手順により、変更の妥当性が確認され、他の項目への影響が検討され、開発関係者に変更が通知されます。
the process and activities to resolving disputes through consultations between involved parties,当事者間の協議による紛争解決の過程および活動
"The process involves translating user needs into software requirements, transforming the software requirements into design, implementing the design in code, testing the code, and sometimes, installing and checking out the software for operational use. These activities can overlap or be performed iteratively.",このプロセスには、ユーザーのニーズをソフトウェア要件に変換し、ソフトウェア要件を設計に変換し、設計をコードに実装し、コードをテストし、場合によっては運用用にソフトウェアをインストールしてチェックアウトすることが含まれます。これらのアクティビティは重複したり、繰り返し実行したりできます。
the process of aggregating the estimated costs of individual activities or work packages to establish an authorized cost baseline,個々の活動または作業パッケージの推定コストを集計して、承認されたコストのベースラインを確立するプロセス
"the process of analyzing activity sequences, durations, resource requirements, and schedule constraints to create the project schedule model",アクティビティの順序、期間、リソース要件、スケジュールの制約を分析してプロジェクトのスケジュール モデルを作成するプロセス
the process of approximating the number of work periods needed to complete individual activities with estimated resources,推定されたリソースを使用して個々のアクティビティを完了するために必要な作業期間数を概算するプロセス
the process of auditing the quality requirements and the results from quality control measurements to ensure that appropriate quality standards and operational definitions are used,適切な品質基準と運用定義が使用されていることを確認するために、品質要件と品質管理測定の結果を監査するプロセス
"the process of communicating and working with stakeholders to meet their needs / expectations, address issues as they occur, and foster appropriate stakeholder engagement in project activities throughout the project life cycle",ステークホルダーのニーズや期待に応え、発生した問題に対処し、プロジェクトのライフサイクル全体を通じてプロジェクト活動へのステークホルダーの適切な関与を促進するために、ステークホルダーとコミュニケーションを取り、協力するプロセス。
the process of comparing the planned expenditure of project funds against any limits on the commitment of funds for the project to identify any variances between the funding limits and the planned expenditures,プロジェクト資金の計画支出をプロジェクトの資金コミットメントの制限と比較して、資金制限と計画支出の間の差異を特定するプロセス
the process of completing each project procurement,各プロジェクトの調達を完了するプロセス
the process of confirming human resource availability and obtaining the team necessary to complete project activities,人材の空き状況を確認し、プロジェクト活動を完了するために必要なチームを確保するプロセス
"the process of creating a scope management plan that documents how the project scope will be defined, validated, and controlled",プロジェクトのスコープをどのように定義、検証、制御するかを文書化するスコープ管理計画を作成するプロセス
"the process of creating, collecting, distributing, storing, retrieving and the ultimate disposition of project information in accordance to the Communications Management Plan",コミュニケーション管理計画に従ったプロジェクト情報の作成、収集、配布、保存、取得、および最終的な処分のプロセス
the process of defining how to conduct risk management activities for a project,プロジェクトのリスク管理活動の実施方法を定義するプロセス
"the process of defining, preparing, and coordinating all subsidiary plans and integrating them into a comprehensive project management plan",すべての補助計画を定義、準備、調整し、それらを包括的なプロジェクト管理計画に統合するプロセス
the process of determining which risks may affect the project and documenting their characteristics,どのリスクがプロジェクトに影響を与える可能性があるかを判断し、その特徴を文書化するプロセス
"the process of determining, documenting, and managing stakeholder needs and requirements to meet project objectives",プロジェクトの目的を達成するために、利害関係者のニーズと要件を決定、文書化、管理するプロセス
the process of developing a detailed description of the project and product,プロジェクトと製品の詳細な説明を作成するプロセス
the process of developing a document that formally authorizes the existence of a project and provides the project manager with the authority to apply organizational resources to project activities,プロジェクトの存在を正式に承認し、組織リソースをプロジェクト活動に適用する権限をプロジェクト マネージャーに提供する文書を作成するプロセス。
"the process of developing an appropriate approach and plan for project communications based on stakeholder's information needs and requirements, and available organizational assets",利害関係者の情報ニーズと要件、および利用可能な組織資産に基づいて、プロジェクトコミュニケーションのための適切なアプローチと計画を策定するプロセス
the process of developing an approximation of the monetary resources needed to complete project activities,プロジェクト活動を完了するために必要なおおよその金銭的資源を策定するプロセス
"the process of developing appropriate management strategies to effectively engage stakeholders throughout the project life cycle, based on the analysis of their needs, interests, and potential impact on project success",ステークホルダーのニーズ、関心、プロジェクトの成功に対する潜在的な影響の分析に基づいて、プロジェクトのライフサイクル全体を通じてステークホルダーを効果的に関与させるための適切な管理戦略を開発するプロセス
the process of developing options and actions to enhance opportunities and to reduce threats to project objectives,機会を増やし、プロジェクト目標に対する脅威を軽減するためのオプションと行動を開発するプロセス
"the process of documenting project procurement decisions, specifying the approach, and identifying potential sellers",プロジェクトの調達決定を文書化し、アプローチを指定し、潜在的な売り手を特定するプロセス
"the process of establishing and enforcing strategic goals and objectives, organizational policies, and performance parameters",戦略的目標と目標、組織ポリシー、およびパフォーマンスパラメータを確立および実行するプロセス
"the process of establishing the policies, procedures, and documentation for planning, developing, managing, executing, and controlling the project schedule",プロジェクトのスケジュールを計画、開発、管理、実行、制御するためのポリシー、手順、文書を確立するプロセス
"the process of estimating the type and quantities of material, people, equipment or supplies required to perform each activity",各活動を実行するために必要な材料、人材、設備、または消耗品の種類と数量を見積もるプロセス
the process of evaluating scenarios in order to predict their effect on project objectives,プロジェクト目標への影響を予測するためにシナリオを評価するプロセス
the process of finalizing all activities across all of the project management process groups to formally complete a project or phase,プロジェクトまたはフェーズを正式に完了するために、すべてのプロジェクト管理プロセス グループにわたるすべてのアクティビティを最終処理するプロセス
the process of formalizing acceptance of the completed project deliverables,完了したプロジェクトの成果物を正式に受け入れるプロセス
the process of gathering a corpus of information and reviewing it to determine accuracy and completeness,情報のコーパスを収集し、それをレビューして正確さと完全性を判断するプロセス
the process of gathering and organizing data about product requirements and analyzing them against available alternatives including the purchase or internal manufacture of the product,製品要件に関するデータを収集および整理し、製品の購入や社内製造などの利用可能な代替案と照らし合わせて分析するプロセス
"the process of gathering information at conferences, online reviews and a variety of sources to identify market capabilities",市場の可能性を特定するために、カンファレンス、オンラインレビュー、さまざまな情報源で情報を収集するプロセス
"the process of identifying and documenting project roles, responsibilities, required skills, reporting relationships, and creating a staffing management plan",プロジェクトの役割、責任、必要なスキル、報告関係を特定して文書化し、人員配置管理計画を作成するプロセス
the process of identifying and documenting relationships among the project activities,プロジェクト活動間の関係を特定し文書化するプロセス
"the process of identifying quality requirements and/or standards for the project and its deliverables, and documenting how the project will demonstrate compliance with quality requirements",プロジェクトとその成果物の品質要件や基準を特定し、プロジェクトが品質要件への準拠をどのように実証するかを文書化するプロセス
"the process of identifying the people, groups or organizations that could impact or be impacted by a decision, activity or outcome of the project, analyzing and documenting relevant information regarding their interests, involvement, interdependencies, influence, and potential impact on project success",プロジェクトの意思決定、活動、結果に影響を与える可能性がある、または影響を受ける可能性のある人、グループ、または組織を特定し、その関心、関与、相互依存関係、プロジェクトの成功に対する影響、および潜在的な影響に関する関連情報を分析および文書化するプロセス
the process of identifying the specific actions to be performed to produce the project deliverables,プロジェクトの成果物を作成するために実行する特定のアクションを特定するプロセス
"the process of implementing risk response plans, tracking identified risks, monitoring residual risks, identifying new risks, and evaluating risk process effectiveness throughout the project",リスク対応計画の実施、特定されたリスクの追跡、残留リスクの監視、新たなリスクの特定、およびプロジェクト全体にわたるリスク プロセスの有効性の評価のプロセス
"the process of improving the competencies, team interaction, and the overall team environment to enhance project performance",プロジェクトのパフォーマンスを向上させるために、能力、チームの相互作用、チーム環境全体を改善するプロセス
the process of leading and performing the work defined in the project management plan and implementing approved changes to achieve the project's objectives,プロジェクト管理計画で定義された作業を主導して実行し、プロジェクトの目的を達成するために承認された変更を実装するプロセス
"the process of managing procurement relationships, monitoring contract performance, and making changes and corrections as appropriate",調達関係を管理し、契約履行を監視し、必要に応じて変更や修正を行うプロセス
the process of measuring functional size,機能的なサイズを測定するプロセス
the process of monitoring and controlling communications throughout the entire project life cycle to ensure the information needs of the project stakeholders are met,プロジェクトのステークホルダーの情報ニーズが満たされていることを確認するために、プロジェクトのライフサイクル全体を通じて通信を監視および制御するプロセス
The process of monitoring and recording results of executing the quality activities to assess performance and recommend necessary changes,パフォーマンスを評価し、必要な変更を推奨するために、品質活動の実行結果を監視および記録するプロセス
the process of monitoring overall project stakeholder relationships and adjusting strategies and plans for engaging stakeholders,プロジェクト全体の利害関係者の関係を監視し、利害関係者を関与させるための戦略と計画を調整するプロセス
the process of monitoring the status of project activities to update project progress and manage changes to the schedule baseline to achieve the plan,プロジェクト活動のステータスを監視して、プロジェクトの進捗状況を更新し、計画を達成するためのスケジュール ベースラインの変更を管理するプロセス
the process of monitoring the status of the project and product scope and managing changes to the scope baseline,プロジェクトと製品スコープのステータスを監視し、スコープのベースラインへの変更を管理するプロセス
the process of monitoring the status of the project to update the project costs and managing changes to the cost baseline,プロジェクトのステータスを監視してプロジェクトコストを更新し、コストベースラインの変更を管理するプロセス
the process of numerically analyzing the effect of identified risks on overall project objectives,特定されたリスクがプロジェクト全体の目標に及ぼす影響を数値的に分析するプロセス
"the process of obtaining seller responses, selecting a seller, and awarding a contract",販売者の応答を取得し、販売者を選択し、契約を締結するプロセス
the process of prioritizing risks for further analysis or action by assessing and combining their probability of occurrence and impact,リスクの発生確率と影響を評価および組み合わせることにより、さらなる分析またはアクションのためにリスクに優先順位を付けるプロセス
"the process of processing, adjudicating, and communicating contract claims",契約上の請求を処理、裁定、伝達するプロセス
"the process of reaching final equitable settlement of all outstanding issues, claims, and disputes through negotiation",交渉を通じてすべての未解決の問題、請求、紛争を最終的に公平に解決するプロセス
"the process of reviewing all change requests, approving changes, and managing changes to deliverables, organizational process assets, project documents, and the project management plan, and communicating their disposition",すべての変更リクエストをレビューし、変更を承認し、成果物、組織プロセス資産、プロジェクト文書、プロジェクト管理計画への変更を管理し、その方針を伝達するプロセス
the process of reviewing proposals provided by suppliers to support contract award decisions,契約締結の決定をサポートするためにサプライヤーから提供された提案を検討するプロセス
"the process of subdividing project deliverables and project work into smaller, more manageable components",プロジェクトの成果物とプロジェクトの作業を、より小さく管理しやすいコンポーネントに細分化するプロセス
"the process of tracking team member performance, providing feedback, resolving issues, and managing team changes to optimize project performance",チームメンバーのパフォーマンスを追跡し、フィードバックを提供し、問題を解決し、プロジェクトのパフォーマンスを最適化するためにチームの変更を管理するプロセス
"the process of tracking, reviewing, and regulating the progress to meet the performance objectives defined in the project management plan",プロジェクト管理計画で定義されたパフォーマンス目標を達成するために、進捗状況を追跡、レビュー、および調整するプロセス
"the process that establishes the policies, procedures, and documentation for planning, managing, expending, and controlling project costs",プロジェクトのコストを計画、管理、支出、制御するためのポリシー、手順、文書を確立するプロセス
"The product baseline prescribes all necessary physical (form, fit, or function) characteristics and selected functional characteristics designated for production acceptance testing and production test requirements.",製品ベースラインは、必要なすべての物理的 (形状、フィット感、または機能) 特性と、製造受け入れテストおよび製造テスト要件に指定された選択された機能特性を規定します。
The product description is not a specification; it serves a different purpose.,製品説明は仕様ではありません。それは別の目的に役立ちます。
"the project plan, supporting process requirements, design documentation, source code, test plans, meeting minutes, schedules, budgets, and problem reports",プロジェクト計画、サポートプロセス要件、設計文書、ソースコード、テスト計画、会議議事録、スケジュール、予算、および問題レポート
"The project risk profile information includes the risk management context, along with the chronological record of risks and their individual risk profiles, priority ordering, risk-related measures, treatment status, contingency plans, and risk action requests. A project risk profile consists of a collection of the risk profiles of all the individual risks, which in turn includes the current and historical risk states.",プロジェクトのリスク プロファイル情報には、リスク管理のコンテキストに加えて、リスクとその個別のリスク プロファイルの時系列記録、優先順位、リスク関連対策、治療状況、緊急時対応計画、リスク対応要求が含まれます。プロジェクトのリスク プロファイルは、すべての個別リスクのリスク プロファイルの集合で構成され、これには現在および過去のリスク状態が含まれます。
"the projected cost of the schedule activity that includes the cost for all resources required to perform and complete the activity, including all cost types and cost components",スケジュールアクティビティの予測コスト。これには、すべてのコストタイプとコストコンポーネントを含む、アクティビティを実行および完了するために必要なすべてのリソースのコストが含まれます。
"The purpose of audience research is to determine the abilities, training, experience, limitations, prejudices and preferences of the intended readers of a document.",読者調査の目的は、文書の対象読者の能力、訓練、経験、限界、偏見、好みを判断することです。
the quantified description of acceptable variation for a quality requirement,品質要件の許容可能な変動の定量化された説明
the quotient (corresponding to the j-th task type) of the mean execution time reference value and the measured mean execution time,平均実行時間基準値と測定された平均実行時間の商（j番目のタスクタイプに相当）
"the rate of current work unit completion, measured as work units completed per fixed time period, such as story points, delivered features, functions, function points, user stories, use cases, or requirements completed in a given time period. Used as a measure of burndown rate or burnup rate",現在の作業単位の完了率。ストーリー ポイント、提供された機能、関数、ファンクション ポイント、ユーザー ストーリー、ユース ケース、または一定期間内に完了した要件など、一定期間ごとに完了した作業単位として測定されます。バーンダウン率または燃焼率の尺度として使用されます。
"The rating level enables software product to be classified (rated) in accordance with the stated or implied needs. Appropriate rating levels can be associated with the different views of quality, i.e., Users', Managers,' or Developers.'",評価レベルにより、明示的または黙示的なニーズに従ってソフトウェア製品を分類 (評価) できます。適切な評価レベルは、品質に対するさまざまな観点 (ユーザー、マネージャー、開発者など) に関連付けることができます。
the raw observations and measurements identified during activities being performed to carry out the project work,プロジェクト作業を実行するために実行される活動中に特定された生の観察と測定
the reactive modification of a software product performed after delivery to correct discovered problems,発見された問題を修正するために納品後に実行されるソフトウェア製品の事後的な修正
"The realization states ""how"" a responsibility is met; it is the statement of the responsibility's method. Realization consists of any necessary representation properties together with the algorithm (if any). A realization can involve representation properties or an algorithm, or both. For example, an attribute typically has only a representation and no algorithm. An algorithm that is a ""pure algorithm"" (i.e., without any representation properties) uses only literals; it does not ""get"" any values as its inputs. Finally, a derived attribute or operation typically has both an algorithm and representation properties.",実現は、責任が「どのように」果たされるかを示します。それは責任の方法の記述です。実現は、必要な表現プロパティとアルゴリズム (存在する場合) で構成されます。実現には、表現プロパティまたはアルゴリズム、またはその両方が含まれる場合があります。たとえば、属性には通常、表現のみが含まれ、アルゴリズムは含まれません。 「純粋なアルゴリズム」（つまり、表現プロパティをまったく持たない）であるアルゴリズムは、リテラルのみを使用します。入力として値を「取得」しません。最後に、派生属性または操作には通常、アルゴリズムと表現の両方のプロパティがあります。
the realized cost incurred for the work performed on an activity during a specific time period,特定の期間中にアクティビティで実行された作業に発生した実現コスト
"The record of an issue includes its identifier and brief description, and often identifies the environment associated with it, its status, severity, priority, and resolution, as well as dependencies, details on replicating or solving a problem, the persons associated with it, attachments, and its change history.",問題の記録には、その識別子と簡単な説明が含まれており、多くの場合、問題に関連する環境、ステータス、重大度、優先度、解決策に加えて、依存関係、問題の複製または解決に関する詳細、それに関連する人物、添付ファイル、変更履歴も特定されます。
"The related process description and plan are coordinated, and the plan can include standards, requirements, objectives, resources, and assignments.",関連するプロセスの説明と計画が調整され、計画には標準、要件、目標、リソース、割り当てを含めることができます。
"the relative measure of the effort needed to develop a user story, compared with what is considered a typical user story by the project team",ユーザー ストーリーの開発に必要な労力の相対的な尺度。プロジェクト チームが典型的なユーザー ストーリーとみなしているものと比較したもの。
"The release engineer will monitor pending issues for a given release, oversee the code freeze, and tag the release once it gets out the door.",リリース エンジニアは、特定のリリースの保留中の問題を監視し、コードのフリーズを監視し、リリースがリリースされるとタグを付けます。
"The requirements can be formally specified, as when a product is developed for a specific user under a contract, or specified by the development organization, as when a product is developed for unspecified users, such as consumer software, or the requirements may be more general, as when a user evaluates products for comparison and selection purposes.",要件は、製品が契約に基づいて特定のユーザー向けに開発される場合のように形式的に指定されることもあれば、コンシューマ ソフトウェアなどの不特定のユーザー向けに製品が開発される場合のように開発組織によって指定される場合もあり、また、要件は、ユーザーが比較および選択の目的で製品を評価する場合のように、より一般的な場合もあります。
The responsibilities of a subject domain are an aggregation of the responsibilities of a set of current or potential named classes. A subject domain can also contain other subject domains. A subject domain encapsulates the detail of a view.,サブジェクト ドメインの責任は、現在または潜在的な名前付きクラスのセットの責任を集約したものです。サブジェクト ドメインには、他のサブジェクト ドメインを含めることもできます。サブジェクト ドメインはビューの詳細をカプセル化します。
The result is not necessarily the same as that shown in a call graph.,結果は、コール グラフに表示されるものと必ずしも同じではありません。
The result is not necessarily the same as that shown in a structure chart.,結果は構造図に示されるものと必ずしも同じではありません。
the result of defining a collection of hardware and software components and their interfaces to establish the framework for the development of a computer system,コンピュータ システム開発のフレームワークを確立するために、ハードウェアおよびソフトウェア コンポーネントとそれらのインターフェイスの集合を定義した結果
"The resulting formal requirements can be proven ""correct"" through proof-of-correctness methods",結果として得られる形式的要件は、正しさの証明方法によって「正しい」ことを証明できます。
"the review of contracts and contracting processes for completeness, accuracy and effectiveness",完全性、正確性、有効性に関する契約および契約プロセスのレビュー
"the right to apply project resources, expend funds, make decisions, or give approvals",プロジェクトのリソースを適用し、資金を支出し、決定を下し、または承認を与える権利
"The risk register details all identified risks, including description, category, cause, probability of occurring, impact(s) on objectives, proposed responses, owners, and current status. It can be kept in a database.",リスク登録には、説明、カテゴリ、原因、発生確率、目的への影響、提案された対応、所有者、現在のステータスなど、特定されたすべてのリスクの詳細が記載されます。データベースに保存できます。
"The role of operator and the role of user can be vested, simultaneously or sequentially, in the same individual or organization. An individual operator combined with knowledge, skills and procedures can be considered as an element of the system. An operator can perform operations on a system that is operated, or of a system that is operated, depending on whether or not operating instructions are placed within the system boundary.",オペレーターの役割とユーザーの役割は、同じ個人または組織に同時にまたは順次に付与できます。知識、スキル、手順を組み合わせた個々のオペレーターは、システムの要素と見なすことができます。オペレータは、操作命令がシステム境界内に配置されているかどうかに応じて、操作されているシステム、または操作されているシステム上で操作を実行できます。
"The same form of binding endpoint identifier can be used, whether the binding involved is either local or distributed.",関連するバインディングがローカルであるか分散であるかに関係なく、同じ形式のバインディング エンドポイント識別子を使用できます。
The SCI exists where functional allocations have been made that clearly distinguish equipment functions from software functions and where the software has been established as a configurable item.,SCI は、機器の機能とソフトウェアの機能を明確に区別する機能割り当てが行われ、ソフトウェアが構成可能なアイテムとして確立されている場所に存在します。
"The scope of the application portfolio can be the entire portfolio of that application management organization, but it can also be the applications of one or some customer organizations of entity within part of a certain customer organization.",アプリケーション ポートフォリオの範囲は、そのアプリケーション管理組織のポートフォリオ全体である場合もありますが、特定の顧客組織の一部内のエンティティの 1 つまたはいくつかの顧客組織のアプリケーションである場合もあります。
The Scope of the FSM is determined by the purpose for measuring the software.,FSM の範囲は、ソフトウェアを測定する目的によって決まります。
The scrum meeting is usually chaired by the scrum master.,スクラム ミーティングは通常、スクラム マスターが議長を務めます。
The security authority is the controlling object for the security domain.,セキュリティ権限は、セキュリティ ドメインの制御オブジェクトです。
the sellers which have been selected to provide a contracted set of services or products,契約された一連のサービスまたは製品を提供するために選択された販売者
"The Semantic Transfer Language has a formal syntax that is computer-parsable, while remaining easy for users to read and write.",セマンティック転送言語は、コンピュータで解析可能な正式な構文を備えていますが、ユーザーにとっては読み書きが容易です。
"the sequence of activities that represents the longest path through a project, which determines the shortest possible duration",プロジェクト全体の最長のパスを表すアクティビティのシーケンス。これによって可能な限り最短の期間が決定されます。
the series of phases that a project passes through from its initiation to its closure,プロジェクトが開始から終了まで通過する一連の段階
"the series of phases that represent the evolution of a product, from concept through delivery, growth, maturity, to retirement",コンセプトから提供、成長、成熟、廃止に至るまでの製品の進化を表す一連の段階
The server-side can confirm or reject the proposal or suggest an alternative server-side that is capable o handling requests.,サーバー側は提案を確認または拒否したり、リクエストを処理できる代​​替サーバー側を提案したりできます。
the set of 19 factors that are taken into account in the technical complexity adjustment (TCA),技術的複雑さの調整 (TCA) で考慮される 19 の要素のセット
"The set of control structures typically includes: sequence of two or more instructions, conditional selection of one of two or more sequences of instructions, and repetition of a sequence of instructions.",制御構造のセットには通常、2 つ以上の命令のシーケンス、2 つ以上の命令のシーケンスのうちの 1 つの条件付き選択、および命令のシーケンスの繰り返しが含まれます。
the set of files associated with a specific set of business functionalities that can be installed on a computing device and has a set of specific licensing requirements,コンピューティング デバイスにインストールでき、一連の特定のライセンス要件を持つ特定のビジネス機能セットに関連付けられたファイルのセット
the set of functional user requirements to be included in a specific FSM instance,特定の FSM インスタンスに含まれる一連の機能ユーザー要件
the set of functions required by the commissioning user of the application software product (excluding any technical and quality requirements),アプリケーションソフトウェア製品のコミッショニングユーザーが必要とする一連の機能（技術的および品質的要件を除く）
the set of the place markings for all places of the net,ネットのすべての場所の場所マークのセット
"the set of user required data element types and their logical structure as defined for an output product, apart from aspects of physical implementation",物理的な実装の側面とは別に、出力製品用に定義された、ユーザーが必要とするデータ要素タイプのセットとその論理構造
the size of a development project or an enhancement project expressed in function points,ファンクションポイントで表される開発プロジェクトまたは機能強化プロジェクトのサイズ
the size of an application expressed in function points,ファンクションポイントで表されるアプリケーションのサイズ
"The smallest complete unit of information processing that is meaningful to the end user in the business. It is triggered by an event in the real world of interest to the user, or by a request for information. It comprises an input, process and output component. It must be self-contained and leave the application being counted in a consistent state",ビジネスにおけるエンドユーザーにとって意味のある情報処理の最小完全単位。これは、ユーザーが関心のある現実世界のイベント、または情報の要求によってトリガーされます。これは、入力、プロセス、出力コンポーネントで構成されます。自己完結型であり、アプリケーションが一貫した状態でカウントされるようにする必要があります。
"The SMS includes all service management policies, objectives, plans, processes, documentation and resources required for the design, transition, delivery and improvement of services and to fulfill the requirements.",SMS には、サービスの設計、移行、提供、改善、および要件を満たすために必要なすべてのサービス管理ポリシー、目的、計画、プロセス、文書およびリソースが含まれています。
The software cannot be readily modified under program control.,ソフトウェアはプログラム制御下では容易に変更できません。
The software design description is used as a medium for communicating software design information and can be thought of as a blueprint or model of the system.,ソフトウェア設計記述は、ソフトウェア設計情報を伝達するための媒体として使用され、システムの青写真またはモデルと考えることができます。
The software quality characteristics or subcharacteristics of the entity are derived afterwards by calculating a software quality measure.,エンティティのソフトウェア品質特性またはサブ特性は、後でソフトウェア品質尺度を計算することによって導出されます。
"The specification of a measurand involves statements about quantities such as time, temperature and pressure.",測定量の仕様には、時間、温度、圧力などの量に関する記述が含まれます。
The specifications are completed by the values specified in the rules,仕様はルールで指定された値によって完成します
"The stakeholder management plan is a subsidiary plan of the project management plan that defines the processes, procedures, tools and techniques to effectively engage stakeholders in project decisions and execution based on the analysis of their needs, interests and potential impact.",ステークホルダー管理計画は、プロジェクト管理計画の補助的な計画であり、ステークホルダーのニーズ、利益、潜在的な影響の分析に基づいて、プロジェクトの決定と実行にステークホルダーを効果的に関与させるためのプロセス、手順、ツール、およびテクニックを定義します。
"The starting address is established by the loader, which then adjusts the addresses in the code to reflect the storage locations into which the code has been loaded.",開始アドレスはローダーによって確立され、ローダーはコード内のアドレスを調整して、コードがロードされた記憶場所を反映します。
"The statement ""each project funds one or more tasks"" could be derived from a relationship showing ""project"" as the first class, ""task"" as the second class with a ""one or more"" cardinality, and ""funds"" as the verb phrase.",「各プロジェクトは 1 つ以上のタスクに資金を提供する」というステートメントは、「プロジェクト」を最初のクラスとして、「タスク」を「1 つ以上」のカーディナリティを持つ 2 番目のクラスとして、そして「資金」を動詞句として示す関係から導き出すことができます。
"The statement of responsibility is written from the point of view of the requester, not the implementer. The statement of responsibility states what the requester needs to know to make intelligent use of the property or constraint. That statement is complete enough to let a requester decide whether to make the request, but it stops short of explaining how a behavior or value is accomplished or derived. Meaning is initially captured using freeform natural language text in a glossary definition. It can be more formally refined into a statement of pre-conditions and post-conditions using the specificatio language.",責任声明は、実装者ではなく、要求者の観点から書かれています。責任声明には、プロパティまたは制約をインテリジェントに使用するために要求者が知っておく必要があることが記載されています。このステートメントは、要求者が要求を行うかどうかを決定できる程度には十分ですが、動作や値がどのように達成または導出されるかを説明するまでには至っていません。意味は、用語集の定義で自由形式の自然言語テキストを使用して最初に取得されます。仕様言語を使用して、より形式的に事前条件と事後条件のステートメントに洗練することができます。
the sum of all the budgets established for the work to be performed,実行される作業に対して設定されたすべての予算の合計
"the sum of the products, services, and results to be provided as a project",プロジェクトとして提供する製品、サービス、成果の合計
"The SUT consists of hardware, system software, data communication features, or application software, or a combination of them.",SUT は、ハードウェア、システム ソフトウェア、データ通信機能、アプリケーション ソフトウェア、またはそれらの組み合わせで構成されます。
The syntax used for URIs is defined in IETF RFC 3986.,URI に使用される構文は IETF RFC 3986 で定義されています。
"The system provides questions, forms, and so on, to aid the user in expressing the results to be achieved.",このシステムは、ユーザーが達成すべき結果を表現するのに役立つ質問、フォームなどを提供します。
The system structure is described in a System Breakdown Structure (SBS).,システム構造は、System Breakdown Structure (SBS) で記述されます。
"the system used to collect, track, adjudicate, and communicate changes to a contract",契約の変更を収集、追跡、裁定、伝達するために使用されるシステム
the system used to provide and track suppliers' invoices and payments for services and products,サービスと製品に対するサプライヤーの請求書と支払いを提供および追跡するために使用されるシステム
The tabular presentation of instances can be useful when several instances of one class are to be presented.,インスタンスの表形式の表示は、1 つのクラスの複数のインスタンスを表示する場合に便利です。
The tail of a call arrow is attached to the bottom side of a box. One or more page references are attached to a call arrow.,コールアローの尾部はボックスの底面に取り付けられます。 1 つ以上のページ参照が呼び出し矢印に付加されます。
"the technique of identifying early and late start dates, as well as early and late finish dates, for the uncompleted portions of project schedule activities",プロジェクトのスケジュール活動の未完了部分について、早い開始日と遅い開始日、および早い終了日と遅い終了日を特定する手法
The term 'process assets' is used to indicate that these artifacts are developed or acquired to meet the business objectives of the organization and that they represent investments by the organization that are expected to provide current and future business value.,「プロセス資産」という用語は、これらの成果物が組織のビジネス目標を満たすために開発または取得されること、および現在および将来のビジネス価値を提供すると期待される組織による投資を表すことを示すために使用されます。
"The term ""activities"" covers use of resources. A process can have multiple starting points and multiple end points. The prescribed manner can be a partially ordered sequence. A process specification can be a workflow specification. An enterprise specification can define types of processes and process templates. A process can be viewed as a specific instantiation of life cycle processes, adapted within a life cycle model, to create the service or product for the specific requirements and context of a project. When a process definition is specified as an outcome, the resulting deliverable typically specifies inputs and outputs, and gives a general description of expected activities. However, it does not include the same level of detail as for a procedure.",「アクティビティ」という用語には、リソースの使用が含まれます。プロセスには複数の開始点と複数の終了点を含めることができます。所定の方法は、部分的に順序付けられたシーケンスであってもよい。プロセス仕様はワークフロー仕様にすることができます。エンタープライズ仕様では、プロセスのタイプとプロセス テンプレートを定義できます。プロセスは、プロジェクトの特定の要件とコンテキストに合わせてサービスまたは製品を作成するために、ライフ サイクル モデル内で適応されたライフ サイクル プロセスの特定のインスタンス化として見ることができます。プロセス定義が結果として指定されている場合、結果として得られる成果物は通常、入力と出力を指定し、予想されるアクティビティの一般的な説明を提供します。ただし、手順と同じレベルの詳細は含まれません。
"The term ""human-centered design"" is used rather than ""user-centered design"" to emphasize that design impact a number of stakeholders, not just those typically considered as users. However, in practice, these terms are often used synonymously. Usable systems can provide a number of benefits including improved productivity, enhanced user well-being, avoidance of stress, increased accessibility, and reduced risk of harm.",「ユーザー中心のデザイン」ではなく「人間中心のデザイン」という用語は、デザインが一般的にユーザーと見なされる人々だけでなく、多くの関係者に影響を与えることを強調するために使用されます。ただし、実際には、これらの用語は同義的に使用されることがよくあります。使用可能なシステムは、生産性の向上、ユーザーの幸福度の向上、ストレスの回避、アクセシビリティの向上、危害のリスクの軽減など、多くの利点をもたらします。
"The term application is generally used when referring to a component of software that can be executed. It consists of one or more components, modules, or subsystems.",アプリケーションという用語は、通常、実行可能なソフトウェアのコンポーネントを指すときに使用されます。これは、1 つ以上のコンポーネント、モジュール、またはサブシステムで構成されます。
The term as specified by the IETF is uniform resource identifier (URI) of which URL is a subset.,IETF によって指定された用語は、URL がそのサブセットである URI (Uniform Resource Identifier) です。
The term data processing is not a synonym for information processing.,データ処理という用語は、情報処理と同義ではありません。
The term information processing is not a synonym for data processing,情報処理という用語はデータ処理と同義ではありません
"the term used in the precedence diagramming method for a logical relationship. In current usage, however, precedence relationship, logical relationship, and dependency are widely used interchangeably, regardless of the diagramming method used",論理関係の優先順位図法で使用される用語。ただし、現在の使用法では、使用される図表方法に関係なく、優先関係、論理関係、および依存関係が同じ意味で広く使用されています。
"The terms 'module', 'component,' and 'unit' are often used interchangeably or defined to be subelements of one another in different ways depending upon the context. The relationship of these terms is not yet standardized.",「モジュール」、「コンポーネント」、および「ユニット」という用語は、多くの場合、同じ意味で使用されたり、文脈に応じてさまざまな方法で互いの部分要素として定義されたりします。これらの用語の関係はまだ標準化されていません。
"The terms 'routine,' 'subprogram,' and 'subroutine' are defined and used differently in different programming languages.",「ルーチン」、「サブプログラム」、および「サブルーチン」という用語は、プログラミング言語によって定義および使用方法が異なります。
"The test basis can take the form of documentation, such as a requirements specification, design specification, or module specification, but can also be an undocumented understanding of the required behavior.",テストの基礎は、要件仕様、設計仕様、モジュール仕様などの文書化の形式をとる場合もありますが、必要な動作について文書化されていない理解である場合もあります。
"The test sets will typically reflect the feature sets, but they could contain test cases for a number of feature sets. Test cases for a test set could be selected based on the identified risks, test basis, retesting, or regression testing.",テスト セットは通常、機能セットを反映しますが、多数の機能セットのテスト ケースが含まれる場合があります。テスト セットのテスト ケースは、特定されたリスク、テストの基礎、再テスト、または回帰テストに基づいて選択できます。
The test strategy usually describes some or all of the following: the test practices used; the test subprocesses to be implemented; the retesting and regression testing to be employed; the test design techniques and corresponding test completion criteria to be used; test data; test environment and testing tool requirements; and expectations for test deliverables.,テスト戦略には、通常、次の一部またはすべてが記述されます。使用されるテスト方法。実装されるテストサブプロセス。採用される再テストと回帰テスト。使用されるテスト設計手法と対応するテスト完了基準。テストデータ。テスト環境とテストツールの要件。テスト成果物に対する期待。
the time in calendar units between the actual start date of the schedule activity and either the data date of the project schedule if the schedule activity is in progress or the actual finish date if the schedule activity is complete,スケジュール アクティビティの実際の開始日と、スケジュール アクティビティが進行中の場合はプロジェクト スケジュールのデータ日、またはスケジュール アクティビティが完了している場合は実際の終了日までのカレンダー単位での時間
the time in calendar units between the start and finish of a schedule activity,スケジュールアクティビティの開始から終了までのカレンダー単位の時間
The time of task completion defines the end time of the preceding preparation time and the begin time of the execution time of the following task.,タスクの完了時刻は、前の準備時間の終了時刻と次のタスクの実行時間の開始時刻を定義します。
the total number of work periods (not including holidays or other nonworking periods) required to complete a schedule activity or work breakdown structure component. Usually expressed as workdays or workweeks. Sometimes incorrectly equated with elapsed time,スケジュールアクティビティまたは作業分解構造コンポーネントを完了するために必要な作業期間の合計数 (休日やその他の非作業期間は含まれません)。通常は稼働日または稼働週として表されます。経過時間と誤って同一視される場合がある
The total registeredVoterCount would be a class-level property of the class registeredVoter; there would be only one value of registeredVoterCount for the class as a whole.,合計 registeredVoterCount は、registeredVoter クラスのクラスレベルのプロパティになります。クラス全体では、registeredVoterCount の値は 1 つだけになります。
The triple constraint is often depicted as a triangle where one of the sides or one of the corners represents one of the parameters being managed by the project team.,三重制約は多くの場合、三角形として表され、辺の 1 つまたは角の 1 つがプロジェクト チームによって管理されているパラメータの 1 つを表します。
The type of measurement method depends on the nature of the operations used to quantify an attribute. Two types are distinguished: subjective  quantification involving human judgment; objective- quantification based on numerica rules.,測定方法の種類は、属性を定量化するために使用される操作の性質によって異なります。 2 つのタイプが区別されます。人間の判断を伴う主観的な定量化です。客観的 - 数値ルールに基づく定量化。
"The type of scale depends on the nature of the relationship between values on the scale. Metrics using nominal or ordinal scales produce qualitative data, and metrics using interval and ratio scales produce quantitative data.",スケールのタイプは、スケール上の値間の関係の性質によって異なります。名目スケールまたは順序スケールを使用するメトリクスは定性的データを生成し、間隔スケールと比率スケールを使用するメトリクスは定量的データを生成します。
the types and quantities of resources required for each activity in a work package,作業パッケージ内の各アクティビティに必要なリソースの種類と量
The typical case of a derived property is as a derived attribute although there is nothing to prohibit other kinds of derived property.,派生プロパティの典型的なケースは派生属性としてのものですが、他の種類の派生プロパティを禁止するものは何もありません。
"the use of a data processing system to imitate another data processing system, so that the imitating system accepts the same data, executes the same programs, and achieves the same results as the imitated system",データ処理システムを使用して別のデータ処理システムを模倣し、模倣システムが同じデータを受け入れ、同じプログラムを実行し、模倣システムと同じ結果を達成すること
The use of the ELSE-rule facility is optional,ELSE ルール機能の使用はオプションです
"The user can perform other roles such as acquirer or maintainer. The role of user and the role of operator can be vested, simultaneously or sequentially, in the same individual or organization,",ユーザーは、取得者や保守者などの他の役割を実行できます。ユーザーの役割とオペレーターの役割は、同じ個人または組織内で同時にまたは順次に付与できます。
the variable Installation_Site_Latitude,変数 Installation_Site_Latitude
the variable m in the equation E = mc2,方程式の変数 m E = mc2
The website owner can select a supplier as the website provider or can also be the website provider.,Web サイト所有者は、Web サイトプロバイダーとしてサプライヤーを選択することも、Web サイトプロバイダーになることもできます。
"The website provider can also be the site owner, webmaster, site designer, or the internet service provider for the site.",Web サイト プロバイダーは、サイト所有者、Web マスター、サイト デザイナー、またはサイトのインターネット サービス プロバイダーであることもあります。
the weight allocated to a function on the basis of which a number of function points is assigned to the function,関数に割り当てられる重み。これに基づいて関数ポイントの数が関数に割り当てられます。
the work defined at the lowest level of the work breakdown structure for which cost and duration can be estimated and managed,コストと期間を見積もって管理できる、作業分解構造の最下位レベルで定義される作業
the work missed in the original project plan that is required to complete the deliverable product,成果物を完成させるために必要な、元のプロジェクト計画で欠けていた作業
"the work that must be performed to deliver a product, service, or result with the specified features and functions",指定された機能を備えた製品、サービス、または結果を提供するために実行する必要がある作業
"The working metamodel comprises the meta-objects in the CDIF semantic metamodel that are used by the subject areas referenced in the metamodel section of the transfer, and the meta-objects defined as extensions in the metamodel section.",作業メタモデルは、転送のメタモデル セクションで参照されるサブジェクト領域によって使用される CDIF セマンティック メタモデルのメタオブジェクトと、メタモデル セクションで拡張として定義されたメタオブジェクトで構成されます。
theory for priority-based scheduling of concurrent tasks with hard deadlines,期限が厳しい同時タスクの優先順位に基づいたスケジューリングの理論
"There are four arrow roles: input, control, output, and mechanism.",矢印の役割には、入力、制御、出力、機構の 4 つがあります。
"There are multiple levels of view; each is intended to be distinct, specified in terms of the modeling constructs to be used.",複数のレベルのビューがあります。それぞれは別個のものであることが意図されており、使用されるモデリング構造の観点から指定されます。
"There are two types of software enhancements, adaptive and perfective. A maintenance enhancement is not a software correction.",ソフトウェアの拡張機能には、適応型と完全型の 2 種類があります。メンテナンスの機能強化はソフトウェアの修正ではありません。
"There can be a many-to-many relationship of ""proposed change"" to ""approved modification"". A proposed chang can cause modifications in several SCIs (even if only to the code and its test case). A modification can originate from several proposed changes, approved simultaneously or over a period of time while the modification is still in progress.",「提案された変更」と「承認された変更」には多対多の関係が存在する可能性があります。提案された変更により、いくつかの SCI が変更される可能性があります (コードとそのテスト ケースのみであっても)。変更は、同時に承認された、または変更の進行中に一定の期間をかけて承認された、いくつかの変更提案に基づいて行われる場合があります。
"There can be different audiences for documentation (for example, management, data entry, maintenance).",ドキュメントの対象者はさまざまです (管理、データ入力、メンテナンスなど)。
"These activities include the definition and synthesis of manpower, personnel, training, human engineering, health hazards, and safety issues.",これらの活動には、マンパワー、人員、トレーニング、人間工学、健康上の危険、および安全問題の定義と統合が含まれます。
"These activities include, but are not limited to, lessons-learned reviews and archiving project materials",これらの活動には、教訓から得たレビューやプロジェクト資料のアーカイブなどが含まれますが、これらに限定されません。
These are the transition condition and the annotations of arcs surrounding the transition.,これらは、遷移条件と、遷移を囲む円弧の注釈です。
"These characteristics are detailed in ISO/IEC 14102:2008. They include management process, development process, maintenance, documentation, configuration management, quality assurance, verification, validation, environment needs, CASE tool integrability, quality characteristics, acquisition needs, implementation needs, support indicators, and certification requirements.",これらの特性は ISO/IEC 14102:2008 で詳しく説明されています。これらには、管理プロセス、開発プロセス、メンテナンス、文書化、構成管理、品質保証、検証、検証、環境ニーズ、CASE ツールの統合性、品質特性、取得ニーズ、実装ニーズ、サポート指標、認証要件が含まれます。
"These conditions are called repeatability conditions. Repeatability conditions include the same measurement procedure, the same observer, the same measuring instrument, used under the same conditions; the same location; repetition over a short period of time. Repeatability is expressed quantitatively in terms of the dispersion characteristics of the results.",これらの条件は再現性条件と呼ばれます。再現性条件には、同じ測定手順、同じ観察者、同じ測定器、同じ条件下で使用されることが含まれます。同じ場所。短期間での繰り返し。再現性は、結果の分散特性の観点から定量的に表現されます。
"These descriptions include control algorithms, protocols, data contents and formats, and performance.",これらの説明には、制御アルゴリズム、プロトコル、データの内容と形式、パフォーマンスが含まれます。
These indicators are used to compute the value adjustment factor,これらの指標は、価値調整係数を計算するために使用されます。
These limits can be defined as imposed safety targets or developed from analysis or development policy.,これらの制限は、課せられた安全目標として定義することも、分析や開発ポリシーから開発することもできます。
"These process definitions cover the fundamental process elements (and their relationships to each other) that must be incorporated into the defined processes that are implemented in projects across the organization. A standard process establishes consistent activities across the organization and is desirable for long-term stability and improvement. The organization's set of standard processes describes the fundamental process elements that will be part of the projects' defined processes. It also describes the relationships (for example, ordering and interfaces) between these process elements.",これらのプロセス定義は、組織全体のプロジェクトに実装される定義されたプロセスに組み込む必要がある基本的なプロセス要素 (およびそれらの相互関係) をカバーします。標準プロセスは組織全体で一貫した活動を確立し、長期的な安定性と改善のために望ましいものです。組織の標準プロセスのセットは、プロジェクトで定義されたプロセスの一部となる基本的なプロセス要素を記述します。また、これらのプロセス要素間の関係 (順序やインターフェイスなど) についても説明します。
These requirements include constraints on formats and timing.,これらの要件には、形式とタイミングに関する制約が含まれます。
"These types of provision are distinguished [in English] by the form of wording they employ, e.g., instructions are expressed in the imperative mood, recommendations by the use of the auxiliary ""should"", and requirements by the use of the auxiliary ""shall"". [SOURCE: ISO/IEC Guide 2:2004]",これらの種類の条項は、[英語では] 使用する文言の形式によって区別されます。たとえば、指示は命令形で表現され、推奨は助動詞「 should 」の使用で表現され、要件は助動詞「shall」の使用で表現されます。 [出典: ISO/IEC ガイド 2:2004]
"These uses are referred to as input loopback, control loopback, and mechanism loopback, respectively.",これらの使用法は、それぞれ入力ループバック、制御ループバック、メカニズム ループバックと呼ばれます。
They are a type of quality planning tools used to link and sequence the activities identified,これらは、特定されたアクティビティをリンクして順序付けするために使用される品質計画ツールの一種です。
thinner rectangular surface mount integrated circuit unit with gull-wing leads on the two long side,2 つの長辺にガルウィング リードを備えた、より薄い長方形の表面実装集積回路ユニット
third-generation language,第3世代言語
"third-party attestation related to products, processes, systems, or persons",製品、プロセス、システム、または人物に関連する第三者の証明書
third-party conformity assessment body operating certification schemes,認証スキームを運営する第三者適合性評価機関
"This address can be the same as the program's origin, depending upon whether there are data preceding the first instruction.",最初の命令の前にデータがあるかどうかに応じて、このアドレスはプログラムの元のアドレスと同じになることがあります。
"This characteristic is concerned with what the software does to fulfill needs. The software quality characteristic functionality can be used to specify or evaluate the suitability, accuracy, interoperability, security, and compliance of a function.",この特性は、ソフトウェアがニーズを満たすために何を行うかに関係します。ソフトウェア品質特性機能を使用して、機能の適合性、精度、相互運用性、セキュリティ、およびコンプライアンスを指定または評価できます。
"This cycle typically includes a requirements phase, design phase, implementation phase, test phase, and sometimes, installation and checkout phase. The phases listed above can overlap or be performed iteratively, depending upon the software development approach used. This term is sometimes used to mean a longer period of time, either the period that ends when the software is no longer being enhanced by the developer, or the entire software life cycle.",このサイクルには通常、要件フェーズ、設計フェーズ、実装フェーズ、テストフェーズが含まれ、場合によってはインストールおよびチェックアウトフェーズが含まれます。使用されるソフトウェア開発アプローチに応じて、上記のフェーズは重複したり、繰り返し実行されたりすることがあります。この用語は、ソフトウェアが開発者によって強化されなくなった時点で終了する期間、またはソフトウェアのライフサイクル全体のいずれかを意味する、より長い期間を意味するために使用されることがあります。
"This definition differs from the ISO 9000:2015 quality definition, because this definition refers to the satisfaction of stated and implied needs, while the ISO 9000 quality definition refers to the satisfaction of requirements.",この定義は ISO 9000:2015 の品質定義とは異なります。これは、この定義が明示的および暗黙のニーズの満足を指すのに対し、ISO 9000 の品質定義は要件の満足を指すためです。
"This definition of quality in use is similar to the definition of usability in ISO 9241-11. Before the product is released, quality in use can be specified and measured in a test environment designed and used exclusively by the intended users for their goals and contexts of use, e.g. User Acceptance Testing Environment.",この使用品質の定義は、ISO 9241-11 のユーザビリティの定義に似ています。製品がリリースされる前に、使用中の品質は、対象ユーザーがその目的や使用状況に合わせて専用に設計および使用するテスト環境で指定および測定できます。ユーザー受け入れテスト環境。
"This differs from an ordinary trace, which is produced cumulatively during program execution.",これは、プログラムの実行中に累積的に生成される通常のトレースとは異なります。
"This does not pertain to the physical way in which data is presented on a screen, report, or other media.",これは、データが画面、レポート、またはその他のメディア上に表示される物理的な方法には関係しません。
"This entity can be part of the organization that created or published the software to which the Ent relates, in which case the Ent creator and software creator will be the same. The Ent creator can also be a separate organization which holds the licensing rights or even a third-party organization unrelated to the software creator (such as in the case where Ents are created for legacy software by a consultant or tool developer).",このエンティティは、Ent が関連するソフトウェアを作成または公開した組織の一部である可能性があり、その場合、Ent の作成者とソフトウェアの作成者は同一になります。 Ent 作成者は、ライセンス権を保有する別の組織であることも、ソフトウェア作成者とは関係のないサードパーティ組織であることもあります (コンサルタントやツール開発者によってレガシー ソフトウェア用に Ent が作成された場合など)。
"This entity can be part of the organization that created the software, in which case the tag creator and software creator will be the same. The tag creator can also be a third-party organization unrelated to the software creator, such as in the case where tags are created for legacy software by third-party organizations",このエンティティはソフトウェアを作成した組織の一部である可能性があり、その場合、タグの作成者とソフトウェアの作成者は同じになります。タグ作成者は、サードパーティ組織によってレガシー ソフトウェアのタグが作成される場合など、ソフトウェア作成者と無関係のサードパーティ組織であることもあります。
This entity might or might not own the rights to sell or distribute the software.,このエンティティは、ソフトウェアを販売または配布する権利を所有している場合もあれば、所有していない場合もあります。
"This importance determines whether the request will cause suspension of the current process and, if there are several outstanding interrupt requests, which will be handled first.",この重要性によって、リクエストによって現在のプロセスが一時停止されるかどうか、また未処理の割り込みリクエストがいくつかある場合はどれが最初に処理されるかが決まります。
"This includes determining the scope of the changes to plan and implement work, accurately estimating the resources needed to perform the work, and analyzing the requested changes' cost and benefits.",これには、作業を計画および実装するための変更の範囲を決定すること、作業を実行するために必要なリソースを正確に見積もること、要求された変更のコストと利点を分析することが含まれます。
"This includes interfaces between humans and hardware or software, as well as interfaces between humans themselves.",これには、人間とハードウェアまたはソフトウェアの間のインターフェイスだけでなく、人間同士の間のインターフェイスも含まれます。
"This includes, where appropriate, packaging, branding, user documentation, online help, support and training.",これには、必要に応じて、パッケージ化、ブランディング、ユーザー ドキュメント、オンライン ヘルプ、サポート、トレーニングが含まれます。
"This information includes a listing of the approved configuration identification, the status of proposed changes to the configuration, and the implementation status of approved changes.",この情報には、承認された構成識別のリスト、提案された構成変更のステータス、および承認された変更の実装ステータスが含まれます。
"This is an intermediate requirement that is an early indicator of final system performance. For example, design or code errors can be early predictors of final system reliability.",これは、最終的なシステム パフォーマンスの初期指標である中間要件です。たとえば、設計またはコードのエラーは、最終的なシステムの信頼性を早期に予測する要因となる可能性があります。
This is referred to as concurrent elaboration of information items.,これは、情報アイテムの同時精緻化と呼ばれます。
This is usually the opening shot in a commit war.,これは通常、コミット戦争のオープニングショットです。
"This item can be a document, hardware item, software item, service, or any type of work product.",この項目は、ドキュメント、ハードウェア項目、ソフトウェア項目、サービス、またはあらゆる種類の作業成果物です。
This means that a requirement or a set of requirements has been reviewed to ensure the characteristics of good requirements are achieved.,これは、優れた要件の特性が確実に達成されるように、1 つまたは一連の要件がレビューされたことを意味します。
"This means that transactions have been specified up to the level of referenced logical files (the so-called file types referenced) and data element types, and that logical files have been specified up to the level of record types and data element types. As a result, the complexity of each function recognized can be established.",これは、トランザクションが参照される論理ファイル (いわゆる参照されるファイル タイプ) およびデータ要素タイプのレベルまで指定され、論理ファイルがレコード タイプおよびデータ要素タイプのレベルまで指定されていることを意味します。その結果、認識された各機能の複雑さを確立できます。
This measure does not represent functional size.,この尺度は機能的なサイズを表すものではありません。
"This method is an alternative to hard-wiring the control signals necessary to carry out each machine language instruction. Techniques include bit steering, compaction, residual control, single-level encoding, two-level encoding",この方法は、各機械語命令を実行するために必要な制御信号を配線する代わりの方法です。技術には、ビット ステアリング、圧縮、残差制御、単一レベル エンコーディング、2 レベル エンコーディングが含まれます。
This phrase means more than a combination of its component terms; it includes documentation and usage.,このフレーズは、その構成要素の組み合わせ以上の意味を持ちます。これにはドキュメントと使用法が含まれます。
This review is called software specification review by the US Department of Defense.,このレビューは米国国防総省によるソフトウェア仕様レビューと呼ばれます。
This set can describe an arbitrarily complex data structure.,このセットは、任意の複雑なデータ構造を記述することができます。
"This state usually has higher priority than, and precludes the execution of, application programs.",この状態は通常、アプリケーション プログラムよりも優先され、アプリケーション プログラムの実行が妨げられます。
"This technique utilizes a decision matrix to provide a systematic analytical approach for establishing criteria, such as risk levels, uncertainty, and valuation, to evaluate and rank many ideas",この手法では、意思決定マトリックスを利用して、リスク レベル、不確実性、評価などの基準を確立し、多くのアイデアを評価してランク付けするための体系的な分析アプローチを提供します。
This term has no standardized meaning in software engineering at this time.,現時点では、この用語はソフトウェア エンジニアリングにおいて標準化された意味を持っていません。
"This term includes in particular the processing and communication of text, images, and voice.",この用語には、特にテキスト、画像、音声の処理と通信が含まれます。
"This term is sometimes used to mean a longer period of time, either the period that ends when the system is no longer being enhanced, or the entire system life cycle.",この用語は、システムが拡張されなくなった時点で終了する期間、またはシステムのライフサイクル全体のいずれかを意味する、より長い期間を意味するために使用されることがあります。
those activities required to obtain the logical record to be processed next,次に処理される論理レコードを取得するために必要なアクティビティ
"those activities required to obtain the logical record, if any, to be processed first",最初に処理される論理レコード (存在する場合) を取得するために必要なアクティビティ
those aspects of the security policies of different security domains that are necessary in order for interactions to take place between those domains,さまざまなセキュリティ ドメイン間で対話を行うために必要な、さまざまなセキュリティ ドメインのセキュリティ ポリシーの側面
"those items (e.g. functions, parts, software, characteristics, processes) having significant effect on the product realization and use of the product — including safety, performance, form, fit, function, producibility, service life, etc. — that require specific actions to ensure they are adequately managed",製品の実現と製品の使用に重大な影響を与える項目（機能、部品、ソフトウェア、特性、プロセスなど）（安全性、性能、形状、適合性、機能、生産性、耐用年数など）を適切に管理するために特定の措置を必要とするもの
those processes performed to complete the work defined in the project management plan to satisfy the project specifications,プロジェクト仕様を満たすためにプロジェクト管理計画で定義された作業を完了するために実行されるプロセス
those processes performed to define a new project or a new phase of an existing project by obtaining authorization to start the project or phase,プロジェクトまたはフェーズを開始するための承認を取得することによって、新しいプロジェクトまたは既存のプロジェクトの新しいフェーズを定義するために実行されるプロセス。
those processes performed to finalize all activities across all Process Groups to formally close a project or phase,プロジェクトまたはフェーズを正式に終了するために、すべてのプロセス グループにわたるすべてのアクティビティを終了するために実行されるプロセス
"those processes required to establish the scope of the project, refine the objectives, and define the course of action required to attain the objectives that the project was undertaken to achieve",プロジェクトの範囲を確立し、目的を絞り込み、プロジェクトが達成するために着手した目的を達成するために必要な行動方針を定義するために必要なプロセス
"those processes required to track, review, and regulate the progress and performance of the project; identify any areas in which changes to the plan are required; and initiate the corresponding changes",プロジェクトの進行状況とパフォーマンスを追跡、レビュー、規制するために必要なプロセス。計画の変更が必要な領域を特定します。そして対応する変更を開始します
those tasks required for the integrity level assigned to the software to be tested.,テスト対象のソフトウェアに割り当てられた整合性レベルに必要なタスク。
those verification and validation (V&V) tasks that can be added to the minimum V&V tasks to address specific application requirements,特定のアプリケーション要件に対処するために、最小限の V&V タスクに追加できる検証および検証 (V&V) タスク
"those verification and validation tasks required for the integrity level assigned to the system, software, or hardware to be verified and validated",検証および検証されるシステム、ソフトウェア、またはハードウェアに割り当てられた整合性レベルに必要な検証および検証タスク
threat and risk assessment,脅威とリスクの評価
"Three kinds of property are defined: attribute, participant properties due to relationships, and operations.",属性、関係による参加者プロパティ、操作の 3 種類のプロパティが定義されています。
"Three types of event synchronization are possible: external interrupts, timer expiration, and internal signals from other tasks.",外部割り込み、タイマー期限切れ、他のタスクからの内部信号の 3 種類のイベント同期が可能です。
"Three types of function point count are application, development project, and enhancement project.",機能ポイント数は、アプリケーション、開発プロジェクト、強化プロジェクトの3種類です。
three-dimensional,三次元
"thresholds, targets, or patterns used to determine the need for action or further investigation, or to describe the level of confidence in a given result",アクションやさらなる調査の必要性を判断するため、または特定の結果の信頼レベルを説明するために使用されるしきい値、ターゲット、またはパターン
"Through repo surgery, a repo master can perform operations that the version control system does not directly support.",リポジトリ操作を通じて、リポジトリ マスターはバージョン管理システムが直接サポートしていない操作を実行できます。
throughput of all of those tasks whose execution times are accepted with respect to the timeliness function,適時性関数に関して実行時間が許容されるすべてのタスクのスループット
throw-away product,使い捨て製品
"Thus, a static schema is the specification of the types of one or more information objects at some particular point in time. These types are subtypes of the types specified in the invariant schema.",したがって、静的スキーマは、ある特定の時点における 1 つ以上の情報オブジェクトのタイプの仕様です。これらの型は、インバリアント スキーマで指定された型のサブタイプです。
"Thus, engineering language: definitions of concepts and rules for the specification of an ODP system from the engineering viewpoint.",したがって、エンジニアリング言語: エンジニアリングの観点から見た ODP システムの仕様のための概念と規則の定義。
time and material,時間と材料
time interval between the instant at which an instruction control unit issues a call for data and the instant at which the transfer of data is started,命令制御装置がデータの呼び出しを発行した瞬間とデータの転送が開始される瞬間の間の時間間隔
"time interval of the measurement procedure from the time the measurement results fulfill the required statistical significance to the time when all tasks, which were submitted during the rating interval, are completed",測定結果が必要な統計的有意性を満たした時点から、評価期間中に提出されたすべてのタスクが完了する時点までの測定手順の時間間隔
time interval of the measurement procedure from the time the SUT reaches a stable state of operation to the time the measurement results are fulfilling the required statistical significance,SUTが安定した動作状態に達してから、測定結果が必要な統計的有意性を満たしているまでの測定手順の時間間隔
time interval of the measurement procedure when the RTE starts submitting tasks until the SUT reaches a stable state of operation,RTE がタスクの送信を開始してから SUT が安定した動作状態に達するまでの測定手順の時間間隔
"time interval, where the measurement procedure is observed for collecting (logging) measurement results for rating or validation, consisting of the rating interval and the supplementary run.",評価または検証のために測定結果を収集 (記録) するために測定手順が観察される時間間隔。評価間隔と補助実行で構成されます。
time it takes a computer to fetch an instruction from memory and execute it,コンピュータがメモリから命令をフェッチして実行するのにかかる時間
time it will take to recover a project's initial investment including interest,利息を含むプロジェクトの初期投資を回収するのにかかる時間
"time limit, combined with a relative frequency corresponding to the ratio of the number of tasks (of a specific task type) with an execution time less than or equal to the corresponding time limit, to the total number of tasks (of that particular task type), used for comparison with the execution time of a task (of that particular task type)",タスクの実行時間との比較に使用される、(特定のタスク タイプの) タスクの総数に対する、対応する制限時間以下の実行時間を持つ (特定のタスク タイプの) タスクの数の比率に対応する相対度数と組み合わせた制限時間。
"Time sharing can be implemented by time slicing, priority-based interrupts, or other scheduling methods",タイムシェアリングは、タイムスライス、優先順位ベースの割り込み、またはその他のスケジューリング方法によって実装できます。
time spent tabulating computer resource usage for billing purposes,請求目的でコンピュータ リソースの使用状況を集計するのに費やした時間
time which elapses before the task submission,タスクの送信までに経過する時間
time which elapses between task submission and completion,タスクの送信から完了までに経過した時間
Time-on-task and Completion Rate/Mean Time-On-Task (defect rates vs. time to achieve task) are measures efficiency. Efficiency is the degree to which an information system efficiently uses the technical infrastructure and thus becomes useable for the customer. The most important underlying topic here is the capacity of the platform in relation to the demand.,タスク実行時間と完了率/平均タスク実行時間 (欠陥率とタスクを達成するまでの時間) が効率を測定します。効率とは、情報システムが技術インフラストラクチャを効率的に使用し、顧客にとって使いやすくなる度合いです。ここで最も重要な基礎的なトピックは、需要に対するプラットフォームの容量です。
time-ordered description of each external input and the time at which it occurre,各外部入力とその発生時刻の時系列の説明
"time-phased budget under change control, used to compare actual expenditures to planned expenditure",変更管理下にある時間段階の予算。実際の支出と計画された支出を比較するために使用されます。
"timely event when for a specific task the total output string or, in case of a set of output strings, all parts are completely received by to the emulated user or another instance",特定のタスクの出力文字列全体、または出力文字列のセットの場合はすべての部分がエミュレートされたユーザーまたは別のインスタンスに完全に受信されたときのタイムリーなイベント
"timely event when the input string is completely submitted from the emulated user to the SUT and the execution of the task can start, regardless if the SUT starts the execution immediately or not.",SUT がすぐに実行を開始するかどうかに関係なく、入力文字列がエミュレートされたユーザーから SUT に完全に送信され、タスクの実行を開始できるときのタイムリーなイベント。
timer pulse unit,タイマーパルスユニット
to access data from a storage device or data medium,ストレージデバイスまたはデータメディアからデータにアクセスするため
to add comments to a computer program,コンピュータプログラムにコメントを追加するには
"to allocate, schedule, or use devices or storage areas as in (1)",(1) のようにデバイスまたはストレージ領域を割り当て、スケジュールし、または使用するため
to alternate the elements of one sequence with the elements of one or more other sequences so that each sequence retains its identity,各シーケンスがその同一性を保持できるように、1 つのシーケンスの要素を 1 つまたは複数の他のシーケンスの要素と交互に配置すること
to alternately perform the steps of two different tasks in order to achieve concurrent operation of the tasks,タスクの同時操作を実現するために、2 つの異なるタスクのステップを交互に実行すること
to apply a metric,メトリクスを適用するには
to apply the same tag to a changed version of a file to correct a last-minute error found in a releas,リリースで見つかった直前のエラーを修正するために、ファイルの変更されたバージョンに同じタグを適用する
to assign a value to a parameter or to assign an absolute address to a symbolic address in a computer program,コンピュータ プログラムでパラメータに値を割り当てるか、シンボリック アドレスに絶対アドレスを割り当てること
to assign a value to a parameter that is accessible by a calling module,呼び出し側モジュールがアクセスできるパラメータに値を割り当てるには
to assign a value to an identifier,識別子に値を割り当てるには
"to assign an operator, identifier, or literal more than one meaning, depending upon the data types associated with it at any given time during program execution",プログラム実行中の任意の時点で関連付けられたデータ型に応じて、演算子、識別子、またはリテラルに複数の意味を割り当てること
to automate by means of computers,コンピューターを使って自動化する
"To avoid disruptive changes in a stable branch, code changes are typically first introduced into the current (development) branch, tested, and then merged back.",安定したブランチでの破壊的な変更を避けるために、コードの変更は通常、最初に現在の (開発) ブランチに導入され、テストされてからマージされます。
to be determined,決定される
to be resolved,解決される
to be revised,改訂される
to be specified,特定される
to be supplied,供給される
"to carry out an instruction, process, or computer program2. directing, managing, performing, and accomplishing the project work, providing the deliverables, and providing work performance information",命令、プロセス、またはコンピュータ プログラムを実行するため2。プロジェクト作業の指揮、管理、実行、達成、成果物の提供、および作業実績情報の提供
"to cause a computer program to resume execution after a failure, using status and results recorded at a checkpoint",チェックポイントで記録されたステータスと結果を使用して、障害後にコンピュータ プログラムの実行を再開させること
to cause the suspension of a process,プロセスを一時停止させる
to combine different changes to the same file,同じファイルへの異なる変更を結合するには
"to combine separate arrow meanings into a composite arrow meaning, expressed by joining arrow segments, i.e., the inclusion of multiple object types into an object type set",個別の矢印の意味を複合的な矢印の意味に結合すること。これは、矢印セグメントを結合することによって表現されます。つまり、複数のオブジェクト タイプを 1 つのオブジェクト タイプ セットに含めることによって表現されます。
"to combine software components, hardware components, or both into an overall system2. to pull in the changes from one child branch into its parent",ソフトウェア コンポーネント、ハードウェア コンポーネント、またはその両方を組み合わせてシステム全体を構築すること2。 1 つの子ブランチからその親ブランチに変更を取り込む
to complete performance index,パフォーマンスインデックスを完成させるには
to conduct an activity as in (1),(1)のような活動を行うこと
to connect two or more components for the purpose of passing information from one to the other,情報を一方から他方に受け渡す目的で 2 つ以上のコンポーネントを接続すること
to copy computer instructions or data from a register to internal storage or from internal storage to external storage,コンピュータの命令またはデータをレジスタから内部ストレージに、または内部ストレージから外部ストレージにコピーすること
to copy data from a magnetic disk onto a magnetic tape,磁気ディスクから磁気テープにデータをコピーする
to copy the contents of internal storage to an external medium,内部ストレージの内容を外部メディアにコピーするには
to create a document as in (1),(1)のように文書を作成します
to create a load module from two or more independently translated object modules or load modules by resolving cross-references among them,2 つ以上の独立して変換されたオブジェクト モジュールからロード モジュールを作成するか、オブジェクト モジュール間の相互参照を解決してロード モジュールを作成します。
"to decompose blocks into statements, statements into expressions, expressions into operators and operands",ブロックをステートメントに、ステートメントを式に、式を演算子とオペランドに分解します。
to depart from the implicit or declared order in which computer program statements are being executed,コンピュータープログラムステートメントが実行される暗黙的または宣言された順序から逸脱すること
"to design, write, modify, and test programs",プログラムを設計、作成、変更、テストする
"to detect, locate, and correct faults in a computer program",コンピュータプログラムの欠陥を検出、特定、修正すること
"to detect, locate, and eliminate errors in programs",プログラム内のエラーを検出、特定、除去するため
to determine the syntactic structure of a language unit by decomposing it into more elementary subunits and establishing the relationships among the subunits,言語単位をより基本的なサブユニットに分解し、サブユニット間の関係を確立することによって、言語単位の構文構造を決定すること
to display a symbol or message as in (1),(1)のようにシンボルやメッセージを表示する
"to divide a system, computer program, or data file into segments as in (1), (2), or (3)",システム、コンピュータ プログラム、またはデータ ファイルを (1)、(2)、または (3) のようにセグメントに分割すること
to embed a WHILE loop within another WHILE loop or to embed an IF test within a WHILE loop,別の WHILE ループ内に WHILE ループを埋め込む、または WHILE ループ内に IF テストを埋め込む
to end a session,セッションを終了するには
to establish a relationship between two or more products of the development process,開発プロセスの 2 つ以上の製品間の関係を確立するため
to execute a sequence of computer program statements as in (1),(1) のような一連のコンピュータ プログラム ステートメントを実行する
to express a computer program in a programming language,コンピュータプログラムをプログラミング言語で表現すること
to form a group,グループを形成する
"to formulate, document, and use [a policy or procedure] throughout an organization",組織全体で[ポリシーまたは手順]を策定、文書化、使用すること
to incorporate a computer program construct into another construct of the same kind,コンピュータープログラムの構造を同じ種類の別の構造に組み込むこと
to initialize a computer system by clearing memory and reloading the operating system,メモリをクリアし、オペレーティング システムを再ロードしてコンピュータ システムを初期化すること
to initiate a session,セッションを開始するには
"to insert, rearrange, or delete characters",文字を挿入、並べ替え、または削除するには
to integrate the changes made to a developer's private view of the source code into a branch accessible through the version control system's repository,開発者のソース コードのプライベート ビューに加えられた変更を、バージョン管理システムのリポジトリからアクセスできるブランチに統合する
to load a computer program segment from auxiliary storage to main storage in such a way that other segments of the program are overwritten,プログラムの他のセグメントが上書きされるような方法で、コンピュータプログラムのセグメントを補助記憶装置から主記憶装置にロードすること
to locate and load computer instructions or data from storage,コンピューターの命令やデータをストレージから見つけてロードするため
to make a process or equipment automatic,プロセスや装置を自動化する
to make certain that things occur or events take place,物事が起こったり、出来事が起こったりすることを確認すること
to merge changes from the current branch into the stable branch(es),現在のブランチの変更を安定したブランチにマージします。
"to modify the form or format of computer code, data, or documentation",コンピューターコード、データ、またはドキュメントの形式または形式を変更すること
to move data from one file to another,あるファイルから別のファイルにデータを移動するには
to move machine code from one portion of main memory to another and to adjust the addresses so that the code can be executed in its new location,マシンコードをメインメモリのある部分から別の部分に移動し、コードが新しい場所で実行できるようにアドレスを調整すること
to move the changes developed under one branch into another,あるブランチで開発された変更を別のブランチに移動する
"to nest one subroutine, block, or loop within another; to nest one data structure within another",1 つのサブルーチン、ブロック、またはループを別のサブルーチン、ブロック、またはループ内にネストする。あるデータ構造を別のデータ構造内にネストする
to obtain the use of a resource,リソースの使用を取得する
"to perform a modification as in (1), (2), or (3)",(1)、(2)、または(3)のような変更を実行します。
to perform an exchange as in (1),(1)のような交換を行う
to perform operations on data,データに対して操作を実行する
to perform the operation in (1),(1)の操作を行う
to perform the selection in (1),(1)の選択を行う
to perform the steps required to produce an instance of the product,製品のインスタンスを作成するために必要な手順を実行するため
to place or retain data in a storage device,ストレージデバイスにデータを配置または保持すること
to print or otherwise display a set of data items,一連のデータ項目を印刷または表示する
"to produce a display or copy as in (1), (2), or (3)",(1)、(2)、または(3)のような表示またはコピーを作成するため
to produce a record as in (1),(1) のようなレコードを生成します
to promise or state with certainty by one person to another person or group,ある人が別の人またはグループに対して確実に約束したり述べたりすること
to provide a link as in (2),(2)のようにリンクを提供します
to provide data from an external source,外部ソースからデータを提供するため
"to pull the changes made in a parent branch into its (evolving) child (for example, feature) branch",親ブランチで行われた変更をその（進化中の）子（機能など）ブランチにプルします。
"to read data from a source, altering the contents of the source location, and to write the same data elsewhere in a physical form that can differ from that of the source",ソースからデータを読み取り、ソースの場所の内容を変更し、同じデータをソースとは異なる物理的形式で別の場所に書き込むこと
"to read data from a source, leaving the source data unchanged, and to write the same data elsewhere in a physical form that can differ from that of the source",ソースデータを変更せずにソースからデータを読み取り、同じデータをソースとは異なる物理的形式で他の場所に書き込むこと
"to read input data, or write output data, to auxiliary or main storage for later processing or output, in order to permit input/output devices to operate concurrently with job execution",入出力デバイスがジョブの実行と同時に動作できるようにするために、後の処理または出力のために補助記憶域または主記憶域に入力データを読み取る、または出力データを書き込むため
"to read machine code into main memory in preparation for execution and, in some cases, to perform address adjustment and linking of modules2. to copy computer instructions or data from external storage to internal storage or from internal storage to registers",実行の準備としてマシンコードをメインメモリに読み込み、場合によってはモジュールのアドレス調整とリンクを実行します2。コンピュータの命令やデータを外部記憶装置から内部記憶装置に、または内部記憶装置からレジスタにコピーすること
to receive data from an external source,外部ソースからデータを受信する
to record data in a storage device or on a data medium,記憶装置またはデータ媒体にデータを記録すること
to recover the original form of one or more data items from packed data,パックされたデータから 1 つ以上のデータ項目の元の形式を復元すること
"to refer to a device or storage location by an identifying number, character, or group of characters3. to deal with, to take into consideration; (specifically) to decide whether and when a defined documentation topic is to be included, either directly or by reference to another document; to decide whether an item is to be recorded prior to the test execution (in a tool or not in a tool), recorded during the test execution, recorded post-test execution, not recorded (addressed by the process), or excluded.",識別番号、文字、または文字のグループによってデバイスまたはストレージの場所を参照する3。対処する、考慮する。 (具体的には) 定義されたドキュメント トピックを直接、または別のドキュメントへの参照によって含めるかどうか、またいつ含めるかを決定します。項目をテスト実行前に記録するか (ツール内かツール外か)、テスト実行中に記録するか、テスト実行後に記録するか、記録しない (プロセスによって対処される) か、除外するかを決定します。
"to relinquish control by one process and assume it at another, either with or without expectation of return",復帰の期待の有無にかかわらず、あるプロセスによる制御を放棄し、別のプロセスで制御を引き継ぐこと
"to restructure software code without altering its behavior for the purpose of improving quality attributes, easing future extension or adaptation, or adhering to an architectural style",品質特性の向上、将来の拡張や適応の容易化、アーキテクチャ スタイルの遵守を目的として、動作を変更することなくソフトウェア コードを再構築すること
"to return a transmitted signal to its source, often with a delay to indicate that the signal is a reflection rather than the original",送信された信号をそのソースに戻すこと。多くの場合、信号が元の信号ではなく反射であることを示す遅延が発生します。
to send data from one place and receive it at another,ある場所からデータを送信し、別の場所でそれを受信する
to separate the parts of a block,ブロックの部分を分離するには
to serve as a connecting or connected component as in (2),(2)のように接続または接続されたコンポーネントとして機能する
"to set a variable, register, or other storage location back to a prescribed state",変数、レジスタ、またはその他の記憶場所を所定の状態に戻すこと
"to set a variable, register, or other storage location to a starting value",変数、レジスタ、またはその他の記憶場所を開始値に設定する
"to set a variable, register, or other storage location to zero, blank, or other null value",変数、レジスタ、またはその他の記憶場所をゼロ、空白、またはその他の null 値に設定します。
"to store data in a compact form in a storage medium, using known characteristics of the data and medium in such a way as to permit recovery of the data",データの回復を可能にするような方法でデータと媒体の既知の特性を使用して、データを記憶媒体にコンパクトな形式で保存すること
to store data that are required by a computer program or routine before the program or routine is entered,プログラムまたはルーチンが開始される前に、コンピュータ プログラムまたはルーチンに必要なデータを保存すること
to suspend the execution of a computer program,コンピュータプログラムの実行を一時停止する
to terminate a process prior to completion,完了前にプロセスを終了するには
to terminate development on one branch by integrating it with another,あるブランチを別のブランチと統合して開発を終了する
to terminate the execution of a computer program,コンピュータプログラムの実行を終了する
to transfer control from a software module to the module that called it,ソフトウェアモジュールからそれを呼び出したモジュールに制御を移すこと
"to transfer control from one software module to another as in (1) and, often, to pass parameters to the other module",(1) のように、あるソフトウェア モジュールから別のソフトウェア モジュールに制御を転送し、多くの場合、パラメータを他のモジュールに渡します。
to transfer data or computer program segments from auxiliary storage to main storage,データまたはコンピュータプログラムセグメントを補助記憶装置から主記憶装置に転送すること
to transfer data or computer program segments from main storage to auxiliary storage for the purpose of freeing main storage for other uses,主記憶装置を他の用途に解放する目的で、データまたはコンピュータプログラムセグメントを主記憶装置から補助記憶装置に転送すること
to transfer programs or data from a computer to a connected computer with fewer resources,より少ないリソースで、コンピュータから接続されたコンピュータにプログラムまたはデータを転送する
to transfer programs or data from a connected computer to a computer with greater resources,接続されたコンピュータからより多くのリソースを備えたコンピュータにプログラムまたはデータを転送するため
"to translate a compiled computer program from its machine language version into a form that resembles, but is not necessarily identical to, the original high-order language program",コンパイルされたコンピュータープログラムをその機械語バージョンから元の高級言語プログラムに似ているが、必ずしも同一ではない形式に翻訳すること
to translate a computer program expressed in a high-order language into its machine language equivalen,高階言語で表現されたコンピュータープログラムを同等の機械語に翻訳すること
to translate a computer program expressed in an assembly language into its machine language equivalent,アセンブリ言語で表現されたコンピュータプログラムを、同等の機械語に翻訳すること
"to translate an assembled computer program from its machine language version into a form that resembles, but is not necessarily identical to, the original assembly language program",アセンブルされたコンピュータ プログラムをその機械語バージョンから元のアセンブリ言語プログラムに似ているが、必ずしも同一ではない形式に翻訳すること
to translate and execute each statement or construct of a computer program before translating and executing the next,次の文を翻訳して実行する前に、コンピュータ プログラムの各ステートメントまたは構成を翻訳して実行すること
to treat an object of one type as an object of another type,ある型のオブジェクトを別の型のオブジェクトとして扱うこと
to treat an object of one type as an object of another type by using a different object,別のオブジェクトを使用して、あるタイプのオブジェクトを別のタイプのオブジェクトとして扱うこと
to undo the effects of a commit,コミットの効果を元に戻すには
to update a view with the current version of the files in its corresponding branch,対応するブランチ内のファイルの現在のバージョンでビューを更新します。
"to use a program to bring up a larger program, such as an operating system",プログラムを使用して、オペレーティング システムなどのより大きなプログラムを起動すること
to write a computer program,コンピュータープログラムを書く
tool that creates a CDIF transfer file,CDIF転送ファイルを作成するツール
"tool that provides support for modeling, i.e., representing, a software product or an information system",モデリング、つまりソフトウェア製品または情報システムの表現をサポートするツール
tool that reads a CDIF transfer file and uses it to create or modify a model,CDIF 転送ファイルを読み取り、それを使用してモデルを作成または変更するツール
"top level technical plan for managing the systems engineering effort which defines how the technical aspects of the project will be organized, structured, and conducted and how the systems engineering processes will be controlled to provide a product that satisfies stakeholder requirements",システム エンジニアリング作業を管理するためのトップレベルの技術計画。プロジェクトの技術的側面がどのように組織され、構造化され、実行されるか、また利害関係者の要件を満たす製品を提供するためにシステム エンジニアリング プロセスがどのように制御されるかを定義します。
"top-down design, top-down testing",トップダウン設計、トップダウンテスト
"top-level plan for managing the SE effort which, as such, defines how the project will be organized, structured, and conducted and how the total engineering process will be controlled to provide a product that satisfies stakeholder requirements",SE の取り組みを管理するためのトップレベルの計画。これにより、プロジェクトがどのように組織され、構造化され、実行されるか、また利害関係者の要件を満たす製品を提供するためにエンジニアリング プロセス全体がどのように制御されるかを定義します。
"top-level technical planning document for a project which addresses technical management processes established by three principal sources: the project's contract or agreement, applicable organizational processes, and the systems engineering project team, as necessary to successfully accomplish the systems engineering-related tasks of the project",プロジェクトのシステム エンジニアリング関連タスクを正常に達成するために必要な、プロジェクトの契約または協定、該当する組織プロセス、およびシステム エンジニアリング プロジェクト チームという 3 つの主要な情報源によって確立された技術管理プロセスに対処する、プロジェクトのトップレベルの技術計画文書。
"total investment in product development, manufacturing, test, distribution, operation, support, training, and disposal",製品開発、製造、テスト、流通、運用、サポート、トレーニング、廃棄への総投資額
total ownership cost,総所有コスト
Total Quality Management,総合的な品質管理
total range of a mapping of systems and software for categorizing them from a particular perspective,システムとソフトウェアを特定の観点から分類するためのマッピングの全範囲
totality of activities required to provide cost-effective support to a software system,ソフトウェア システムに費用対効果の高いサポートを提供するために必要な活動の全体
totality of attributes of a product that determine its ability to satisfy stated and implied needs when used under specified conditions,指定された条件下で使用された場合に、明示的および黙示的なニーズを満たす能力を決定する製品の属性の全体
trace links established for a variability model with both domain assets and application assets where variants are bound,バリアントがバインドされているドメイン資産とアプリケーション資産の両方を使用して、変動モデルに対して確立されたリンクをトレースします。
trace produced from historical data recorded during the execution of a computer program,コンピュータプログラムの実行中に記録された履歴データから生成されたトレース
traceabilities in domain and application requirements respectively and those between them,ドメイン要件とアプリケーション要件それぞれのトレーサビリティ、およびそれらの間のトレーサビリティ
"tracking identified risks, monitoring residual risks, identifying new risks, executing risk response plans, and evaluating their effectiveness throughout the project life cycle",特定されたリスクの追跡、残留リスクの監視、新しいリスクの特定、リスク対応計画の実行、およびプロジェクトのライフサイクル全体にわたるその有効性の評価
Trader Directory User Agent,トレーダーディレクトリユーザーエージェント
Transaction Processing,トランザクション処理
transactional or data functions provided to convert data or provide other user-specified conversion requirement,データを変換したり、その他のユーザー指定の変換要件を提供したりするために提供されるトランザクション関数またはデータ関数
transfer file conforming to ISO/IEC 15475,ISO/IEC 15475に準拠した転送ファイル
"transfer of control from one software module to another, usually with the implication that control will be returned to the calling module",あるソフトウェア モジュールから別のソフトウェア モジュールへの制御の移行。通常は制御が呼び出し側モジュールに返されることを意味します。
transfer of data among functional units according to sets of rules governing data transmission and the coordination of the exchange,データ送信と交換の調整を管理する一連のルールに従った、機能単位間のデータの転送
"transfer of functions of a system to its successor at a given moment. ISO/IEC 2382:2015, Information technology — Vocabulary]",システムの機能をある時点で後継者に移転すること。 ISO/IEC 2382:2015、情報技術 - 語彙]
transfer of pages as in (2),(2)のようなページの転送
Transfer profile,プロファイルの転送
transferring responsibility for managing a risk factor to another organization or functional entity better able to mitigate the risk factor,リスク要因を管理する責任を、より適切にリスク要因を軽減できる別の組織または機能エンティティに移管する
Transfers often occur when a large organization divests a part of itself into a separate legal entity. The Ent enables the recording of entitlement transfers. Transfers are in accordance with the contractual terms and conditions between the software licensor and end-user,移転は、大規模な組織がその一部を別の法人に売却するときによく発生します。 Ent により、権利譲渡の記録が可能になります。転送は、ソフトウェア ライセンサーとエンド ユーザー間の契約条件に従って行われます。
"transformation of inputs to outputs, by means of some mechanisms, and subject to certain controls, that is identified by a function name and modeled by a box",いくつかのメカニズムを使用し、関数名によって識別され、ボックスによってモデル化される特定の制御に従って、入力から出力への変換。
transforming of logic and data from design specifications (design descriptions) into a programming language,設計仕様 (設計記述) からのロジックとデータをプログラミング言語に変換する
"transition is enabled in a particular mode and net marking, when the following conditions are met: (1) the marking of each input place of the transition satisfies the demand imposed on it by its arc annotation evaluated for the particular transition mode; (2) the demand is satisfied when the place's marking contains (at least) the multiset of tokens indicated by the evaluated arc annotation",遷移は、以下の条件が満たされる場合、特定のモードおよびネット マーキングで有効になります。(1) 遷移の各入​​力場所のマーキングは、特定の遷移モードに対して評価されたアーク アノテーションによって課せられる要求を満たします。 (2) 場所のマーキングに、評価されたアーク注釈によって示される複数のトークンセットが (少なくとも) 含まれている場合、要求は満たされます。
translator or interpreter used to construct part or all of a compiler,コンパイラの一部または全体を構築するために使用されるトランスレータまたはインタプリタ
Transmission Code Set,送信コードセット
Transmission Control Protocol,伝送制御プロトコル
Transport Layer Security,トランスポート層セキュリティ
"true loss in value of an asset, determined only when the asset is sold",資産価値の真の損失。資産が売却された場合にのみ決定されます。
true or false logical predicate,真または偽の論理述語
true-false statement about the limitations on the values of an unambiguously defined property — called the claim's property — and limitations on the uncertainty of the property's values falling within these limitations during the claim's duration of applicability under stated conditions,明確に定義された性質（クレームの性質と呼ばれる）の値の制限、および記載された条件下でのクレームの適用期間中にこれらの制限内に収まる性質の値の不確実性に関する制限に関する真偽の記述。
trustworthiness of a computer system such that reliance can be justifiably placed on the service it delivers,コンピュータ システムが提供するサービスに正当に依存できるようなコンピュータ システムの信頼性
Tuple can be used in place of record.,レコードの代わりにタプルを使用できます。
Two kinds of core reports (i.e. executive summary and detailed report) are often produced for reporting results of an instance of benchmarking activity.,ベンチマーク活動のインスタンスの結果を報告するために、2 種類のコア レポート (つまり、エグゼクティブ サマリー レポートと詳細レポート) が作成されることがよくあります。
two or more faults that result in the same failure mode,同じ故障モードを引き起こす 2 つ以上の故障
type of base functional component identified in ISO/IEC 20926:2009,ISO/IEC 20926:2009 で識別される基本機能コンポーネントのタイプ
type of cohesion in which the output of one task performed by a software module serves as input to another task performed by the module,ソフトウェア モジュールによって実行される 1 つのタスクの出力が、モジュールによって実行される別のタスクへの入力として機能する凝集のタイプ
"type of cohesion in which the tasks performed by a software module all contribute to a given program procedure, such as an iteration or decision process",ソフトウェア モジュールによって実行されるタスクがすべて、反復プロセスや決定プロセスなど、特定のプログラム手順に寄与する凝集のタイプ
type of cohesion in which the tasks performed by a software module all contribute to the performance of a single function,ソフトウェア モジュールによって実行されるタスクがすべて、単一の機能のパフォーマンスに寄与する凝集のタイプ
type of cohesion in which the tasks performed by a software module are all required at a particular phase of program execution,ソフトウェア モジュールによって実行されるタスクがすべて、プログラム実行の特定の段階で必要とされる凝集のタイプ
type of cohesion in which the tasks performed by a software module have no functional relationship to one another,ソフトウェア モジュールによって実行されるタスクが互いに機能的な関係を持たない凝集のタイプ
type of cohesion in which the tasks performed by a software module perform logically similar functions,ソフトウェアモジュールによって実行されるタスクが論理的に同様の機能を実行する凝集のタイプ
type of cohesion in which the tasks performed by a software module use the same input data or contribute to producing the same output data,ソフトウェア モジュールによって実行されるタスクが同じ入力データを使用するか、同じ出力データの生成に寄与する凝集のタイプ
"type of computer or hardware device and/or associated operating system, or a virtual environment, on which software can be installed or run",ソフトウェアをインストールまたは実行できるコンピュータまたはハードウェア デバイスおよび/または関連するオペレーティング システム、または仮想環境の種類
type of coupling in which different subsets of the range of values that a data item can assume are used for different and unrelated purposes in different software modules,データ項目が想定できる値の範囲の異なるサブセットが、異なるソフトウェア モジュールで異なる無関係な目的に使用される結合のタイプ。
type of coupling in which one software module affects or depends upon the internal implementation of another,あるソフトウェア モジュールが別のソフトウェア モジュールの内部実装に影響を与える、または依存する結合のタイプ
type of coupling in which one software module communicates information to another module for the explicit purpose of influencing the latter module's execution,あるソフトウェア モジュールが別のモジュールに情報を伝達する結合のタイプで、後者のモジュールの実行に影響を与えるという明示的な目的を持っています。
type of coupling in which output from one software module serves as input to another module,1 つのソフトウェア モジュールからの出力が別のモジュールへの入力として機能する結合のタイプ
type of coupling in which some or all of the contents of one software module are included in the contents of another module,1 つのソフトウェア モジュールの内容の一部またはすべてが別のモジュールの内容に含まれる結合のタイプ
type of coupling in which two software modules access a common data area,2 つのソフトウェア モジュールが共通のデータ領域にアクセスする結合のタイプ
type of functional suitability testing conducted to evaluate whether procedural instructions for interacting with a test item or using its outputs meet user requirements and support the purpose of their use,テスト項目を操作するための手順またはその出力を使用するための手順指示がユーザーの要件を満たし、その使用目的をサポートしているかどうかを評価するために実施される機能適合性テストの一種。
"type of integration testing in which software elements, hardware elements, or both are combined all at once into an overall system, rather than in stages",ソフトウェア要素、ハードウェア要素、またはその両方を段階的にではなくシステム全体に一度に組み合わせる統合テストのタイプ
type of modular decomposition in which a system is broken down into a hierarchy of components through a series of top-down refinement,一連のトップダウンの改良を通じてシステムをコンポーネントの階層に分割するモジュラー分解のタイプ
type of modular decomposition in which a system is broken down into components that correspond to system functions and subfunctions,システムをシステム機能とサブ機能に対応するコンポーネントに分割するモジュール分解のタイプ
type of on-screen documentation in which the information that is displayed depends upon the user's view of the software,表示される情報がユーザーのソフトウェアの見方に依存する、画面上のドキュメントのタイプ
type of operation for a system,システムの操作の種類
"type of performance efficiency testing conducted to evaluate a test item's behavior under conditions of loading above anticipated or specified capacity requirements, or of resource availability below minimum specified requirements",予想または指定された容量要件を超える負荷条件、または指定された最小要件を下回るリソース可用性の条件下でテスト項目の動作を評価するために実施されるパフォーマンス効率テストの種類
"type of performance efficiency testing conducted to evaluate the behavior of a test item under anticipated conditions of varying load, usually between anticipated conditions of low, typical, and peak usage",さまざまな負荷の予想される条件下で、通常は低使用量、標準使用量、およびピーク使用量の予想条件の間で、テスト項目の動作を評価するために実施されるパフォーマンス効率テストの種類
"type of performance efficiency testing conducted to evaluate the capability of the test item to process specified volumes of data (usually at or near maximum specified capacity) in terms of throughput capacity, storage capacity, or both",スループット容量、ストレージ容量、またはその両方の観点から、指定された量のデータ (通常は指定された最大容量またはそれに近い) を処理するテスト項目の能力を評価するために実施されるパフォーマンス効率テストの種類
"type of performance efficiency testing conducted to evaluate the level at which increasing load (of users, transactions, data storage, etc.) compromises a test item's ability to sustain required performance",(ユーザー、トランザクション、データストレージなどの) 負荷の増加により、必要なパフォーマンスを維持するためのテスト項目の能力が損なわれるレベルを評価するために実施されるパフォーマンス効率テストの一種
type of performance efficiency testing conducted to evaluate whether a test item can sustain a required load continuously for a specified period of time,試験項目が一定期間継続して必要な負荷に耐えられるかどうかを評価するために実施される性能効率試験の一種
type of portability testing conducted to evaluate whether a test item or set of test items can be installed as required in all specified environments,テスト項目またはテスト項目のセットが、指定されたすべての環境に必要に応じてインストールできるかどうかを評価するために実施される移植性テストの種類
type of programmable ROM in which the memory can be erased using electrical current and rewritten,電流を使って記憶を消去したり書き換えたりできるプログラマブルROMの一種
type of programmable ROM which can be rewritten after erasing the existing data using ultraviolet (UV) rays,紫外線（UV）を使って既存のデータを消去して書き換えることができるプログラマブルROMの一種
type of prototyping in which emphasis is placed on developing prototypes early in the development process to permit early feedback and analysis in support of the development process,開発プロセスをサポートするために早期のフィードバックと分析を可能にするために、開発プロセスの初期段階でプロトタイプの開発に重点が置かれるプロトタイピングのタイプ。
"type of recovery in which a system, program, database, or other system resource is restored to a new, not previously occupied state in which it can perform required functions",システム、プログラム、データベース、またはその他のシステム リソースを、必要な機能を実行できる、以前に占有されていない新しい状態に復元するリカバリのタイプ
type of relationship which expresses the number and type of the roles,役割の数と種類を表す関係の種類
"type of reliability testing that measures the degree to which system state can be restored from backup within specified parameters of time, cost, completeness, and accuracy in the event of failure",障害発生時に、指定された時間、コスト、完全性、精度のパラメータ内でバックアップからシステム状態を復元できる程度を測定する信頼性テストの一種
type of tag used to represent a grouping of multiple other tags,他の複数のタグのグループを表すために使用されるタグのタイプ
"type of testing conducted to evaluate the ability of a test item to perform its required functions, including evaluating the frequency with which failures occur, when it is used under stated conditions for a specified period of time",指定された条件下で指定された期間使用した場合に、テスト項目が必要な機能を実行する能力を評価するために実施されるテストの種類。これには、指定された条件下でテスト項目が使用された場合に故障が発生する頻度の評価も含まれます。
type of testing conducted to evaluate the degree to which a test item accomplishes its designated functions within given constraints of time and other resources,時間やその他のリソースの与えられた制約内で、テスト項目がその指定された機能をどの程度達成するかを評価するために実施されるテストの種類
"type of testing conducted to evaluate the degree to which a test item, and associated data and information, are protected so that unauthorized persons or systems cannot use, read, or modify them, and authorized persons or systems are not denied access to them",テスト項目、および関連するデータと情報が、権限のない人やシステムが使用、読み取り、変更できないように保護され、権限のある人やシステムがそれらへのアクセスを拒否されない程度に保護されているかを評価するために実施されるテストの種類。
"type of testing conducted to evaluate the ease with which a test item can be transferred from one hardware or software environment to another, including the level of modification needed for it to be executed in various types of environments",テスト項目をあるハードウェアまたはソフトウェア環境から別の環境に移行する容易さを評価するために実施されるテストの種類。さまざまな種類の環境で実行するために必要な変更のレベルも含まれます。
"type of testing that measures the degree to which a test item can function satisfactorily alongside other independent products in a shared environment (co-existence), and where necessary, exchanges information with other systems or components (interoperability).",テスト項目が共有環境で他の独立した製品と並行して十分に機能し (共存)、必要に応じて他のシステムまたはコンポーネントと情報を交換できる (相互運用性) 程度を測定するテストの種類。
"type of unscripted experience-based testing in which the tester spontaneously designs and executes tests based on the tester's existing relevant knowledge, prior exploration of the test item (including the results of previous tests), and heuristic ""rules of thumb"" regarding common software behaviors and types of failure",テスターが既存の関連知識、テスト項目の事前調査 (以前のテストの結果を含む)、および一般的なソフトウェアの動作と障害の種類に関するヒューリスティックな「経験則」に基づいて、テスターが自発的にテストを設計および実行する、台本なしの経験ベースのテストのタイプ。
type of usability testing used to measure the degree to which a test item can be operated by users with the widest possible range of characteristics and capabilities,可能な限り幅広い特性と能力を持つユーザーがテスト項目をどの程度操作できるかを測定するために使用されるユーザビリティ テストの種類
type satisfied by any object that satisfies a particular interface,特定のインターフェイスを満たす任意のオブジェクトによって満たされる型
type whose members are object references.,メンバーがオブジェクト参照である型。
"type, the instances of which are subtypes of another type called the 'partitioned type'",タイプ。そのインスタンスは「パーティション タイプ」と呼ばれる別のタイプのサブタイプです。
"Types include absolute loader, linking loader, relocating loader.",アブソリュートローダ、リンキングローダ、リロケートローダなどの種類があります。
"Types include addressing exception, data exception, operation exception, overflow exception, protection exception, and underflow exception.",種類には、アドレッシング例外、データ例外、演算例外、オーバーフロー例外、保護例外、およびアンダーフロー例外が含まれます。
"Types include box diagram, flowchart, input-process-output chart, state diagram",タイプには、ボックス図、フローチャート、入力プロセス出力チャート、状態図が含まれます
"Types include branch testing, path testing, statement testing.",タイプには、ブランチ テスト、パス テスト、ステートメント テストが含まれます。
"Types include change dump, dynamic dump, memory dump, postmortem dump, selective dump, snapshot dump, static dump.",タイプには、変更ダンプ、動的ダンプ、メモリ ダンプ、ポストモーテム ダンプ、選択的ダンプ、スナップショット ダンプ、静的ダンプが含まれます。
"Types include code breakpoint, data breakpoint, dynamic breakpoint, epilog breakpoint, programmable breakpoint, prolog breakpoint, static breakpoint. A breakpoint is said to be set when both a point in the program and an event that will cause suspension of execution at that point are defined; it is said to be initiated when program execution is suspended.",タイプには、コード ブレークポイント、データ ブレークポイント、動的ブレークポイント、エピローグ ブレークポイント、プログラマブル ブレークポイント、プロローグ ブレークポイント、静的ブレークポイントが含まれます。ブレークポイントは、プログラム内のポイントと、そのポイントで実行の一時停止を引き起こすイベントの両方が定義されたときに設定されると言われます。これは、プログラムの実行が一時停止されたときに開始されると言われています。
"Types include coincidental, communicational, functional, logical, procedural, sequential, and temporal.",タイプには、偶然性、コミュニケーション性、機能性、論理性、手続き性、逐次性、および時間性が含まれます。
"Types include common-environment coupling, content coupling, control coupling, data coupling, hybri coupling, and pathological coupling.",タイプには、共通環境カップリング、コンテンツ カップリング、制御カップリング、データ カップリング、ハイブリッド カップリング、および病理学的カップリングが含まれます。
"Types include critical design review, preliminary design review, system design review.",種類には、クリティカル設計レビュー、予備設計レビュー、システム設計レビューなどがあります。
"Types include diagonal microinstruction, horizontal microinstruction, vertical microinstruction.",種類には、斜めマイクロ命令、水平マイクロ命令、垂直マイクロ命令があります。
"Types include execution trace, retrospective trace, subroutine trace, symbolic trace, variable trace.",種類には、実行トレース、遡及トレース、サブルーチン トレース、シンボリック トレース、変数トレースなどがあります。
"Types include hardware design language, program design language.",種類には、ハードウェア設計言語、プログラム設計言語が含まれます。
"Types include input assertion, loop assertion, output assertion.",タイプには、入力アサーション、ループ アサーション、出力アサーションが含まれます。
"Types include master library, production library, software development library, software repository, system library.",タイプには、マスター ライブラリ、実稼働ライブラリ、ソフトウェア開発ライブラリ、ソフトウェア リポジトリ、システム ライブラリが含まれます。
"Types include system requirements review, software requirements review.",タイプには、システム要件のレビュー、ソフトウェア要件のレビューが含まれます。
"Types include test case specification, test incident report, test log, test plan, test procedure, test report.",タイプには、テスト ケース仕様、テスト インシデント レポート、テスト ログ、テスト計画、テスト手順、テスト レポートが含まれます。
types of quantifiable properties and relationships whose instances to describe the dynamic behavior of software execution,ソフトウェア実行の動的な動作を記述するインスタンスの定量化可能なプロパティと関係の種類
types of statements in which a choice between two or more possible outcomes controls which set of actions will result,2 つ以上の考えられる結果からの選択によって、どの一連のアクションが結果として生じるかを制御するステートメントのタイプ
"Typical channels for software include direct, VAR, OEM, reseller, and educational reseller. Bindings that require channels are referred to as distributed bindings in the engineering language; bindings between engineering objects that do not require channels (e.g. between engineering objects in the same cluster) are referred to as local bindings.",ソフトウェアの一般的なチャネルには、ダイレクト、VAR、OEM、再販業者、教育再販業者などがあります。チャネルを必要とするバインディングは、エンジニアリング言語では分散バインディングと呼ばれます。チャネルを必要としないエンジニアリング オブジェクト間のバインディング (同じクラスター内のエンジニアリング オブジェクト間など) は、ローカル バインディングと呼ばれます。
"Typical contents include an inventory of system or component parts, identification of changes incorporated into this version, and installation and operating information unique to the version described.",一般的なコンテンツには、システムまたはコンポーネントの部品の一覧表、このバージョンに組み込まれた変更の識別、説明されているバージョンに固有のインストールおよび操作情報が含まれます。
"Typical contents include system or component architecture, control logic, data structures, input/output formats, interface descriptions, and algorithm.",一般的な内容には、システムまたはコンポーネントのアーキテクチャ、制御ロジック、データ構造、入出力形式、インターフェイスの説明、アルゴリズムが含まれます。
"Typical decisions are simple selections (e.g. if-then-else), to decide when to exit loops (e.g. while-loop), and case (switch) statements (e.g. case-1-2-3-",典型的な決定は、単純な選択 (例: if-then-else)、ループを終了するタイミングの決定 (例: while ループ)、および case (switch) ステートメント (例: case-1-2-3-) です。
"Typical objects of comparison are similar versions of source code, object code, database files, or test results.",一般的な比較対象は、類似バージョンのソース コード、オブジェクト コード、データベース ファイル、またはテスト結果です。
"typically associated with unique products for sales purposes, such as software entitlements. It can correspond uniquely to specific software products, or represent packages of software, with specific terms and conditions, such as whether it relates to a full product, upgrade product, or maintenance on an existing product.",通常、ソフトウェア資格など、販売目的の固有の製品に関連付けられています。これは、製品全体、アップグレード製品、または既存製品のメンテナンスに関連するかどうかなど、特定の契約条件を使用して、特定のソフトウェア製品に一意に対応したり、ソフトウェアのパッケージを表すことができます。
"Typically described are procedures for preparation, operation, monitoring, and recovery. An operator manual is distinguished from a user manual when a distinction is made between those who operate a computer system (mounting tapes, etc.) and those who use the system for its intended purpose.",通常、準備、操作、監視、および回復の手順が説明されています。コンピュータ システムを操作する人 (テープの取り付けなど) とシステムをその意図された目的に使用する人を区別する場合、オペレータ マニュアルはユーザー マニュアルと区別されます。
"Typically described are system or component capabilities, limitations, options, permitted inputs, expected outputs, possible error messages, and special instructions. A user manual is distinguished from an operator manual when a distinction is made between those who operate a computer system (mounting tapes, etc.) and those who use the system for its intended purpose.",通常、システムまたはコンポーネントの機能、制限、オプション、許可される入力、予期される出力、考えられるエラー メッセージ、および特別な指示が説明されます。ユーザーマニュアルは、コンピュータシステムを操作する人（テープの取り付けなど）とシステムをその意図された目的に使用する人を区別する場合に、オペレータマニュアルと区別されます。
Typically described are the diagnostic features of the system or component and the diagnostic tools available for its support.,通常、システムまたはコンポーネントの診断機能と、そのサポートに使用できる診断ツールについて説明します。
"Typically described are the equipment configuration, operational characteristics, programming features, input/output features, and compilation or assembly features of the computer system.",通常、コンピュータシステムの機器構成、動作特性、プログラミング機能、入出力機能、コンパイルまたはアセンブリ機能が説明されます。
"Typically described are the hardware and software that make up the system or component and procedures for servicing, repairing, or reprogramming it.",通常、システムまたはコンポーネントを構成するハードウェアとソフトウェア、およびその保守、修理、または再プログラミングの手順が説明されます。
"Typically included are functional requirements, performance requirements, interface requirements, design requirements, and development standards.",通常、機能要件、パフォーマンス要件、インターフェイス要件、設計要件、開発標準が含まれます。
Typically used for online computer program development and checkout.,通常、オンラインのコンピューター プログラムの開発とチェックアウトに使用されます。
"typically, a suite of evaluation and observation rooms fitted with video and audio equipment for recording user responses",通常、ユーザーの反応を記録するためのビデオおよびオーディオ機器を備えた一連の評価および観察室
"typically, from a personal computer to a server",通常、パーソナルコンピュータからサーバーへ
"typically, from a server to a personal computer",通常、サーバーからパーソナルコンピュータへ
"Typically, the number of functions is recorded per type, and a default value is used for the complexity average for the transactional functions (transactions) and low for the data functions (logical files).",通常、関数の数はタイプごとに記録され、トランザクション関数 (トランザクション) の複雑さの平均にはデフォルト値が使用され、データ関数 (論理ファイル) の複雑さの平均にはデフォルト値が使用されます。
"UML diagram that shows actors, use cases, and their relationships",アクター、ユースケース、およびそれらの関係を示す UML 図
"unambiguous name, in a given naming context",特定のネーミングコンテキストにおける明確な名前
unbroken unidirectional traversal of all nodes between two specified nodes in a tree,ツリー内の 2 つの指定されたノード間のすべてのノードの途切れることのない一方向の走査
"uncertain event or condition that, if it occurs, has a positive or negative effect on one or more project objectives",発生すると、1 つまたは複数のプロジェクトの目標にプラスまたはマイナスの影響を与える不確実な出来事または状態
Understandability has to do with the system's coherence at a more general level than readability does.,理解しやすさは、読みやすさよりも、より一般的なレベルでのシステムの一貫性と関係があります。
"undertaking with pre-specified objectives, magnitude and duration",事前に指定された目的、規模、期間を伴う取り組み
undesirable consequence associated with a loss,損失に伴う望ましくない結果
"undesirable situation concerning an application, the application management organization, its processes or working methods, which demands structural analysis of the cause and a structural solution",原因の構造分析と構造的な解決策を必要とする、アプリケーション、アプリケーション管理組織、そのプロセスまたは作業方法に関する望ましくない状況
undocumented information,文書化されていない情報
Unified Modeling Language,統一モデリング言語
uniform resource identifier,統一リソース識別子
uniform resource locator,ユニフォームリソースロケーター
"unique and verifiable system or software product to perform a service, that is subject to approval by the project sponsor or customer",サービスを実行するための独自の検証可能なシステムまたはソフトウェア製品。プロジェクト スポンサーまたは顧客の承認が必要です。
unique identifier for an entity,エンティティの一意の識別子
unique identifier of the state of software execution,ソフトウェアの実行状態を表す一意の識別子
unique item of information about an entity,エンティティに関する固有の情報項目
unique short form of a model name that is used to construct diagram references,ダイアグラム参照の構築に使用されるモデル名の固有の短縮形
unique string of number and letter values indicating a unique revision of an item,項目の一意のリビジョンを示す数字と文字の値からなる一意の文字列
unique value that represents the stage of progress of software in its execution,ソフトウェアの実行における進行段階を表す一意の値
"unique, descriptive name that distinguishes one IDEF0 model from other IDEF0 models with which it is associated",1 つの IDEF0 モデルを、それが関連付けられている他の IDEF0 モデルから区別する一意の説明的な名前
"unique, user-recognizable, non-repeated attribute",ユニークで、ユーザーが認識できる、繰り返されない属性
"unique, user-recognizable, non-repeated field in a BFC",BFC 内の固有の、ユーザーが認識できる、繰り返されないフィールド
uniquely identifiable entry in an issue-tracking system that describes a problem or an enhancement,問題または機能強化を説明する、問題追跡システム内の一意に識別可能なエントリ
"uniquely identified unit of information for human use, such as a report, specification, manual or book, in printed or electronic form",人間が使用するための一意に識別される情報の単位。レポート、仕様書、マニュアル、書籍など、印刷または電子形式で提供される。
unit development folder,ユニット開発フォルダ
unit of information that can be represented by either a zero or a one. 2 element of computer storage that can hold a unit of information as in (1),0 または 1 で表すことができる情報の単位。 2 (1) のような情報単位を保持できるコンピュータ記憶装置の要素
unit of measure for functional size as defined within ISO/IEC 20926:2009,ISO/IEC 20926:2009 内で定義されている機能サイズの測定単位
unit that enables the serial exchange of data between a microprocessor and peripherals,マイクロプロセッサと周辺機器間のデータのシリアル交換を可能にするユニット
unit that is the subject of a behavior modeling,行動モデリングの対象となるユニット
unit that stores data only while power is on,電源が入っている間だけデータを保存するユニット
unit that stores data whether power is on or off,電源のオン/オフに関係なくデータを保存するユニット
unit with application control function on a single chip,アプリケーション制御機能を1チップ上に搭載したユニット
United Nations standard products and services code,国連の製品およびサービスの標準コード
Units of measurement have conventionally assigned names and symbols.,測定単位には従来のように名前と記号が割り当てられています。
universal asynchronous receiver/transmitter,ユニバーサル非同期受信機/送信機
universal serial bus,ユニバーサルシリアルバス
"universal set of systems and software which has one or more classification axes as its individual dimension, by which stakeholder's concerns on categorization are expressed",個別の次元として 1 つ以上の分類軸を持ち、分類に対する利害関係者の懸念を表現するシステムおよびソフトウェアの普遍的なセット。
Universe of Discourse,談話の宇宙
"Unlike a diagram, the contents of a For Exposition Only page (FEO page) need not comply with IDEF0 rules.",図とは異なり、For Exposition Only ページ (FEO ページ) のコンテンツは IDEF0 ルールに準拠する必要はありません。
"Unlike a permission, an authorization is an empowerment.",許可とは異なり、承認は権限を与えるものです。
unmodified source statement obtained for the product from an external source,外部ソースから製品に関して取得した未変更のソース ステートメント
"unplanned event or series of events that results in death, injury, illness, environmental damage, or damage to or loss of equipment or property",死亡、傷害、病気、環境破壊、または設備や財産の損傷や損失を引き起こす予期せぬ出来事または一連の出来事
unplanned interruption to a service or a reduction in the quality of a service at a specific time,特定の時間におけるサービスの計画外の中断またはサービスの品質の低下
unrestricted grouping of software behavior concept instances into a particular named subset,ソフトウェア動作概念インスタンスを特定の名前付きサブセットに無制限にグループ化する
unscheduled modification performed to temporarily keep a system operational pending corrective maintenance,修正メンテナンスまで一時的にシステムの動作を維持するために実行される予定外の変更
Upper Layers Architecture,上位層のアーキテクチャ
uppercase letter in a page reference that denotes a specific type of model page,特定の種類のモデル ページを示すページ参照内の大文字
"Usability can either be specified or measured as a product quality characteristic in terms of its subcharacteristics, or specified or measured directly by measures that are a subset of quality in use.",ユーザビリティは、その副特性の観点から製品品質特性として指定または測定することも、使用中の品質のサブセットである尺度によって直接指定または測定することもできます。
usability evaluation in which one or more evaluators step through a scenario playing the role of a user and identifying usability problems associated with successful completion of the scenario,ユーザビリティ評価。1 人以上の評価者がユーザーの役割を果たしシナリオを段階的に実行し、シナリオの正常な完了に関連するユーザビリティの問題を特定します。
"Usability inspection is the generic term for several methods, including but not limited to heuristic evaluation, cognitive walkthroughs, standards inspection, pluralistic walkthroughs, and consistency inspections. The inspectors can include usability specialists, developers, end users or other types of professionals. The evaluative criteria can include good practice and/or documented principles, guidelines, requirements or standards. The evaluation can be conducted with or without the help of referenced documents.",ユーザビリティ検査は、ヒューリスティック評価、コグニティブウォークスルー、標準検査、多元的ウォークスルー、一貫性検査を含むがこれらに限定されない、いくつかの方法の総称です。検査官には、ユーザビリティの専門家、開発者、エンドユーザー、またはその他の種類の専門家が含まれる場合があります。評価基準には、優れた実践および/または文書化された原則、ガイドライン、要件、または標準を含めることができます。評価は、参照ドキュメントの有無にかかわらず実施できます。
"Usability objectives can be stated as user requirements, in which case the level to be achieved is a usability requirement, or they can be stated as desired target levels, depending on their use in design and evaluation.",ユーザビリティ目標は、設計や評価での用途に応じて、達成すべきレベルがユーザビリティ要件である場合、ユーザ要件として記述することも、望ましい目標レベルとして記述することもできます。
"usability of a product, service, environment or facility by people with the widest range of capabilities",最も幅広い能力を持つ人々による製品、サービス、環境、施設の使いやすさ
usage mode that is intended to provide quick access to specific information for software users who are generally familiar with the software functions,一般にソフトウェアの機能に精通しているソフトウェア ユーザーが特定の情報に素早くアクセスできるようにすることを目的とした使用モード
usage mode that is intended to teach the use of software in performing tasks,タスクを実行する際のソフトウェアの使用法を教えることを目的とした使用モード
"Use errors can result from a mismatch between the characteristics of the user, user interface, task, or use environment. Use error includes the inability of the user to complete a task. Users might be aware or unaware that a use error has occurred. A malfunction of an interactive system that causes an unexpected result is not considered a use error. An unexpected physiological response of the patient is not by itself considered a use error.",使用エラーは、ユーザー、ユーザー インターフェイス、タスク、または使用環境の特性間の不一致によって発生する可能性があります。使用エラーには、ユーザーがタスクを完了できないことが含まれます。ユーザーは、使用エラーが発生したことを認識している場合もあれば、認識していない場合もあります。予期しない結果を引き起こす対話型システムの誤動作は、使用上のエラーとは見なされません。患者の予期せぬ生理学的反応は、それ自体では使用上の誤りとはみなされません。
"use of a computer to design a device or a system, display it on a computer monitor or printer, simulate its operation, and provide statistics on its performance",コンピュータを使用してデバイスまたはシステムを設計し、コンピュータのモニタまたはプリンタに表示し、その動作をシミュレートし、そのパフォーマンスに関する統計を提供すること
"use of a data processing system to create, scan, analyze, enhance, interpret, or display images",画像の作成、スキャン、分析、強化、解釈、または表示のためのデータ処理システムの使用
use of a data processing system to represent selected behavioral characteristics of a physical or abstract system,物理的または抽象的なシステムの選択された動作特性を表すデータ処理システムの使用
"use of a metric to assign a value (e.g., a number or category) from a scale to an attribute of an entity",スケールからエンティティの属性に値 (数値やカテゴリなど) を割り当てるためのメトリックの使用
use of an asset in the solution of different problems,さまざまな問題の解決における資産の使用
use of computers to aid in the software engineering process,ソフトウェアエンジニアリングプロセスを支援するためのコンピュータの使用
"use of different processors, storage media, programming languages, algorithms, or development teams",さまざまなプロセッサ、ストレージメディア、プログラミング言語、アルゴリズム、または開発チームの使用
"use of indentation, blank lines, and other visual cues to show the logical structure of a program",プログラムの論理構造を示すために、インデント、空行、その他の視覚的な手がかりを使用すること
use of matrixes to manage pair-wise relationships in decision-making,意思決定におけるペアごとの関係を管理するためのマトリックスの使用
"use of scientific principles, technical information, and imagination in the definition of a software system to perform pre-specified functions with maximum economy and efficiency",最大限の経済性と効率性で事前に指定された機能を実行するソフトウェア システムの定義における科学的原理、技術情報、想像力の使用
use of software tools to aid in the transformation of a program specification into a program that realizes that specification,プログラム仕様をその仕様を実現するプログラムに変換するのに役立つソフトウェア ツールの使用
"use of systematic techniques, such as prototypes and structured surveys, to proactively identify and document customer and end-user need",プロトタイプや構造化された調査などの体系的な手法を使用して、顧客とエンドユーザーのニーズを積極的に特定して文書化する
use of the value of a variable in any type of statement,あらゆるタイプのステートメントでの変数の値の使用
use of two identical processors,2 つの同一のプロセッサの使用
"used as the generic term for tables, figures, exhibits, screen captures, flow charts, diagrams, drawings, icons, and other graphic elements",表、図、展示物、スクリーン キャプチャ、フローチャート、図、図面、アイコン、およびその他のグラフィック要素の総称として使用されます。
used during direct memory access,ダイレクトメモリアクセス中に使用される
used to determine if preventive or corrective action is needed to meet the project objectives,プロジェクトの目的を達成するために予防措置または是正措置が必要かどうかを判断するために使用されます。
used to determine the rating level associated with the software for a specific quality characteristic. Rating and rating levels can be applied to characteristics other than quality characteristics.,特定の品質特性に対するソフトウェアに関連付けられた評価レベルを決定するために使用されます。評価および評価レベルは、品質特性以外の特性にも適用できます。
"used to reserve space in a program or, if executed repeatedly, to wait for a given event; often abbreviated no-op",プログラム内のスペースを予約するために、または繰り返し実行される場合は特定のイベントを待つために使用されます。ノーオペと略されることが多い
used with a circuit architecture in single stable state,単一安定状態の回路アーキテクチャで使用
user action or lack of user action while using the interactive system that leads to a different result than that intended by the manufacturer or expected by the user,インタラクティブ システム使用中のユーザー アクション、またはユーザー アクションの欠如により、メーカーが意図したものまたはユーザーが期待したものとは異なる結果が生じること
user behavior that a system accepts as a request for a particular operation,システムが特定の操作の要求として受け入れるユーザーの動作
"user documentation that describes, in a worksheet format, the required and optional input data for a system or component",システムまたはコンポーネントの必須およびオプションの入力データをワークシート形式で説明するユーザー ドキュメント
"User experience is a consequence of brand image, presentation, functionality, system performance, interactive behavior, and assistive capabilities of the interactive system; the user's internal and physical state resulting from prior experiences, attitudes, skills and personality; and the context of use.",ユーザー エクスペリエンスは、ブランド イメージ、プレゼンテーション、機能、システム パフォーマンス、インタラクティブな動作、インタラクティブ システムの支援機能の結果です。過去の経験、態度、スキル、性格に起因するユーザーの内部および身体的状態。そして使用のコンテキスト。
User interaction specifications focus on user interactions without considering implementation details.,ユーザー インタラクションの仕様は、実装の詳細を考慮せず、ユーザー インタラクションに重点を置いています。
"User interface elements can be interactive or not, and either entities relevant to the task or entities of the user interface",ユーザー インターフェイス要素はインタラクティブであってもなくてもよく、タスクに関連するエンティティまたはユーザー インターフェイスのエンティティのいずれかです。
"user recognizable group of logically related data or control information, which is referenced by the application being measured, but which is maintained within the boundary of another application",ユーザーが認識できる、論理的に関連したデータまたは制御情報のグループ。測定対象のアプリケーションによって参照されますが、別のアプリケーションの境界内に維持されます。
user requirements,ユーザーの要件
"User requirements specify the extent to which user needs and capabilities are to be met when using the system. They are not requirements on the users. User requirements are derived from user needs and capabilities in order to make use of the system in an effective, efficient, safe and satisfying manner. User requirements comprise two subsets: functional user requirements and non-functional user requirements. [ISO 25063:2014] In software-engineering terms, user requirement comprise both ""functional"" and ""non-functional"" requirements based on user needs and capabilities",ユーザー要件は、システム使用時にユーザーのニーズと機能がどの程度満たされるかを指定します。それらはユーザーの要件ではありません。ユーザー要件は、効果的、効率的、安全かつ満足のいく方法でシステムを利用するためのユーザーのニーズと能力から導き出されます。ユーザー要件は、機能的ユーザー要件と非機能的ユーザー要件の 2 つのサブセットで構成されます。 [ISO 25063:2014] ソフトウェアエンジニアリング用語では、ユーザー要件には、ユーザーのニーズと能力に基づいた「機能」要件と「非機能」要件の両方が含まれます。
"user stories associated by a common factor, such as functionality, data source, or security level",機能、データソース、セキュリティレベルなどの共通要素によって関連付けられたユーザーストーリー
user terminal that has built-in data processing capability,データ処理機能を内蔵したユーザー端末
user terminal that has no independent data processing capability,独立したデータ処理能力を持たないユーザー端末
user terminal with a display screen and usually equipped with an input unit such as a keyboard,表示画面を備え、通常はキーボードなどの入力ユニットを備えたユーザー端末
user that is a sender or an intended recipient of data in the Functional User Requirements of a piece of software,ソフトウェアの機能ユーザー要件におけるデータの送信者または意図された受信者であるユーザー
"user-defined portion of a job, explicitly identified by a job control statemen",ジョブのユーザー定義部分。ジョブ制御ステートマンによって明示的に識別される
user-defined unit of work that is to be accomplished by a computer,コンピュータによって実行されるユーザー定義の作業単位
user-oriented document that describes a system's operational characteristics from the end user's viewpoint,エンドユーザーの観点からシステムの動作特性を説明するユーザー指向の文書
user-recognizable and satisfies a functional user requirement,ユーザーが認識可能であり、ユーザーの機能要件を満たしている
user-recognizable group of logically related data or control information maintained within the boundary of the application being measured,測定対象のアプリケーションの境界内に維持される、論理的に関連したデータまたは制御情報のユーザーが認識できるグループ
user-recognizable sub-group of data element types within a data function,データ関数内のデータ要素タイプのユーザーが認識可能なサブグループ
user's subjective response when using the product,製品使用時のユーザーの主観的な反応
"users, tasks, equipment (hardware, software and materials), and the physical and social environments in which a system, product, or service is used [ISO/IEC 25063:2014 Systems and software Engineering — Systems and software product Quality Requirements and Evaluation (SQuaRE) — Common Industry Format (CIF) for usability: Context of use description] 2 users, tasks, equipment (hardware, software and materials), and the physical and social environments in which a product is used",ユーザー、タスク、機器 (ハードウェア、ソフトウェア、および材料)、およびシステム、製品、またはサービスが使用される物理的および社会的環境 [ISO/IEC 25063:2014 システムおよびソフトウェアエンジニアリング - システムおよびソフトウェア製品の品質要件と評価 (SQuaRE) - ユーザビリティに関する共通業界フォーマット (CIF): 使用のコンテキスト] 2 ユーザー、タスク、機器 (ハードウェア、ソフトウェア、および材料)、および製品が使用される物理的および社会的環境
"Using a software product can include accessing, copying, distributing, installing and executing the software product, depending on the license's terms and conditions",ソフトウェア製品の使用には、ライセンスの契約条件に応じて、ソフトウェア製品へのアクセス、コピー、配布、インストール、実行が含まれる場合があります。
Usually throughput is defined by the rate of terminated tasks during a period of time.,通常、スループットは、一定期間内に終了したタスクの割合によって定義されます。
"Usually, methodology elements include the specification of what tasks, activities, techniques, models, documents, languages and/or notations can or must be used when applying the methodology. Methodology elements are related to each other, comprising a network of abstract concepts. Typical methodology elements are Capture Requirements, Write Code for Methods (kinds of tasks), Requirements Engineering, High-Level Modeling (kinds of activities), Pseudo-code, Dependenc Graphs (notations), Class, Attribute (kinds of model building blocks), Class Model, Class Diagram, Requirements Specification (kind of work products).",通常、方法論の要素には、方法論を適用するときにどのようなタスク、アクティビティ、技術、モデル、文書、言語、および/または表記法を使用できる、または使用しなければならないかの仕様が含まれます。方法論の要素は相互に関連しており、抽象概念のネットワークを構成しています。典型的な方法論要素は、要件のキャプチャ、メソッドのコードの作成 (タスクの種類)、要件エンジニアリング、高レベル モデリング (アクティビティの種類)、擬似コード、依存グラフ (表記法)、クラス、属性 (モデル構築ブロックの種類)、クラス モデル、クラス図、要件仕様 (作業成果物の種類) です。
utilize benchmarking results activity,ベンチマーク結果の活用アクティビティ
"Validation in a system life cycle context is the set of activities ensuring and gaining confidence that a system is able to accomplish its intended use, goals, and objectives. The right system has been built. Validation demonstrates that the system can be used by the users for their specific tasks. ""Validated"" is used to designate the corresponding status. Multiple validations can be carried out if there are different intended uses.",システムのライフサイクルのコンテキストにおける検証は、システムが意図された用途、目標、目的を達成できることを確認し、確信を得る一連のアクティビティです。適切なシステムが構築されています。検証により、ユーザーが特定のタスクにシステムを使用できることが実証されます。 「Validated」は対応するステータスを指定するために使用されます。使用目的が異なる場合は、複数の検証を実行できます。
value assigned to a parameter by a called module for access by the calling module,呼び出し側モジュールによるアクセスのために、呼び出されたモジュールによってパラメータに割り当てられた値
"Value can be considered in terms of usefulness, importance, preference, acceptability, etc.; the evaluated target can be, for example, a credit rating, a system state, a potential behavior.",価値は、有用性、重要性、好み、受け入れやすさなどの観点から考えることができます。評価対象は、たとえば、信用格付け、システム状態、潜在的な動作などです。
value of the direct metric that represents a quality factor,品質係数を表す直接指標の値
"value representing project-unique characteristic, such as complexity, criticality, risk, safety level, security level, desired performance, and reliability, that define the importance of the system, software, or hardware to the user",ユーザーにとってのシステム、ソフトウェア、またはハードウェアの重要性を定義する、複雑さ、重要度、リスク、安全性レベル、セキュリティレベル、望ましいパフォーマンス、信頼性などのプロジェクト固有の特性を表す値。
value taken from the transition's type when considering a high-level Petri Net graph,高レベルのペトリ ネット グラフを考慮する場合に、遷移のタイプから取得される値
value that is atomic,アトミックな値
value that is complex,複素数の値
value that unambiguously identifies an object.,オブジェクトを明確に識別する値。
value that uniquely identifies component instances within the scope of the home that manages them,コンポーネント インスタンスを管理するホームのスコープ内でコンポーネント インスタンスを一意に識別する値
value-added reselle,付加価値のある再販
"valueless token, normally represented by a black dot, and used in place/transition nets (as opposed to high-level nets)",無価値トークン。通常は黒い点で表され、(高レベルのネットとは対照的に) プレース/遷移ネットで使用されます。
"values 1 and 2 cause one branch, 3 and 4 cause another, and so on",値 1 と 2 は 1 つの分岐を引き起こし、3 と 4 は別の分岐を引き起こします。
"values assumed at a given instant by the variables that define the characteristics of a system, component, or simulation",システム、コンポーネント、またはシミュレーションの特性を定義する変数によって特定の瞬間に想定される値
vapor pressure of a given sample of water at 20 °C,20 °C における特定の水サンプルの蒸気圧
variability defined from an engineer's perspective and not visible to customers,エンジニアの観点から定義され、顧客には見えない変動性
variability implementation methods in a product line for supporting assembly of domain assets,ドメイン資産のアセンブリをサポートするための製品ラインにおける可変性の実装方法
variability that is visible to customers,顧客に見える変動性
variable derived from a set of operations of a construct's multi-item measures defined according to a construct specification (either reflective or formative) that is the way in which the latent variable representing the construct of interest is linked to its measures,対象の構成を表す潜在変数をそのメジャーにリンクする方法である構成の仕様 (反映的または形成的) に従って定義された構成の複数項目のメジャーの一連の操作から導出される変数
variable representing a unidimensional construct,一次元構造を表す変数
variable that can be accessed by only one module or set of nested modules in a computer program,コンピューター プログラム内の 1 つのモジュールまたは入れ子になったモジュールのセットのみがアクセスできる変数
variable that can be accessed by two or more non-nested modules of a computer program without being explicitly passed as a parameter between the modules,モジュール間でパラメーターとして明示的に渡されることなく、コンピューター プログラムの 2 つ以上の入れ子になっていないモジュールからアクセスできる変数
variable that is given a constant value for a specified application,指定されたアプリケーションに対して定数値が与えられる変数
variable that is given a specific value to adapt a program to a given installation site or to given conditions in its operational environment,プログラムを特定の設置場所または動作環境の特定の条件に適合させるために特定の値が与えられる変数
"variable that is set to a prescribed state, often 'true' or 'false,' based on the results of a process or the occurrence of a specified condition",プロセスの結果または指定された条件の発生に基づいて、規定の状態 (多くの場合「true」または「false」) に設定される変数
variable to which a value is assigned as the result of measurement,測定結果として値が代入される変数
variable to which a value is assigned as the result of measurement of a data quality characteristic,データ品質特性の測定結果として値が割り当てられる変数
variable trace that involves only selected variables,選択した変数のみを含む変数トレース
variable used in a software module to represent data or program elements that are to be passed to the module by a calling module,呼び出し側モジュールによってモジュールに渡されるデータまたはプログラム要素を表すためにソフトウェア モジュールで使用される変数
variable used to record the number of occurrences of a given event during the execution of a computer program,コンピュータープログラムの実行中に特定のイベントが発生した回数を記録するために使用される変数
"variable, constant, or function upon which an operation is to be performed",演算が実行される変数、定数、または関数
variables that occur in the expressions associated with the transition,トランジションに関連付けられた式で発生する変数
variance at completion,完了時の差異
variation of a physical quantity used to represent data,データを表すために使用される物理量の変化
variation that occurs at different times,さまざまな時期に起こる変化
variation that occurs at the same time with a different shape,異なる形状と同時に起こる変化
"varies in specificity from very general (e.g., black box or white box) to very specific (e.g., minimum and maximum boundary values)",特異性は、非常に一般的なもの (例: ブラック ボックスまたはホワイト ボックス) から非常に特殊なもの (例: 境界値の最小値と最大値) まで変化します。
"various techniques used to evaluate, analyze, or forecast potential outcomes based on possible variations of project or environmental variables and their relationships with other variables",プロジェクトまたは環境変数の考えられる変動およびそれらの他の変数との関係に基づいて、潜在的な結果を評価、分析、予測するために使用されるさまざまな手法
vendor service context codeset ID,ベンダー サービス コンテキスト コードセット ID
verb or verb phrase placed inside a box that names the modeled function,モデル化された関数の名前を示すボックス内に配置された動詞または動詞句
verb or verb phrase that describes the overall function presented by a diagram,図によって示される全体的な機能を説明する動詞または動詞句
verb or verb phrase that reflects the meaning of the relationship expressed between the two entities shown on the diagram on which the name appears,名前が表示されている図に示されている 2 つのエンティティ間の関係の意味を反映する動詞または動詞句
verbal and graphic statement of an organization's assumptions or intent in regard to an operation or series of operations of a system or a related set of systems,システムまたは関連する一連のシステムの操作または一連の操作に関する組織の仮定または意図を口頭およびグラフィックで表現したもの
"verbal and/or graphic statement, in broad outline, of an organization's assumptions or intent in regard to an operation or series of operations",ある業務または一連の業務に関する組織の想定または意図を大まかに口頭および/または図で表現したもの
"verification and validation performed by an organization that is technically, managerially, and financially independent of the development organization",開発組織から技術的、管理的、財務的に独立した組織によって実行される検証と検証
verification and validation plan,検証と検証計画
verification and validation.,検証と検証。
verification cross-reference matrix,検証相互参照マトリックス
"Verification in a life cycle context is a set of activities that compares a product of the life cycle against the required characteristics for that product. This can include, but is not limited to, specified requirements, design description, and the system itself. The system has been built right. ""Verified"" is used to designate the corresponding status. Verification of interim work products is essential for proper understanding and assessment of the life cycle phase product(s). A system could be verified to meet the stated requirements, yet be unsuitable for operation by the actual users.",ライフサイクルのコンテキストにおける検証は、ライフサイクルの製品をその製品に必要な特性と比較する一連のアクティビティです。これには、指定された要件、設計の説明、システム自体が含まれますが、これらに限定されません。システムは正しく構築されています。 「検証済み」は、対応するステータスを指定するために使用されます。中間作業成果物の検証は、ライフサイクル段階の成果物を適切に理解して評価するために不可欠です。システムは、規定された要件を満たしていることが検証されても、実際のユーザーによる操作には適していない可能性があります。
"Verification of an FSM method should produce a result that indicates the extent to which a performance property is exhibited, or whether a performance property is exhibited to a stated extent. For this reason, there is no concept of ""pass"" or ""fail"". An FSM method can be considered to be either ""verified"" or ""not verified"", for a particular performance property, based on whether or not the appropriate verification has been conducted.",FSM メソッドの検証では、パフォーマンス特性がどの程度発揮されるか、またはパフォーマンス特性が指定された程度まで発揮されるかどうかを示す結果が生成される必要があります。そのため、「合格」「不合格」という概念はありません。 FSM メソッドは、適切な検証が行われたかどうかに基づいて、特定のパフォーマンス特性に関して「検証済み」または「未検証」のいずれかであると見なされます。
version description document,バージョン説明ドキュメント
Version numbers are used to identify the version of the software product being compared with another version.,バージョン番号は、別のバージョンと比較されるソフトウェア製品のバージョンを識別するために使用されます。
"Versions often identify revisions of software that provide unique functionality or fixes. A version typically has multiple parts, such as a major version, indicating large changes in functionality or user interface changes, and a minor version, indicating smaller changes in functionality or user interface changes.",バージョンは、多くの場合、独自の機能や修正を提供するソフトウェアのリビジョンを識別します。通常、バージョンには、機能の大きな変更またはユーザー インターフェイスの変更を示すメジャー バージョンと、機能の小さな変更またはユーザー インターフェイスの変更を示すマイナー バージョンなど、複数の部分があります。
"vertex of a net graph, i.e., a place or a transition",ネット グラフの頂点、つまり場所または遷移
"Vertical microinstructions are relatively short, 12 to 24 bits, and are called 'vertical' because a sequence of such instruction, normally listed vertically on a page, is required to carry out a single machine language instruction.",垂直マイクロ命令は 12 ～ 24 ビットと比較的短く、単一の機械語命令を実行するには、通常はページ上で垂直にリストされる一連の命令が必要であるため、「垂直」と呼ばれます。
very high speed integrated circuit,超高速集積回路
very small entity,非常に小さな存在
"VHDL (IEEE 1076), Verilog (IEEE 1364)",VHDL (IEEE 1076)、Verilog (IEEE 1364)
video random access memory,ビデオランダムアクセスメモリ
view of an object at a specific level of detail,特定の詳細レベルでのオブジェクトのビュー
view of an object that focuses on the information relevant to a particular purpose and ignores the remainder of the information,特定の目的に関連する情報に焦点を当て、残りの情報を無視するオブジェクトのビュー
view of an object which is performing managing actions,管理アクションを実行しているオブジェクトのビュー
view of the management interface of an object which is being managed within an ODP system,ODP システム内で管理されているオブジェクトの管理インターフェイスのビュー
view produced using the identity-style modeling constructs,アイデンティティスタイルのモデリング構造を使用して生成されたビュー
view that represents the structure and semantics of data within an enterprise,企業内のデータの構造とセマンティクスを表すビュー
viewpoint on an ODP system and its environment that focuses on the choice of technology in that system,ODP システムとそのシステムにおけるテクノロジーの選択に焦点を当てたその環境に関する視点
viewpoint on an ODP system and its environment that focuses on the mechanisms and functions required to support distributed interaction between objects in the system,システム内のオブジェクト間の分散対話をサポートするために必要なメカニズムと機能に焦点を当てた、ODP システムとその環境に関する視点
"viewpoint on an ODP system and its environment that focuses on the purpose, scope, and policies for that system",ODP システムとそのシステムの目的、範囲、ポリシーに焦点を当てたその環境に関する視点
viewpoint on an ODP system and its environment that focuses on the semantics of information and information processing,情報と情報処理のセマンティクスに焦点を当てた ODP システムとその環境に関する視点
viewpoint on an ODP system and its environment which enables distribution through functional decomposition of the system into objects which interact at interfaces,ODP システムとその環境に関する視点。システムをインターフェースで対話するオブジェクトに機能的に分解することで配布を可能にします。
violation of a contract,契約違反
violation of the structural or grammatical rules defined for a language,言語に定義された構造的または文法的規則の違反
"virtual data processing system that appears to be at the disposal of a particular user, but whose functions are accomplished by sharing the resources of a real data processing system",特定のユーザーが自由に使えるように見えるが、その機能は実際のデータ処理システムのリソースを共有することによって達成される仮想データ処理システム
"Visibility is private, protected, or public.",可視性はプライベート、保護、またはパブリックです。
visible and quantifiable abstractions of computing system characteristics having attributes in isolation and relationships in context,単独の属性とコンテキスト内の関係を持つコンピューティング システムの特性の目に見えて定量化可能な抽象化
"visual examination of a software product to detect and identify software anomalies, including errors and deviations from standards and specifications",エラーや標準や仕様からの逸脱など、ソフトウェアの異常を検出および特定するためのソフトウェア製品の視覚的検査
visual or audible message sent by a program to request or guide the user's response,ユーザーの応答を要求または誘導するためにプログラムによって送信される視覚的または聴覚的なメッセージ
"Vocabulary is generally used to keep consistency, to avoid duplication, and to support synonyms.",語彙は通常、一貫性を保ち、重複を避け、同義語をサポートするために使用されます。
volatile memory that uses magnetic rings as the storage element,磁気リングを記憶素子として使用する揮発性メモリ
"volatile semiconductor storage device which allows data to be written or accessed in approximately the same amount of time, regardless of the data's physical location",データの物理的な場所に関係なく、ほぼ同じ時間でデータの書き込みまたはアクセスを可能にする揮発性半導体記憶装置
watchdog timer,ウォッチドッグタイマー
way that an organization expresses support for process improvement projects or initiatives,組織がプロセス改善プロジェクトまたは取り組みへの支持を表明する方法
way to ascertain or appraise value by comparing it to a norm,標準と比較することによって価値を確認または評価する方法
Wchar Transmission Code Set,Wchar送信コードセット
Web Content Accessibility Guidelines,Web コンテンツのアクセシビリティに関するガイドライン
Web sites store/retrieve cookies from user client systems to maintain state information including identification of users and transaction coherency.,Web サイトは、ユーザーの識別やトランザクションの一貫性などの状態情報を維持するために、ユーザーのクライアント システムから Cookie を保存/取得します。
whatever causes a unit to exhibit an occurrence of a behavior pattern in the unit's repertoire; something causing or regarded as causing a response,ユニットがそのユニットのレパートリー内の行動パターンの発生を示す原因となるものは何でも。反応を引き起こす、または反応を引き起こすと考えられる何か
"When a relationship exists between two state classes, each class contains a participant property for that relationship. A participant property is a mapping from a state class to a related (not necessarily distinct) state class. The name of each participant property is the name of the role that the other class plays in the relationship, or it simply the name of the class at the other end of the relationship (as long as using the class name does not cause ambiguity). A value of a participant property is the identity of a related instance.",2 つの状態クラス間に関係が存在する場合、各クラスにはその関係の参加者プロパティが含まれます。参加者プロパティは、状態クラスから関連する (必ずしも別個の) 状態クラスへのマッピングです。各参加者プロパティの名前は、関係において他のクラスが果たす役割の名前、または単に関係のもう一方の端にあるクラスの名前です (クラス名の使用によって曖昧さが生じない限り)。参加者プロパティの値は、関連するインスタンスの ID です。
when the user communicates with the computer in a conversational-type manner,ユーザーが会話形式でコンピュータと通信するとき
"While in general the word entity can be used to refer to anything, in the context of modeling it is reserved to refer to things in the universe of discourse being modeled.",一般に、エンティティという言葉はあらゆるものを指すために使用できますが、モデリングの文脈では、モデル化される言説の世界にあるものを指すために予約されています。
window that contains information that depends on information in another window (the primary window),別のウィンドウ (プライマリ ウィンドウ) の情報に依存する情報を含むウィンドウ
Wireless Application Protocol,ワイヤレスアプリケーションプロトコル
"With this method, the called module cannot change the value of the parameter as stored by the calling module.",このメソッドを使用すると、呼び出されたモジュールは、呼び出しモジュールによって保存されたパラメーターの値を変更できません。
"With this method, the called module has the ability to change the value of the parameter stored by the calling module.",このメソッドを使用すると、呼び出されたモジュールは、呼び出し側モジュールによって保存されたパラメータの値を変更できます。
"withdrawal of active support by the operation and maintenance organization, partial or total replacement by a new system, or installation of an upgraded system",運用保守組織によるアクティブなサポートの中止、新しいシステムによる部分的または全体的な置き換え、またはアップグレードされたシステムの設置
"within an IDEF0 model, a model name, a box name, or an arrow label",IDEF0 モデル内、モデル名、ボックス名、または矢印ラベル
"within the quality management system, a general concept of delivering results that fall within the limits that define acceptable variation for a quality requirement",品質管理システム内で、品質要件の許容可能な変動を定義する制限内に収まる結果を提供するという一般的な概念
"within the quality management system, a state of fulfillment in which the needs of a customer are met or exceeded for the customer's expected experiences as assessed by the customer at the moment of evaluation",品質マネジメント システム内で、評価の時点で顧客が評価した、顧客の期待されるエクスペリエンスに対して顧客のニーズが満たされる、またはそれを上回る満足の状態。
"Within the quality management system, accuracy is an assessment of correctness",品質管理システムにおいて、正確さは正確さの評価です。
without internal conflicts,内部対立なしで
"word in a programming language, of which the meaning is fixed by the rules of that language and which, in certain or all contexts, cannot be used by the programmer for any purpose other than its intended one",プログラミング言語の単語で、その意味はその言語の規則によって固定されており、特定のまたはすべての文脈において、プログラマーは意図した目的以外に使用することはできません。
word or part of a word used to alter a computer instruction,コンピュータ命令を変更するために使用される単語または単語の一部
word or phrase that designates some model construct,何らかのモデル構成を指定する単語またはフレーズ
"word or phrase that is attached to, or part of, a model graphic",モデル グラフィックに付加されている、またはモデル グラフィックの一部である単語または語句
"work associated with performing the V&V processes, activities, and tasks",V&V プロセス、アクティビティ、およびタスクの実行に関連する作業
work breakdown structure,作業分解構造
"work effort that is separate, distinct, and related to the completion of specific work breakdown structure components and deliverables, and that can be directly planned and measured",個別かつ明確であり、特定の作業分解構造のコンポーネントおよび成果物の完了に関連しており、直接計画および測定できる作業労力
"work product establishing the conventions for the construction, interpretation and use of architecture views to frame specific system concerns",特定のシステム上の懸念事項を構成するためのアーキテクチャ ビューの構築、解釈、および使用に関する規則を確立する作業成果物
work product expressing the architecture of a system from the perspective of specific system concerns,特定のシステムの問題の観点からシステムのアーキテクチャを表現する作業成果物
work product that is an object of testing,テストの対象となる作業成果物
work product used to express an architecture,アーキテクチャを表現するために使用される成果物
"work products, practice, or resource",作業成果物、実践、またはリソース
World Wide Web Consortium,ワールドワイドウェブコンソーシアム
worldwide interlinked computer systems and networks connected by gateways that enable the transfer of data between them,相互間のデータ転送を可能にするゲートウェイによって接続された世界中の相互リンクされたコンピュータ システムとネットワーク
written authorization that a computer system is secure and is permitted to operate in a defined environment,コンピュータ システムが安全であり、定義された環境での動作が許可されていることを示す書面による承認
"written authorization to accept a configuration item or other designated item which, during production or after having been submitted for inspection, is found to depart from specified requirements, but is nevertheless considered suitable for use as is or after rework by an approved method",製造中または検査に提出された後に指定された要件から逸脱していることが判明したが、それでもそのままの使用または承認された方法による再加工後に使用するのに適しているとみなされる構成アイテムまたはその他の指定アイテムを受け入れる書面による許可
"written authorization, granted prior to the manufacture of an item, to depart from a particular performance or design requirement for a specific number of units or a specific period of time",特定のユニット数または特定の期間について、特定の性能または設計要件から逸脱するために、品目の製造前に与えられる書面による許可。
"written notification, by an authorized representative, that an information item appears to satisfy requirements and is complete",権限のある代表者による、情報項目が要件を満たしていると思われ、完全であることを示す書面による通知
"written or pictorial information describing, defining, specifying, reporting, or certifying activities, requirements, procedures, or results",活動、要件、手順、または結果を説明、定義、指定、報告、または認証する書面または絵による情報
written sets of questions designed to quickly accumulate information from a large number of respondents,多数の回答者からの情報を迅速に蓄積するように設計された一連の書面による質問
X/Open Federated Naming,X/Open フェデレーテッドネーミング
XML document that contains one or more net graphs,1 つ以上のネット グラフを含む XML ドキュメント
XML documents follow all rules defined in an XSD definition in order to be considered a valid document.,XML ドキュメントは、有効なドキュメントとみなされるために、XSD 定義で定義されたすべてのルールに従います。
XML Metadata Interchange,XMLメタデータ交換
XML schema definition,XMLスキーマ定義
XML schema document,XMLスキーマドキュメント
XML-based language that specifies a set of rules and structure for the creation of XML documents,XML ドキュメントを作成するための一連のルールと構造を指定する XML ベースの言語
Y = X,Y = X
"Y = X + N, where X and Y are floating point variables and N is an integer variable",Y = X + N、X と Y は浮動小数点変数、N は整数変数です